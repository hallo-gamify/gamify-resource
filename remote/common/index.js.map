{"version":3,"sources":["../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/gamify/dispatchers/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/gamify/dispatchers/ActionQueueDispatcher.ts","../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/gamify/dispatchers/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/gamify/dispatchers/ActionStoreDispatcher.ts","../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/gamify/master/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/gamify/master/AsyncWaitify.ts","../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/ui/audio/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/ui/audio/AudioConfig.ts","../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/ui/audio/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/ui/audio/AudioReference.ts","../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/gamify/dispatchers/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/gamify/dispatchers/BasicDispatcher.ts","../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/parasites/clip/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/parasites/clip/ChainClip.ts","../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/gamify/core/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/gamify/core/Dispatcher.ts","../virtual:/cc/virtual:/cc/env","../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/ui/button/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/ui/button/FloatButton.ts","../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/ui/popup/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/ui/popup/GamePopup.ts","../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/utils/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/utils/GameUtils.ts","../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/gamify/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/gamify/GamifyComponent.ts","../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/gamify/dispatchers/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/gamify/dispatchers/GamifyDispatcher.ts","../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/gamify/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/gamify/GamifyScenario.ts","../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/gamify/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/gamify/GamifyStore.ts","../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/gamify/utils/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/gamify/utils/Helper.ts","../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/ui/l10n/plugins/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/ui/l10n/plugins/LanguageConvertorPackage.ts","../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/remote/common/scripts/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/remote/common/scripts/LobbyPopup.ts","../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/ui/l10n/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/ui/l10n/LocalizationController.ts","../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/gamify/dispatchers/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/gamify/dispatchers/MechanicDispatcher.ts","../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/ui/l10n/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/ui/l10n/MultilingualController.ts","../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/ui/l10n/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/ui/l10n/MultilingualConvertor.ts","../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/gamify/master/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/gamify/master/ParasiteComponent.ts","../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/remote/common/scripts/ui/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/remote/common/scripts/ui/PlayerInboxButton.ts","../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/remote/common/scripts/ui/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/remote/common/scripts/ui/PlayerInboxItem.ts","../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/remote/common/scripts/network/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/remote/common/scripts/network/PlayerInboxNetwork.ts","../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/remote/common/scripts/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/remote/common/scripts/PlayerInboxPopup.ts","../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/remote/common/scripts/types/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/remote/common/scripts/types/PlayerInboxType.ts","../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/gamify/core/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/gamify/core/Reducer.ts","../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/ui/l10n/plugins/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/ui/l10n/plugins/RemoteMultilingualTextPackage.ts","../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/gamify/utils/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/gamify/utils/RemoteScriptImporter.ts","../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/gamify/dispatchers/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/gamify/dispatchers/RenderOrderDispatcher.ts","../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/gamify/dispatchers/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/gamify/dispatchers/RenderQueueDispatcher.ts","../cce:/internal/cce:/internal/rollupPluginModLoBabelHelpers.js","../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/gamify/utils/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/gamify/utils/SearchingSet.ts","../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/ui/api/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/ui/api/ServiceRequestConfig.ts","../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/gamify/utils/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/gamify/utils/Setting.ts","../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/parasites/spine/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/parasites/spine/SkeletonClip.ts","../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/ui/anims/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/ui/anims/SpineClip.ts","../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/ui/actions/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/ui/actions/StartActions.ts","../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/gamify/core/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/gamify/core/Store.ts","../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/parasites/clip/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/parasites/clip/TimelineClip.ts","../file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/ui/network/file:/D:/PROJECTs/GAMIFY/gamify-templates/assets/Scripts/ui/network/WebSocketComponent.ts"],"names":["ccclass","_decorator","_dec","_class","_BasicDispatcher","ActionQueueDispatcher","_this","_len","arguments","length","args","Array","_key","call","apply","concat","__actionQueue","_inheritsLoose","_proto","prototype","dispatch","action","this","isDispatching","lastAction","Helper","areEqual","push","_stopDispatching","_dispatchQueueActions","shift","destroy","BasicDispatcher","_RF","pop","_ActionQueueDispatche","ActionStoreDispatcher","_storeMapper","Map","_actionStores","_orderConnectorList","_excuteCallback","id","_this$_actionStores","has","actionStoreToken","get","_callbacks","_pendingAction","findMapName","mapToken","stateName","dispatchToken","_this2","fullStateName","forEach","connectorCallLater","isSameName","senderId","_validateIds","sender","modifyActionDispatch","clear","connectStore","actionStateName","outputDispatch","_this3","fullStateNames","searchAllRegisterNames","log","coupleTokens","set","storeToken","isReconnected","disconnectStore","_this4","interator","entries","next","value","_loop","getActionStoreName","key","actionStoreName","split","indexOf","base","_ref","AsyncWaitified","_waitingHandler","waitForReady","_waitForReady","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","Promise","resolve","stop","ready","data","resolveFunc","property","AUDIO_LIST","Enum","audio","target","propertyKey","descriptorOrInitializer","options","normalized","_properties$enumPrope","_properties$indexEnum","_properties$stringPro","constructor","propertyName","toString","enumPropertyName","ENUM_PROPERTY_PREFIX","indexEnumPropertyName","INDEX_PROPERTY_PREFIX","stringPropertyName","STRING_PROPERTY_PREFIX","classStash","CACHE_KEY","ccclassProto","properties","enumPropertyStash","indexEnumPropertyStash","stringPropertyStash","AudioEnum","AudioReference","ENUM","enumPropertyRecordOptions","type","group","displayName","replace","c","toUpperCase","enumPropertyRecord","js","mixin","stringPropertyRecord","serializable","visible","isString","upperCaseFirstCharacter","readonly","tooltip","Object","defineProperty","val","isEnum","GameUtils","updateEnum","lastPreLoad","audioPropertyTags","AUDIO_TAG","isModified","isAudioEnumerated","prevOnLoad","prevOnDestroy","getAudioSourceMethod","stringProperty","onDestroy","defaultAudioName","audioSource","getAudio","disallowMultiple","_this$node","comps","node","getComponents","AudioSource","secondAudioSource","find","searchAudioSource","index","name","addComponent","loop","volume","playOnAwake","clip","delRef","addRef","onLoad","propertyTagName","hasAudio","Proxy","defaultFunction","methodProxy","prop","audioDesc","getPropertyDescriptor","bind","undefined","executeInEditMode","DEFAULT_STORE","AUDIO_MAP","Symbol","AUIDO_ENUM","DEFAULT_ENUM","_Enum","methodName","cSuper","getSuper","Component","_dec2","_dec3","displayOrder","_dec4","override","slide","step","_dec5","_dec6","_dec7","_dec8","_applyDecoratedDescriptor","_class2","_AudioSource","_len2","_key2","_initializerDefineProperty","_descriptor","_assertThisInitialized","_store","_savedVolume","_refMap","_descriptor2","registerAudio","_this$AUDIO_MAP","audioMap","clipName","reduceEnums","error","getClassName","removeAudio","_this$AUDIO_MAP2","size","enumAudio","setKey","newKey","resetDefaultVolume","savedVolume","uuid","_createClass","_volume","Number","isNaN","console","warn","math","clamp","_player","_clip","audioClip","getOwnPropertyDescriptor","configurable","enumerable","writable","initializer","_Dispatcher","_tokenMap","_stateNameMapKeys","_penddingId","_callBackMap","skipInvoking","keys","_isPending","tokenId","_isHandled","validateStateName","__getUniqueStateName","unmapToken","searchRegisterName","filter","instanceIndex","_foundId","_isTokenId","hasRegister","getAllRegistedStates","from","reduce","foundKeys","parsingNames","ids","mapList","validateId","_prefix","getCallBackTask","actionType","dataTasks","startNumber","waitFor","_invokeCallback","Error","tasks","selectedFuntion","Dispatcher","_ParasiteComponent","ChainClip","_$sub","_$controllerClip","_clipNames","hasOwnProperty","_$super","registerClip","excute","_excute","progress","_progress","_callee2","_context2","controller","isExecutable","nextClip","eachCompleted","_x","_eachCompleted","_callee3","_context3","completed","_completed","_callee4","_context4","sub","findControllerClip","prevClip","isChildClassOf","ParasiteComponent","__ccClassName","create","_dataTaskPromise","_id","_isDispatching","_lastID","_count","register","callback","unregister","ii","__detectCircleLoop","_startDispatching","err","JSON","stringify","_instance","requireComponent","UITransform","UIOpacity","EventHandler","_Component","FloatButton","saveKey","touchOffset","minVec","Vec3","maxVec","uiOpacity","dimOpacity","dimDuration","dragable","_this$node2","getHashFromString","getPathInHierarchy","getComponent","Input","EventType","TOUCH_START","on","NodeEventType","MOUSE_ENTER","onMouseEnter","MOUSE_LEAVE","onMouseLeave","onTouchStart","TOUCH_MOVE","onTouchMove","TOUCH_END","onTouchEnd","TOUCH_CANCEL","uiTransform","parentPos","parent","getWorldPosition","nodeSize","contentSize","designSize","view","getDesignResolutionSize","minX","width","maxX","minY","height","maxY","Vec2","x","y","start","savePosStr","getLocalStorageItem","saveData","parse","savePos","z","setWorldPosition","opacity","dimIn","unscheduleAllCallbacks","scheduleOnce","dimOut","event","sys","isMobile","startTouchPoint","getUILocation","startTouchWorldPos","currentWorldPos","subtract","touchPoint","clampf","platform","Platform","MOBILE_BROWSER","getUIStartLocation","onPress","setLocalStorageItem","emitEvents","clickEvents","Tween","stopAllByTarget","tween","to","_GamifyComponent","GamePopup","runInBackground","onInit","readyStates","resizeTransform","canCoverTheScreen","canvas","director","getScene","getComponentInChildren","Canvas","canvasTransform","setContentSize","GamifyComponent","getAsset","assetName","classType","cachedAssets","assetManager","assets","asset","assetKey","condition","canBeNegative","hash","i","charCodeAt","Math","abs","getNameByPath","path","generateSplitRegex","patternRegexStr","brackets","bracket","RegExp","convertUICordinate","point","fromCordinateOfNode","toCordinateOfNode","fromUITranform","toUITranform","worldPoint","relocatePoint","convertToWorldSpaceAR","convertToNodeSpaceAR","relocateUIBoundingBox","targetNode","targetTranform","targetAnchorPoint","anchorPoint","boudingBox","getBoundingBox","relocateMinPoint","xMin","yMin","relocateMaxPoint","xMax","yMax","relocateBoxWidth","relocateBoxHeight","offsetX","offsetY","posX","posY","Rect","countingTween","endNumber","onCounting","option","onDone","fixedNum","fixed","delayTime","delay","duration","startNum","parseFloat","toFixed","endNum","counter","onUpdate","ratio","onComplete","_delay","time","_x2","tweenPromise","_tweenPromise","easing","tweenOptions","position","scale","rotation","quat","Quat","fromEuler","abrupt","sent","_x3","_x4","_x5","setEnumAttr","obj","propName","enumDef","CCClass","Attr","setClassAttr","getList","targetObj","newEnum","defaultEnum","assign","update","getEnumFromArray","fattenKeys","accumulator","enumObj","calculateAligning","elementSize","containerSize","isCover","heightRatio","widthRatio","Size","isLatinWord","word","test","getMaxDateNumber","month","year","numOfDays","formatDate","date","isShortFormat","s","getSeconds","min","getMinutes","h","getHours","d","getDate","m","getMonth","getFullYear","getGMTString","offset_m","getTimezoneOffset","offset_sign","floor","getCreditString","num","displayCurrency","isInteger","getFormattedCreditString","clamped_num","locale_opt","minimumFractionDigits","maximumFractionDigits","style","toLocaleString","getThinCreditString","newVal","trunc","thin_char","isNegativeValue","re","match","result_str","localStorage","getItem","removeLocalStorageItem","removeItem","setItem","mappingArrays","listA","listB","greater","lesser","equality","maxLength","max","a","b","PATTERN_URL","_GamifyStore","_capturedState","_capturedAction","_registerCapturedState","_requireRenders","isSubClass","className","getClassByName","enabled","onPreRender","_onPreRender","done","capturedState","sharedData","capturedAction","onRender","_onRender","_x6","_x7","onCompletedRender","onCompletedAllRenders","wait","dispatcher","getDispatcher","RenderOrderDispatcher","renderBefore","getStateName","render","useCapturedState","clone","registerRender","hasUsingFuntion","removeAllRegisterRender","_this$getDispatcher","getCaptureState","getState","functionName","state","__endingInvokeOnDispatch","__emitChange","__rejectChange","_checkRule","storeClassName","__detectedUndefinedState","GamifyStore","_MechanicDispatcher","GamifyDispatcher","clearInstance","dispatcherClass","instance","_enum_","MechanicDispatcher","GamifyScenario","_selectedAction","isRendering","searchAllStateNames","configAction","recordReceivers","receivers","receiver","removeDefaultActionScenerio","sequence","targetAction","_currentAction","_len3","_key3","registerActionScenario","parallel","_len4","_key4","modify","_len5","_key5","registerConfigAction","ClassTagRegex","OrderTagRegex","STORE_ACTION","NEW_STATE_REGISTED","_Reducer","_stateName","_rollCallCached","initialized","onStoreRegisted","onData","onRemove","onRejectedAction","allowActionTypes","stores","preventDispatching","rollCallSameAction","stateNames","validateCheckList","validateStateNames","valideStateName","rollCallList","rollCallIndex","senderIsMe","nodePath","existedSateNames","getStoreComponent","nodeName","slice","compNode","compName","getStoreName","getIndexOfSameStores","comp","selectedSateName","regExpMatchArray","_regExpMatchArray$","insideTags","_regExpMatchArray$2","parseInt","one","two","getOtherState","inactiveAction","orderStateNames","e","hasOtherState","_this$_currentAction","isStoreRegisted","__prepareInvokeOnDispatch","__shareState","_validateAction","currentStateName","allowTypes","extendAllowType","receiverCondition","receiverName","validateReceiverNames","__setStateName","__invokeOnDispatch","setDispatcher","isForce","currentDispatcher","getDispatchToken","removeDispatcher","gamifyComponentName","Reducer","IHelper","convertToEnum","objOrArray","_IHelper","getHierarchyMethod","calculateClingBox","movingNode","movingNodeTranform","parentNodeTranform","movingAnchorPoint","targetWorldBoudingBox","getBoundingBoxToWorld","targetToMovingNodeMinPoint","targetToMovingNodeMaxPoint","targetToMovingNodeBoudingBoxX","targetToMovingNodeBoudingBoxY","targetToMovingNodeBoudingBoxW","targetToMovingNodeBoudingBoxH","targetToMovingNodeBoudingBox","subClassName","superClassName","searchStringInArray","str","strArray","j","isEmpty","isNull","isArray","_step","_iterator","_createForOfIteratorHelperLoose","_step2","_iterator2","Set","_step3","_iterator3","ArrayBuffer","isView","byteLength","valueOf","excepteds","returnObj","ValueType","typeOf","_isCCClass","merge","toObj","fromObj","getCommand","pattern","searchValue","trim","matchKeys","secondPattern","source","searchPath","currentPath","sPath","sValue","isNumber","searchPathResult","copyInside","fromValue","toPath","modifyValueFunc","paths","pathObj","updateValue","refObj","searchReferenceObject","findIndex","bundle","enumKey","EnumType","enumMember","detechUnitVector","vector","uX","uY","uZ","divide3f","positiveVector","calculateAnchorSizeVector","uVec","tranform","tW","w","tH","aX","anchorX","aY","anchorY","multiply3f","areNegative","vecA","vecB","queryParamsToString","params","map","encodeURIComponent","join","isHttpURL","url","parseHttpURL","urlToArray","request","pairs","substring","pair","decodeURIComponent","arrayToURL","array","getUrlVars","vars","window","location","href","formatFloatToString","maxDigitNum","useLocale","curStr","num_digits_after_decimal","currency","getStringInsideSignal","fullString","signal","signalArr","left","InsideSignalRegex","insideSignalStr","search","searchHubs","searchingSet","SearchingSet","add","results","info","getClassNameFromPrefab","prefab","popupComp","swapElements","arr","i1","i2","LocalizationController","importRemoteCCClass","DEFAULT_ELEMENT_NAME","LangEnum","SupportedLanguages","LocalizeType","SYMBOL_ENUM","NO_CONFIG","STYLE_ENUM","CHOOSE_STYLE_TEMPLATE_FIRST","LanguageSymbol","_spriteFrame","SpriteFrame","_dec9","_class3","_descriptor3","_descriptor4","_descriptor5","spriteFrameEnum","_spriteFrameName","_tag","_spriteFrameEnum","spName","IMAGE_EMBED","IMAGE_NAME","_dec10","remoteCCClass","_dec11","_dec12","_dec13","_dec14","CCBoolean","_dec15","IMAGE_TEXT","_dec16","Prefab","_dec17","styleTemplate","_dec18","language","_dec19","SpriteAtlas","_dec20","RICH_TEXT","_dec21","_dec22","_dec23","_dec24","_dec25","_dec26","_dec27","_dec28","_dec29","_dec30","_dec31","_dec32","_class4","_descriptor6","_class5","LanguageConvertorPackage","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","_descriptor18","_forceRunning","_string","_proto2","translate","force","onStartRender","onDisableRender","save","load","saveContentSize","EDITOR","uiTranform","exampleText","defaultLabel","getTargetComponentAs","Label","string","updateStyleEnums","updateTagEnums","languageInUse","onEnableRender","langNode","getChildByName","removeFromParent","NORMAL_TEXT","renderNormalText","renderRichText","renderImageText","disableTargetComponent","labelComp","spriteComp","Sprite","rawText","getString","_labelIterator$next","selectedTemplate","prefix","getComponentsInChildren","selectedStyle","selectedLabel","getElements","layer","Layers","UI_2D","normalizeLabel","updateRenderData","bubbleResize","normalizeRichText","spriteFrame","selectedSpriteFrame","getSpriteFrame","_imageIterator$next","selectedSprite","getNode","createNewContentWithtemplate","selectedNode","Node","elementNode","instantiate","setPosition","addChild","classConstructor","startIndex","template","elementStyles","_langNode","childNode","langNodeTranform","styleLength","isOverTemplate","container","nextStyleName","nextStyleNode","delegateYield","children","Boolean","defaultAtlas","translatedContent","_keys$shift","replacedKey","subTransContent","getRawText","generateSymbolAtlasEnum","tags","config","styleEnum","label","generateRenderTexts","text","tagData","tag","normalizeLayout","overflow","Overflow","SHRINK","layout","Layout","updateLayout","RESIZE_HEIGHT","Type","VERTICAL","alignHorizontal","NONE","HORIZONTAL","alignVertical","resizeMode","ResizeMode","CONTAINER","removeLayout","_layout","normalizeSize","patternSize","estimateContentSize","fontSize","lineHeight","horizontalAlign","verticalAlign","font","fontFamily","useSystemFont","cacheMode","color","enableWrapText","labelOutline","LabelOutline","selectedLabelOutline","labelShadow","LabelShadow","offset","blur","_defaultLabel","imageIterator","labelIterator","renderTexts","isMultiLines","oneLineSize","renderRichTextMultiline","renderRichTextSingleLine","hasSpriteFrameName","textOrSpriteFrameName","hasEmbedImage","_imageIterator$next2","originSpriteFrameName","sizeMode","SizeMode","RAW","symbolAtlas","CUSTOM","_imageIterator$next3","indexTag","_labelIterator$next2","GRID","startAxis","AxisDirection","verticalDirection","VerticalDirection","TOP_TO_BOTTOM","horizontalDirection","HorizontalDirection","LEFT_TO_RIGHT","constraint","Constraint","maxWidth","lineWidth","siblingIndex","_imageIterator$next4","setSiblingIndex","_imageIterator$next5","splitTextToLineLabels","startWidth","sameLineLabels","stringValue","lastString","lastWidth","estimateLabelWidth","splittedStrings","isASingleWord","newRawText","currentNode","defaultSize","endNode","currentUITransform","_type","_editMode","_styleTemplate","_selectedStyle","_exampleText","_defaultAtlas","atlas","_symbolAtlas","en","LobbyPopupStatus","Color","ServiceRequestConfig","LobbyPopup","servieNetworkName","fillImgWrapper","lobbyURL","_networkState","_networkState2","_networkState3","_networkState4","networkState","payload","API_ACTION","AUTH_RESULT","MainGameAction","INIT","apiService","getAPIData","enableLobby","homeButton","urlSearchParams","URLSearchParams","isURLValid","status","SETUP_COMPLETED","serviceRequest","ResponseAction","t0","hidePopup","displayHomeButton","setButtonColor","buttonColor","serviceName","serviceData","urlStr","showPopup","_showPopup","useEffect","active","_hidePopup","homeIcon","styleSheet","document","createElement","innerText","head","appendChild","fillImg","src","texture","addEventListener","onHomeButtonPressed","body","colorStr","isLobbyEnabled","classList","_onHomeButtonPressed","onCancelButtonPressed","_onCancelButtonPressed","_callee5","_context5","onOKButtonPressed","_onOKButtonPressed","_callee6","_context6","DEFAULT_ATLAS","DEFAULT_GAME_TEXT","CCString","isAutoReplaceMode","setLanguage","lang","_language","setText","sprite","textInfo","textAtlas","addTextInfo","isOverwrite","_extends","addJSONPackage","packageName","jsonPackages","urlVars","selectedLang","verifyLanguage","loadTextResources","then","autoReplaceRawText","ACTION","LANGUAGE_PACKAGE_LOADED","_loadTextResources","all","imageLoading","allTextLoading","onReady","_allTextLoading","commonTextLoading","gameTextLoading","customTextLoading","onTextReady","getLanguageURL","defaultPath","localizedPath","_imageLoading","atlasAssetPath","languageBundle","release","onImageTextReady","_commonTextLoading","textAssetPath","JsonAsset","json","_gameTextLoading","_this5","_customTextLoading","_this6","fontAssetPath","fontAssets","thaiFont","languageName","_onImageTextReady","_callee7","_context7","_onTextReady","_callee8","_context8","_x8","_onReady","_callee9","_context9","_isReady","_this7","namePatternList","walk","child","some","includes","CacheMode","content_str","loaded","resources","_RenderQueueDispatche","_relativeScenarioMap","_configActionMap","renderTask","getRenderTask","applyActionScenario","scenarioSet","relativeMap","parsingIds","nextLeftId","nextRightId","leftIds","rightIds","leftId","leftToken","rightId","_applyRenderBefore","recordAction","removeConfigAction","hasScenario","_generateMechanicRelativeMap","mechanicRelativeMap","_nullObject","RenderQueueDispatcher","_LocalizationControll","MultilingualController","startLocalizing","_startLocalizing","localizingNodes","localComp","MultilingualConvertor","runOnLoad","MultilingualKeyMode","keyMode","STATIC_KEY","_langPackage","_pendingString","defaultLang","onEnable","autoUpdateKey","isReady","defaultStyle","_label","_sprite","NODE_NAME_IS_KEY","LABEL_STRING_IS_KEY","SPRITE_FRAME_IS_KEY","syncKeyToPackages","_keyMode","lastSpriteFrame","descriptor","listOfOverrideMethods","OverrideMethodNameMap","CheckEligibleForInheritance","ExcuteHierarchyOverridding","InitSuper","GetParasiteSuperMethod","SetParasiteSuperMethod","GetOriginMethodName","_$id","_$superName","parasiteComp","component","allNodeComponents","components","numberOfComponent","hostComp","firstParasite","previousCompIndex","allComponents","eligibleForInheritance","investigateComp","componentIsParasite","enabledIndex","previousComponent","hostDesc","originMethodName","thisDesc","getset","superProxy","desc","SpineClip","_FloatButton","PlayerInboxButton","_animation","animation","_onPress","play","_Eventify","PlayerInboxItem","_isActive","deltaTime","claimBefore","isActive","timeRemaining","getTime","Date","now","expireTimeTitle","convertMsToTime","isRead","rewardTitle","count","onClaimReward","emit","EVENT","SELECTED","updateExpireTime","milliseconds","seconds","minutes","hours","days","padTo2Digits","padStart","targetOff","sp","grayscale","Button","interactable","Eventify","PlayerInboxNetworkState","_WebSocketComponent","PlayerInboxNetwork","initNetworkState","connect","_url","_initNetworkState","wssURL","getStartDateParam","paramKey","toISOString","getEndDateParam","onMessage","client","PlayerInboxAction","UPDATE_INBOX","onError","WebSocketComponent","RemoteMultilingualTextPackage","_AsyncWaitify","PlayerInboxPopup","_selectedItemInfo","servieName","_continue","SETTING","CLAIM","SHOW","HIDE","PlayerInboxStatus","SHOW_ICON_VIEW","waitForStore","checkAndUpdateClaimmingState","implementSettingState","SHOW_INBOX_VIEW","READY","HIDE_VIEW","claimed","SHOW_CONTINUE_VIEW","UPDATE","AUTO_SPIN","showIconViewRender","showInboxViewRender","requestInboxStateRender","requestClaimmingStateRender","updateAutoSpinSettingRender","showContinuePopupRender","executeSpinStateRender","playerReward","getClaimedRewards","claimedInfo","getClaimInfoFromRewardData","_claimedInfo$data","_claimedInfo$data2","lastStatus","_requestInboxStateRender","listingService","renderInboxList","_requestClaimmingStateRender","_capturedState$claime","_capturedState$claime2","claimUrl","_claimedInfo","claimService","_updateAutoSpinSettingRender","_state$claimed","rewardCount","betSetting","isUnstopable","isUnstoppable","autoSpinNumber","betConfig","_executeSpinStateRender","SPIN","_showContinuePopupRender","curtain","playerInboxPanel","closeButton","continueNotication","dragButton","_showInboxViewRender","_showIconViewRender","_x9","claimedReward","reward","getPlayMode","spinData","spin","numOfFreeSpin","freeSpins","rewardData","claimId","_renderInboxList","_networkState$config","_networkState$config2","domain","playerToken","inboxList","playerInbox","emptyNotication","elementData","inboxInfo","createMap","module","sort","timeA","timeB","updateInboxHistoryRender","_x10","_updateInboxHistoryRender","_callee10","_context10","inboxContainer","itemPrefab","languagePackage","removeAllChildren","itemName","itemNode","item","onClaimItem","_x11","_onClaimItem","_callee11","itemInfo","_context11","_x12","onPressIconButton","onPressCloseButton","onPressOkButton","getCurrentRewardId","getCurrentModule","getIsFunParam","AsyncWaitify","UPDATE_SETTING","_Store","_state","initialState","onRejected","__onDispatch","endingState","setState","newState","isForced","startingState","Store","RESOURCE_SERVER","STAGE_LOADING","GAMIFY_WORKSPACE","JSDELIVR_NET","DefaultResourceServer","DefaultBundleName","ERROR_LOADING_BUNDLE","DefaultBundleVersion","ERROR_LOADING_BUNDLE_VERSION","hostIndex","_onLoad","startLoadingLanguagePack","_startLoadingLanguagePack","_this$controller","languageJSONData","currentLanguage","__loadAndParseBundleList","__loadBundle","_loadAndParseLanguagePackage","_loadAndParseBundleList","BundleList","loadAny","hostName","jsonObj","updateBundleEnum","updateBundleVersionEnum","_loadBundle","bundleUrl","bundleName","getBundle","loadBundle","downloadBundle","version","bunderVersion","_loadAndParseLanguagePackage2","_bundleNameIndex","bundleNameIndex","versionList","_bundleVersionIndex","_hostIndex","decorate","proto","ctor","cache","decoratedProto","_ActionStoreDispatche","_orderTasks","_isRendering","_renderMap","validateIds","selectedId","_waitIds","functionTask","allCompletedMethods","callbacks","pendingRenderTasks","pending","reject","continueSharedData","_stopRendering","removeRender","relativeKeys","splice","beforeIds","currentId","selectedActionType","_startRendering","funtionRenderTasks","pendingTasks","isEmptyObject","orderRenderTasks","sortRelativeMap","logTasks","orderRenderId","__excuteTask","renderTasks","lastPromise","renderPromiseTasks","pendingIds","sorttings","pendingObj","sorts","invokeSortRenderTasks","reverseList","reverse","taskId","waitRenderTask","compltedHandlers","completedFunc","_RenderOrderDispatche","_renderQueueTasks","_pauseRendering","renderQueuTasks","pauseRendering","task","asyncGeneratorStep","gen","_next","_throw","arg","_defineProperties","props","_toPropertyKey","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_unsupportedIterableToArray","minLen","_arrayLikeToArray","n","len","arr2","_toPrimitive","input","hint","prim","toPrimitive","res","TypeError","String","decorators","context","decorator","self","ReferenceError","fn","Constructor","protoProps","staticProps","allowArrayLike","it","iterator","subClass","superClass","exports","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","Context","makeInvokeMethod","tryCatch","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","invoke","record","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","delegate","delegateResult","maybeInvokeDelegate","_sent","dispatchException","return","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isGeneratorFunction","genFun","awrap","async","iter","object","skipTempReset","charAt","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","_nonWordRe","DefaultArray","SearchingMath","levenshtein","str1","str2","current","distance","iterateGrams","gramSize","simplified","toLowerCase","lenDiff","gramCounter","grams","_SearchingMath","gramSizeLower","gramSizeUpper","useLevenshtein","exactSet","matchDict","items","_defaultMinScore","defaultValue","minMatchScore","_get","_normalizeStr","_add","setMinScore","minScore","__get","gram","gramCount","otherGramCount","normalizedValue","matches","gramCounts","sumOfSquareGramCounts","pow","matchScore","vectorNormal","sqrt","matchIndex","sortDescending","newResults","endIndex","scoreWordPair","RequestMethod","RequestParamsType","RequestParams","KEY_VALUE","FUNCTIONAL","_CCObject","CCObject","methodId","POST","_adaptor","_waitForReadyCalback","setAdaptor","adaptor","apiServiceClass","networkOrAdaptor","_this$node$getCompone","serviceConfigs","serviceConfig","registerServiceRequest","getRequestConfig","APIServiceAdaptor","_request","triggerParams","networkData","getRequestAction","combinedParams","param","eventHandler","funcionalValue","_eventHandler$target","_componentName","targetCaller","handler","combinedPayloads","payloads","_eventHandler$target2","responseScriptParams","responseScripts","_eventHandler$target3","response_script","_serviceName","getResponseAction","GET","menu","COMMAND","DefaultSkinsEnum","DefaultAnimsEnum","animatable","_TimelineClip","SkeletonClip","generateEnums","adjust","combineNumber","combineString","combineVec2","combineVec3","isAdjustOnRuntime","animIndex","skinIndex","animationName","skinEnum","skeletonData","vec","isLoop","setSkin","skin","setAnimation","setCompleteListener","trackEntry","_Object$assign","_Object$assign2","skeletonSkinEnum","animationSkinEnum","updateAnimation","updateSkin","animEnum","_animIndex","_skin","_skinIndex","TimelineClip","_SkeletonClip","_playlistDuration","setPlaylist","playList","isOnlyThis","_playList","setPlaylistDuration","playlistDuration","audioOfClip","_this$audioOfClip","_this$audioOfClip2","START","LAUNCH","CONTINUE","BUY_FEATURE","QUIT_GAME","CHEAT_GAME","AUTH","CONFI_RESULT","SPIN_RESULT","FEATURE_BUY","FEATURE_BUY_RESULT","TOTAL_HISTORY","TOTAL_HISTORY_RESULT","BET_HISTORY","BET_HISTORY_RESULT","SERVICE_ERROR","_instanceIndex","_dispatchToken","_dispatcher","_changed","this_class","__totalInstances","onChanged","__generateCallBack","hasChanged","GAMIFY_WARNNING","token","CLIP_MODE","_ChainClip","_frameId","_currentFrameId","_currentClipName","_isLoop","_isPause","_isPlaying","_currentToken","_updateRealtime","dt","isPause","clipNames","_play","clipOrder","isPlaying","resume","makePlaylist","pause","playFrom","_playFrom","mode","SEQUENCING","playTo","_playTo","canPlay","isClipInPlayList","frameId","lastId","_mode","IN_ORDER","nextClipName","getClipByName","reducePlaylistInOrderMode","setMode","clipOrderNames","verifyPlaylist","allClipNames","excutabled","clipOrderName","clipOrders","indexOrder","getIdByName","_GamifyScenario","_client","_forceToClose","_connect","readyState","WebSocket","OPEN","close","onopen","onmessage","onerror","onclose","isAutoReconnect","_close","send"],"mappings":"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","file":"all.js","sourcesContent":["\r\nimport { log, warn, _decorator } from 'cc';\r\nimport { DEBUG } from 'cc/env';\r\nimport { Action } from '../core/Action';\r\nimport { IActionQueueDispatcher } from '../interfaces/IDispatcher';\r\nimport { Helper } from '../utils/Helper';\r\nimport { GAMIFY_LOGS } from '../utils/Setting';\r\nimport { BasicDispatcher } from './BasicDispatcher';\r\nconst { ccclass } = _decorator;\r\n\r\n \r\n@ccclass('ActionQueueDispatcher')\r\nexport class ActionQueueDispatcher extends BasicDispatcher implements IActionQueueDispatcher {\r\n    private __actionQueue: Array<Action> = [];\r\n    \r\n    // private __unregisterStateActionQueue: object = Object.create(null);\r\n    \r\n    //--------------- Override --------------\r\n\r\n    /**\r\n     * Bổ sung: \r\n     * - Queue các action được dispatch trong quá trình thực hiện flow trước đó.\r\n     * - Queue các action dành riêng cho một state name chưa được đăng ký.\r\n     * - Kiểm tra và merge các action giống nhau bắn liên tiếp.\r\n     * @param action \r\n     */\r\n    public dispatch(action:Action){       \r\n        // if( this.isDispatching() || (this.__actionQueue && this.__actionQueue.length) ){\r\n        if( this.isDispatching() && this.__actionQueue  ){\r\n            if(this.__actionQueue.length){\r\n                let lastAction:Action = this.__actionQueue[this.__actionQueue.length-1];\r\n                if( Helper.areEqual(lastAction, action) ) {                    \r\n                    DEBUG && GAMIFY_LOGS && log('> MERGE ACTION: <' + action.type + '> sender: ' + action.sender + ' - receivers: ' + (action.receiver || 'All'));\r\n                    return;\r\n                }            \r\n            }\r\n            // \r\n            DEBUG && GAMIFY_LOGS && log('> QUEUED ACTION: <' + action.type + '> sender: ' + action.sender + ' - receivers: ' + action.receiver);\r\n            this.__actionQueue.push(action);\r\n        }else{            \r\n            DEBUG && GAMIFY_LOGS && log('> DISPATCH ACTION: <' + action.type + '> sender: ' + action.sender + ' - receivers: ' + action.receiver);\r\n            super.dispatch(action);\r\n            // this._dispatchQueueActions();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Bổ sung: Chạy dispatch queue các action được cached lại trong quá trình dispatch trước đó.\r\n     */\r\n    protected _stopDispatching(){\r\n        super._stopDispatching();\r\n        this._dispatchQueueActions();\r\n    }\r\n\r\n    /**\r\n     * - Dispatch các action queue\r\n     * - Ưu tiên dispatch các action queue dành cho các state chưa kịp đăng ký, dispatch trước các action queue khác.\r\n     */\r\n    protected _dispatchQueueActions(){ \r\n        if(this.__actionQueue && this.__actionQueue.length){\r\n            let action:Action = this.__actionQueue.shift();\r\n            DEBUG && GAMIFY_LOGS && log('> GET QUEUED ACTION: ' + action.type + ' của ' + action.sender + '---------');\r\n            this.dispatch(action);\r\n        }\r\n        // \r\n    }\r\n\r\n    destroy(){\r\n        super.destroy();\r\n        this.__actionQueue = null;\r\n    }\r\n\r\n}\r\n\r\n\r\n","\r\nimport { _decorator, Component, Node, error, warn, log } from 'cc';\r\nimport { DEV, EDITOR } from 'cc/env';\r\nimport { Action } from '../core/Action';\r\nimport { IActionStoreDispatcher } from '../interfaces/IDispatcher';\r\nimport { GAMIFY_WARNNING } from '../utils/Setting';\r\nimport { ActionQueueDispatcher } from './ActionQueueDispatcher';\r\nconst { ccclass } = _decorator;\r\n\r\n/**\r\n * Predefined variables\r\n * Name = ActionStoreDispatcher\r\n * DateTime = Wed Mar 09 2022 23:26:55 GMT+0700 (Indochina Time)\r\n * Author = hallopatidu\r\n * FileBasename = ActionStoreDispatcher.ts\r\n * FileBasenameNoExtension = ActionStoreDispatcher\r\n * URL = db://assets/scripts/gamify/dispatchers/ActionStoreDispatcher.ts\r\n * ManualUrl = https://docs.cocos.com/creator/3.3/manual/en/\r\n * \r\n * Guide:\r\n * Sử dụng cho GamifyAction kết nối với GamifyStore và GamifyComponent khác.\r\n * GamifyAction kết nối một nhiều với GamifyStore và GamifyComponent khác.\r\n * GamifyAction luôn được thực thi trước cấc GamifyStore và GamifyComponent mỗi khi được kết nối.\r\n * State của GamifyAction chính là action của các GamifyStore và GamifyComponent khác.\r\n * Nếu GamifyStore hoặc GamifyComponent được GamifyAction kết nối chưa được đăng ký dẫn tới việc kết nối không thành công, thì \r\n * mỗi khi GamifyStore hoặc GamifyComponent đó được đăng ký thì việc kết nối sẽ được thực hiện lại.\r\n */\r\n \r\n@ccclass('ActionStoreDispatcher')\r\nexport class ActionStoreDispatcher extends ActionQueueDispatcher implements IActionStoreDispatcher {\r\n\r\n    protected _storeMapper:Map<string, string> = new Map(); // Map< GamifyStore|GamifyComponent Token, GamifyAction Token >\r\n    \r\n    protected _actionStores:Map<string, Function> = new Map(); // Map<GamifyAction token, GamifyAction callback> : Lưu danh sách các GamifyAction đã có kết nối.\r\n\r\n    protected _orderConnectorList:Map<string, Function> = new Map();\r\n\r\n    // ---------- OVERIDE ---------\r\n    \r\n    /**\r\n     * Bổ sung:\r\n     * - Không gọi vào callback của các GamifyAction.\r\n     * - Trường hợp Store có kết nối GamifyAction chưa được đăng ký, Chạy đăng ký kết nối giữa GamifyAction với các GamifyStore hoặc GamifyComponent\r\n     * - Trường hợp Store có kết nối GamifyAction, gọi callback của ActionStore trước để điều khiển callback của Store\r\n     * @param id \r\n     */\r\n    protected _excuteCallback(id:string){        \r\n        if(!this._actionStores?.has(id)){\r\n            // Thực thi hàm callback khi không phải là GamifyAction.\r\n            if(this._storeMapper && this._storeMapper.has(id)){\r\n                let actionStoreToken:string|Function = this._storeMapper.get(id);\r\n                if(actionStoreToken && !(typeof actionStoreToken == 'string')){\r\n                    // Nếu actionStoreToken không phải là dạng string mà là Function thì\r\n                    // có thể lúc dispatch store connect với GamifyAction vẫn chưa được đăng ký.\r\n                    // Chạy đăng ký với callback function đó để lấy GamifyAction Token sau khi chạy Function Task kết nối.\r\n                    actionStoreToken = (actionStoreToken as Function)() as string;\r\n                }\r\n\r\n                if(this._actionStores.has(actionStoreToken as string) ){                \r\n                    // Nếu actionStoreToken có giá trị và dạng string thì đó là token của GamifyAction được kết nối với.\r\n                    // Gọi callback của GamifyAction để điều khiển callback của store.\r\n                    const success:boolean = this._callbacks[actionStoreToken as string](this._pendingAction, this.findMapName(id) , this._callbacks[id]);\r\n                    if(success) {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n            }\r\n            // Nếu GamifyStore không được map với GamifyAction nào thì chạy như một GamifyStore thường.\r\n            // this._callbacks[id](this._pendingAction);\r\n            super._excuteCallback(id);\r\n        }else{\r\n            // Không gọi thực thi hàm callback của các GamifyAction.\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param stateName \r\n     * @param dispatchToken \r\n     * @returns \r\n     */\r\n    public mapToken(stateName:string, dispatchToken:string):string{\r\n        const fullStateName:string = super.mapToken(stateName, dispatchToken);\r\n        // if(stateName == 'APIServices'){\r\n        //     log('-------')\r\n        // }\r\n        // const setupLaterFunc:Function = this._orderConnectorList.get(stateName);\r\n        // setupLaterFunc && setupLaterFunc()\r\n        this._orderConnectorList.forEach((connectorCallLater:Function, stateName:string)=>{\r\n            if(connectorCallLater && this.isSameName(stateName, fullStateName)){\r\n                connectorCallLater(true);\r\n            }\r\n        });\r\n        return fullStateName;\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     * @param action \r\n     */\r\n    public dispatch(action: Action): void {\r\n        const senderId:string = this._validateIds([action.sender])[0];        \r\n        if(senderId){\r\n            if(this._storeMapper.has(senderId)){\r\n                // let actionStoreToken:string|Function = this._storeMapper.get(senderId);\r\n                // if(actionStoreToken && !(typeof actionStoreToken == 'string')){\r\n                //     // Nếu actionStoreToken không phải là dạng string mà là Function thì\r\n                //     // có thể lúc dispatch store connect với GamifyAction vẫn chưa được đăng ký.\r\n                //     // Chạy đăng ký với callback function đó để lấy GamifyAction Token sau khi chạy Function Task kết nối.\r\n                //     actionStoreToken = (actionStoreToken as Function)() as string;\r\n                // }\r\n                let actionStoreToken:string = this._storeMapper.get(senderId) as string;\r\n                if(this._actionStores.has(actionStoreToken as string) ){\r\n                    const modifyActionDispatch:Function = this._actionStores.get(actionStoreToken as string) ;\r\n                    modifyActionDispatch && modifyActionDispatch(action);\r\n                }\r\n            }\r\n        }\r\n        // \r\n        super.dispatch(action);\r\n    }\r\n\r\n    destroy(){\r\n        this._orderConnectorList.clear();\r\n        this._orderConnectorList = null;\r\n        super.destroy()\r\n    }\r\n\r\n    // ---------- FEATURE ---------\r\n\r\n    /**\r\n     * Gắn GamifyAction cho GamifyStore / GamifyComponent.\r\n     * @param actionStateName \r\n     * @param stateName \r\n     */\r\n    public connectStore(actionStateName:string, stateName:string, outputDispatch?:Function ){\r\n        // Tim tat ca cac store co lien quan toi stateName. Truong hop, co nhieu store cung class.\r\n        const fullStateNames:string[] = this.searchAllRegisterNames(stateName);\r\n        log('Cac store ket noi voi '  + actionStateName  + ' la : ' + fullStateNames + ' ( ' + stateName+' ) ');\r\n        fullStateNames.forEach((fullStateNames:string)=>{\r\n            const coupleTokens:string[] = this._validateIds([actionStateName, fullStateNames]);\r\n            const actionStoreToken:string = coupleTokens[0];\r\n            if(actionStoreToken){\r\n                // Chỉ lưu một lần với một action store token.\r\n                if(!this._actionStores.has(actionStoreToken)){\r\n                    this._actionStores.set(actionStoreToken, outputDispatch);\r\n                }\r\n                const storeToken:string = coupleTokens[1];\r\n                if(storeToken && !this._storeMapper.has(storeToken)){\r\n                    this._storeMapper.set(storeToken, actionStoreToken);\r\n                }else{\r\n                    (DEV || EDITOR) && GAMIFY_WARNNING && warn('Store ' + stateName + ' chưa được đăng ký trên Dispatcher ' + this.__ccClassName + \". Hàm connectStore sẽ được gọi lại sau khi Store được đăng ký\");\r\n                }\r\n                // \r\n            }else{\r\n                // Lỗi không tồn tại action store token.\r\n                // (DEV || EDITOR) && GAMIFY_WARNNING && warn('Không tìm được token của Action Store ' + actionStateName + ' tại ' + this.__ccClassName) ;\r\n            }\r\n            //\r\n        });\r\n        // \r\n        if(!this._orderConnectorList.has(stateName)){\r\n            this._orderConnectorList.set(stateName, (isReconnected:boolean):string=>{\r\n                if(isReconnected){\r\n                    this.connectStore(actionStateName, stateName, outputDispatch);\r\n                }\r\n                return actionStateName;\r\n            });\r\n        }\r\n        // \r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Xóa toàn bộ phần tử của _storeMapper liên quan tới stateName.\r\n     * @param stateName \r\n     */\r\n    public disconnectStore(stateName:string){\r\n        const storeToken:string = this._validateIds([stateName])[0] //|| stateName;        \r\n        const interator:IterableIterator<[string, string|Function]> = this._storeMapper.entries();\r\n        let coupleTokens:[string, string|Function] = interator.next().value;\r\n        while(coupleTokens && coupleTokens.length){\r\n            if(coupleTokens[0] == storeToken){\r\n                // Nếu stateName đang khảo sát là GamifyStore hoặc GamifyComponent được kết nối \r\n                // thì xóa phần tử tương ứng trong this._storeMapper\r\n                this._storeMapper.delete(coupleTokens[0]);\r\n                this._actionStores.has(storeToken) && this._actionStores.delete(storeToken);\r\n            }else{\r\n                // Nếu stateName đang khảo sát là GamifyAction thì so sánh với coupleTokens[1]\r\n                let actionStoreToken:string = coupleTokens[1] as string;\r\n                // So sánh actionStoreToken với storeToken là token của GamifyAction đang khảo sát.\r\n                if((typeof actionStoreToken == 'string') && actionStoreToken == storeToken){\r\n                    // Xóa toàn bộ giá trị trong this._storeMapper và this._actionStores có liên quan.\r\n                    // Tại vị trí 0 là coupleTokens[0]\r\n                    this._storeMapper.delete(coupleTokens[0]);\r\n                    // Xoa cac hamm cai dat tham chieu toi store.\r\n                    this._orderConnectorList.forEach((getActionStoreName:Function, key:string)=>{\r\n                        const actionStoreName:string = getActionStoreName();\r\n                        if(actionStoreName && this.findMapName(actionStoreName) == actionStoreToken){\r\n                            this._orderConnectorList.delete(key);\r\n                        }\r\n                    })\r\n                    // \r\n                    this._actionStores.has(storeToken) && this._actionStores.delete(storeToken);\r\n                }\r\n                \r\n            }\r\n            // \r\n            coupleTokens = interator.next().value;\r\n            // \r\n        }\r\n        // \r\n    }\r\n\r\n    \r\n    // ----------- PRIVATE -----------\r\n\r\n    /**\r\n     * \r\n     * @param stateName \r\n     * @returns \r\n     */\r\n    // public searchAllRegisterNames(stateName:string):string[]{\r\n    //     return this.searchAllRegisterNames(stateName);\r\n    // }\r\n\r\n    /**\r\n     * \r\n     * @param stateName \r\n     * @param fullStateName \r\n     * @returns \r\n     */\r\n    private isSameName(stateName:string, fullStateName:string):boolean{\r\n        const splittingKeys:string[] = fullStateName.split(/\\<|\\>/);\r\n        return (splittingKeys.indexOf(stateName) != -1);\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { js } from 'cc';\r\nimport { _decorator, Component, Node } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n// @ccclass('AsyncWaitify')\r\n// export class AsyncWaitify extends Component {\r\n//     start() {\r\n\r\n//     }\r\n\r\n//     update(deltaTime: number) {\r\n        \r\n//     }\r\n// }\r\ntype Constructor<T> = new (...args: any[]) => T;\r\n\r\nexport interface IAsyncWaitified {\r\n    waitForReady():Promise<any>\r\n    ready(data?:any):void\r\n}\r\n\r\nexport function AsyncWaitify<TBase> (base: Constructor<TBase>): Constructor<TBase & IAsyncWaitified> {\r\n    class AsyncWaitified extends (base as unknown as any) implements IAsyncWaitified {\r\n        private _waitingHandler: Function[] = [];\r\n        async waitForReady(){\r\n            if(this._waitingHandler){\r\n                await new Promise((resolve:Function)=>{\r\n                    this._waitingHandler.push(resolve)\r\n                })\r\n            }\r\n        }\r\n\r\n        ready(data?:any){\r\n            if(this._waitingHandler && this._waitingHandler.length){\r\n                while(this._waitingHandler.length){\r\n                    const resolveFunc:Function = this._waitingHandler.shift();\r\n                    resolveFunc(data);\r\n                }                \r\n            }\r\n            this._waitingHandler = null\r\n        }\r\n    }\r\n    \r\n    // Mixin with `CallbacksInvokers`'s prototype\r\n    // const callbacksInvokerPrototype = CallbacksInvoker.prototype;\r\n    // const propertyKeys: (string | symbol)[] =        (Object.getOwnPropertyNames(callbacksInvokerPrototype) as (string | symbol)[]).concat(\r\n    //     Object.getOwnPropertySymbols(callbacksInvokerPrototype),\r\n    // );\r\n    // for (let iPropertyKey = 0; iPropertyKey < propertyKeys.length; ++iPropertyKey) {\r\n    //     const propertyKey = propertyKeys[iPropertyKey];\r\n    //     if (!(propertyKey in AsyncWaitified.prototype)) {\r\n    //         const propertyDescriptor = Object.getOwnPropertyDescriptor(callbacksInvokerPrototype, propertyKey);\r\n    //         if (propertyDescriptor) {\r\n    //             Object.defineProperty(AsyncWaitified.prototype, propertyKey, propertyDescriptor);\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    return AsyncWaitified as unknown as Constructor<TBase & IAsyncWaitified>;\r\n}\r\n","import { Enum } from \"cc\";\r\n\r\n\r\nexport enum AUDIO_LIST  {\r\n    BGM_BigWin_Main,\r\n    BGM_BigWin_Outro,\r\n    BGM_FS,\r\n    BGM_MegaWin_Main,\r\n    BGM_MegaWin_Outro,\r\n    BGM_MG,\r\n    BGM_SuperWin_Main,\r\n    BGM_SuperWin_Outro,\r\n    BGM_TotalWin_Main,\r\n    BGM_TotalWin_Outro,\r\n    BGM_Win_Intro,\r\n    AMB_Jungle,\r\n    sfx_autospin_special_round,\r\n    SFX_FSStartPg,\r\n    SFX_HyperReel,\r\n    sfx_Money_Down,\r\n    sfx_Money_Up,\r\n    SFX_Multiplier,\r\n    SFX_PrizeBannerCount,\r\n    SFX_PrizeInfoBarCount,\r\n    SFX_PrizeSmallWin,\r\n    SFX_PrizeTotalWin,\r\n    SFX_ReelSpin,\r\n    SFX_ReelStopFst,\r\n    SFX_ReelStopNrm,\r\n    SFX_Scatter,\r\n    SFX_SpinButton,\r\n    SFX_SymDrop,\r\n    SFX_SymShuffleGlow,\r\n    SFX_SymSingleShuffle,\r\n    SFX_UICollect,\r\n    SFX_UIGeneric,\r\n    SFX_UIStart,\r\n    SFX_Wild,\r\n    SFX_WinMedal,\r\n    SFX_WinSymHighlight,\r\n    SFX_WinSymHighlightBeep,\r\n    SFX_WinSymHilight,\r\n    SFX_WinSymSingleHighlight,\r\n    SFX_WinSymSparkleDisappear,\r\n}\r\nEnum(AUDIO_LIST);\r\n\r\n// export enum AUDIO_LIST {    \r\n//     BGM_Win_Intro,\r\n//     BGM_BigWin_Main,\r\n//     BGM_BigWin_Outro,\r\n//     BGM_MegaWin_Main,\r\n//     BGM_MegaWin_Outro,\r\n//     BGM_SuperWin_Main,\r\n//     BGM_SuperWin_Outro,\r\n//     BGM_TotalWin_Main,\r\n//     BGM_TotalWin_Outro,\r\n//     SFX_UIGeneric,\r\n//     SFX_PrizeBannerCount,\r\n//     SFX_PrizeInfoBarCount\r\n// }\r\n// Enum(AUDIO_LIST);\r\n\r\n\r\n\r\n// import { _decorator, Component, Node } from 'cc';\r\n// const { ccclass, property } = _decorator;\r\n\r\n\r\n// @ccclass('AudioConfig')\r\n// export class AudioConfig extends Component {\r\n//     start() {\r\n\r\n//     }\r\n\r\n//     update(deltaTime: number) {\r\n        \r\n//     }\r\n// }\r\n\r\n\r\n","import { __private } from 'cc';\r\nimport { Enum } from 'cc';\r\nimport { warn } from 'cc';\r\nimport { AudioClip } from 'cc';\r\nimport { log } from 'cc';\r\nimport { AudioSource } from 'cc';\r\nimport { _decorator, Component, Node } from 'cc';\r\nimport { GameUtils } from '../../utils/GameUtils';\r\nimport { js } from 'cc';\r\nimport { error } from 'cc';\r\nimport { DEV, EDITOR } from 'cc/env';\r\nimport { math } from 'cc';\r\nimport { Helper } from '../../gamify/utils/Helper';\r\n\r\nconst { ccclass, property, executeInEditMode } = _decorator;\r\n\r\nconst CACHE_KEY = '__ccclassCache__';\r\nconst DEFAULT_STORE = 'Global';\r\nconst ENUM_PROPERTY_PREFIX:string = '__$enum_';\r\nconst STRING_PROPERTY_PREFIX:string = '__$string_';\r\nconst INDEX_PROPERTY_PREFIX:string = '__$number_';\r\nconst UNKNOW_AUDIO:string = 'UNKNOW_AUDIO';\r\nconst AUDIO_MAP:any = Symbol();\r\nconst AUDIO_TAG:any = Symbol();\r\nconst AUIDO_ENUM:any = Symbol();\r\nconst DEFAULT_ENUM:any = Enum({    \r\n    [UNKNOW_AUDIO]:0\r\n})\r\n// const GetParasiteSuperMethod:any = Symbol();\r\nconst isAudioEnumerated:any = Symbol();\r\nconst getAudioSourceMethod:any = Symbol();\r\n\r\n/**\r\n * \r\n * @param constructor \r\n * @param methodName \r\n * @returns \r\n */\r\nfunction isModified(constructor:any, methodName:any):boolean{    \r\n    const cSuper:any = js.getSuper(constructor);\r\n    return constructor[methodName] ? true : cSuper !== Component ? isModified(cSuper, methodName) : false;\r\n}\r\n\r\ntype Initializer = () => unknown;\r\ntype AudioSourceType = {[n:string|number]:number|string}\r\ntype IPropertyOptions = __private._cocos_core_data_decorators_property__IPropertyOptions;\r\ntype PropertyType = __private._cocos_core_data_decorators_property__PropertyType;\r\ntype LegacyPropertyDecorator = __private._cocos_core_data_decorators_utils__LegacyPropertyDecorator;\r\ntype BabelPropertyDecoratorDescriptor = PropertyDescriptor & { initializer?: Initializer };\r\n\r\n// \r\n\r\n/**\r\n * '@audio'             Developer can choose a Sound in all of AudioReference exist in Scene at that time. Using default AudioReference.Enum \r\n * '@audio(String)'     The developer defines a key of a specific AudioReference. Sound could not be played if this AudioReference is not exist.\r\n * '@audio(Enum)'       Developer can choose a Sound in Enum list.\r\n * @param options \r\n */\r\nexport function audio(options?: IPropertyOptions|string|unknown): LegacyPropertyDecorator;\r\nexport function audio(type?: PropertyType): LegacyPropertyDecorator;\r\nexport function audio(...args: Parameters<LegacyPropertyDecorator>): void;\r\nexport function audio(\r\n    target?: Parameters<LegacyPropertyDecorator>[0]| PropertyType, \r\n    propertyKey?: Parameters<LegacyPropertyDecorator>[1], \r\n    descriptorOrInitializer?: BabelPropertyDecoratorDescriptor\r\n){\r\n    let options: string|IPropertyOptions | PropertyType | null | unknown = null;    \r\n    function normalized (target: Parameters<LegacyPropertyDecorator>[0],\r\n        propertyKey: Parameters<LegacyPropertyDecorator>[1],\r\n        descriptorOrInitializer:  BabelPropertyDecoratorDescriptor)\r\n    {\r\n        // ----------------\r\n        const constructor:any = target.constructor;  \r\n        const propertyName:string = propertyKey.toString();\r\n        const enumPropertyName:any = ENUM_PROPERTY_PREFIX + propertyName;\r\n        const indexEnumPropertyName:any = INDEX_PROPERTY_PREFIX + propertyName;\r\n        const stringPropertyName:any = STRING_PROPERTY_PREFIX + propertyName;\r\n        //        \r\n        const classStash:unknown = constructor[CACHE_KEY] || ((constructor[CACHE_KEY]) = {});\r\n        const ccclassProto:unknown = classStash['proto'] || ((classStash['proto'])={});\r\n        const properties:unknown = ccclassProto['properties'] || ((ccclassProto['properties'])={});\r\n        const enumPropertyStash:unknown = properties[enumPropertyName] ??= {};        \r\n        const indexEnumPropertyStash:unknown = properties[indexEnumPropertyName] ??= {};        \r\n        const stringPropertyStash:unknown = properties[stringPropertyName] ??= {};\r\n        let AudioEnum:unknown = AudioReference.ENUM;\r\n        // \r\n        const indexEnumRecordOptions:any = {\r\n            serializable:true,       \r\n            visible:false\r\n        }\r\n        const stringEnumRecordOptions:any = {\r\n            serializable:true,\r\n            visible:false\r\n        }\r\n\r\n        const enumPropertyRecordOptions:any = {\r\n            type:AudioEnum,\r\n            group:'AUDIO',\r\n            // serializable:true,       \r\n            displayName: ''+ propertyName.replace(/\\b\\w/g, c => c.toUpperCase()).replace(/(?=[A-Z])/g,' ')+'',  // upper first character\r\n            // visible:true\r\n        }\r\n        \r\n        const enumPropertyRecord:any = js.mixin(enumPropertyStash, enumPropertyRecordOptions);\r\n        const indexEnumPropertyRecord:any = js.mixin(indexEnumPropertyStash, indexEnumRecordOptions);\r\n        const stringPropertyRecord:any = js.mixin(stringPropertyStash, stringEnumRecordOptions);\r\n        // \r\n        if(options){\r\n            if(js.isString(options)){\r\n                stringPropertyRecord.default = options;\r\n                stringPropertyRecord.displayName = ''+ Helper.upperCaseFirstCharacter(propertyName) +'';  // upper first character\r\n                stringPropertyRecord.visible = true;\r\n                stringPropertyRecord.readonly = true;\r\n                stringPropertyRecord.group = 'AUDIO';\r\n                stringPropertyRecord.tooltip = '\"' + options.toString() + '\" key is fixed in your code';\r\n                // Display string property\r\n                Object.defineProperty(target, stringPropertyName, {\r\n                    get:function():string{\r\n                        return options as string;\r\n                    },\r\n                    set:function(val:string){           \r\n                        this[indexEnumPropertyName] = -1;\r\n                    }\r\n                })\r\n                // \r\n            }else if(Enum.isEnum(options)){\r\n                AudioEnum = Enum(options)\r\n                enumPropertyRecord.visible = true;\r\n                enumPropertyRecord.type = AudioEnum;                \r\n                // Display enum property\r\n                Object.defineProperty(target, enumPropertyName, {\r\n                    get:function():number{                \r\n                        return !this[indexEnumPropertyName] || this[indexEnumPropertyName] == -1 ? AudioEnum[this[stringPropertyName]] :this[indexEnumPropertyName];\r\n                    },\r\n                    set:function(val:number){           \r\n                        this[indexEnumPropertyName] = val;     \r\n                        if(val !== AudioEnum[UNKNOW_AUDIO]){                   \r\n                            this[stringPropertyName] = AudioEnum[val] as string;\r\n                        }else{\r\n                            GameUtils.updateEnum(this, enumPropertyName,  AudioEnum);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }else{\r\n            enumPropertyRecord.visible = true\r\n            // enumPropertyRecord.displayName = ''+ propertyName.replace(/\\b\\w/g, c => c.toUpperCase()).replace(/(?=[A-Z])/g,' ')+'';  // upper first character\r\n            enumPropertyRecord.displayName = '' + Helper.upperCaseFirstCharacter(propertyName) + '';  // upper first character\r\n            // Display enum property\r\n            Object.defineProperty(target, enumPropertyName, {\r\n                get:function():number{                \r\n                    return !this[indexEnumPropertyName] || this[indexEnumPropertyName] == -1 ? AudioReference.ENUM[this[stringPropertyName]] :this[indexEnumPropertyName];\r\n                },\r\n                set:function(val:number){           \r\n                    this[indexEnumPropertyName] = val;     \r\n                    if(val !== AudioReference.ENUM[UNKNOW_AUDIO]){                   \r\n                        this[stringPropertyName] = AudioReference.ENUM[val] as string;\r\n                    }else{\r\n                        GameUtils.updateEnum(this, enumPropertyName,  AudioReference.ENUM);\r\n                    }\r\n                }\r\n            });\r\n            // \r\n        }\r\n        // \r\n        const audioPropertyTags:string[] = constructor[AUDIO_TAG] || ((constructor[AUDIO_TAG]) = []);\r\n        (audioPropertyTags.indexOf(propertyName) == -1) && audioPropertyTags.push(propertyName); \r\n        // \r\n        constructor['_executeInEditMode'] = true;\r\n        //         \r\n        // if(!target[isAudioEnumerated]){\r\n        if(!isModified(constructor, isAudioEnumerated)){\r\n            constructor[isAudioEnumerated] = true;\r\n            // If you overrided onLoad function here, I couldn't modify onLoad function for converting cccomponent to gamify component which created by @gamify decorator. \r\n            // Because, We are working with initialized instance. It's not a instance which game would be used.\r\n            // So, we will override __preload function to prepare for overriding onLoad. You can get effect that you wanna.\r\n            // Because, when the __preload function is called, the onLoad function was initianized completely.\r\n            // Summary, we are working on constructing phase. Do not runtime phase.\r\n            // ----------------------------------------------------------------            \r\n            target['__preload'] = ((lastPreLoad:Function)=>{\r\n                // \r\n                // this.constructor[isAudioEnumerated] = true;\r\n                return function(...args:any){\r\n                    // \r\n                    this[getAudioSourceMethod] = function(stringProperty:string):AudioSource{\r\n                        // const classOption:any = AudioSource;\r\n                        const defaultAudioName:string = this[stringProperty];\r\n                        let audioSource:AudioReference = AudioReference.getAudio(defaultAudioName);\r\n                        if(audioSource && !audioSource.disallowMultiple){\r\n                            const comps:AudioSource[] = this.node?.getComponents(AudioSource);\r\n                            let foundId:number = comps.length;\r\n                            let secondAudioSource:AudioSource = comps.find((searchAudioSource: AudioSource, index:number)=>{\r\n                                if (searchAudioSource.name == defaultAudioName){\r\n                                    foundId = index;\r\n                                    return true;\r\n                                }else{\r\n                                    return false\r\n                                }                            \r\n                            });\r\n                            // if(this.node && audioSource && audioSource.playing && !audioSource.loop){\r\n                            // if(audioSource && this.node && !audioSource.loop){\r\n                            if(!secondAudioSource) {\r\n                                secondAudioSource = this.node.addComponent(AudioSource);\r\n                                secondAudioSource.name = defaultAudioName;\r\n                                secondAudioSource.loop = audioSource.loop;\r\n                                secondAudioSource.volume = audioSource.volume;\r\n                                secondAudioSource.playOnAwake = false;\r\n                                secondAudioSource.clip = audioSource.clip;\r\n                                secondAudioSource.onDestroy = (function(onDestroy:Function){                                    \r\n                                    return function(){                                        \r\n                                        audioSource.delRef(this);\r\n                                        onDestroy && onDestroy.call(secondAudioSource);\r\n                                    }\r\n                                })(secondAudioSource.onDestroy)\r\n                                audioSource.addRef(secondAudioSource);\r\n                            }\r\n                            \r\n                            // }\r\n                            return  secondAudioSource;\r\n                        }else{\r\n                            return audioSource\r\n                        }\r\n                    }\r\n                    // \r\n                    this.onLoad = ((prevOnLoad:Function)=>{\r\n                        return function(){                            \r\n                            // Change or not the enum of Audio list.\r\n                            AudioEnum = !!options && Enum.isEnum(options) ? AudioEnum : AudioReference.ENUM ;\r\n                            const audioPropertyModifyTags:string[] = this.constructor[AUDIO_TAG];\r\n                            audioPropertyModifyTags.forEach((propertyTagName:string)=>{                                \r\n                                const enumPropertyName:string = ENUM_PROPERTY_PREFIX + propertyTagName;\r\n                                const stringPropertyName:any = STRING_PROPERTY_PREFIX + propertyTagName;\r\n                                const indexEnumPropertyName:any = INDEX_PROPERTY_PREFIX + propertyTagName;\r\n                                // \r\n                                this[enumPropertyName] = this[indexEnumPropertyName];\r\n                                if(EDITOR){\r\n                                    // Making enum options for Audio.\r\n                                    GameUtils.updateEnum(this, enumPropertyName,  AudioEnum);\r\n                                }\r\n                                // Detech unexist audio and change value of enumPropertyName\r\n                                if(this[stringPropertyName] && (this[stringPropertyName] as string).length){\r\n                                    this[enumPropertyName] = !AudioReference.hasAudio(this[stringPropertyName]) ? AudioEnum[UNKNOW_AUDIO] : AudioEnum[this[stringPropertyName]];\r\n                                }\r\n                                // \r\n                                if( !this[propertyTagName] || !(this[propertyTagName] instanceof Proxy)){ \r\n                                    const defaultFunction:Function = function():null{\r\n                                                                        EDITOR && warn('There is no audio for the \\\"' + js.getClassName(constructor) + '.' + propertyTagName + '\\\" property ! ' + target[stringPropertyName]); \r\n                                                                        return null\r\n                                                                    };\r\n                                    const methodProxy:ProxyConstructor = new Proxy(this, {                                        \r\n                                        get:function(target:any, prop:string){\r\n                                            const audioSource:AudioSource = target[getAudioSourceMethod](stringPropertyName);\r\n                                            const audioDesc:PropertyDescriptor = js.getPropertyDescriptor(audioSource, prop);\r\n                                            if(!audioSource || !audioDesc) return defaultFunction;\r\n                                            if(!audioDesc.get && typeof audioDesc.value == 'function' ){\r\n                                                return audioDesc.value.bind(audioSource);\r\n                                            }else{\r\n                                                return audioSource[prop];\r\n                                            }\r\n                                        },\r\n                                        set: (target:any, prop:string, value:any) =>{                                            \r\n                                            const audioSource:AudioSource = target[getAudioSourceMethod](stringPropertyName);\r\n                                            const audioDesc:PropertyDescriptor = js.getPropertyDescriptor(audioSource, prop)\r\n                                            if(audioSource && !!audioDesc && !!audioDesc.set){\r\n                                                audioDesc.set.call(audioSource, value);\r\n                                                return true\r\n                                            }\r\n                                            return false\r\n                                        }\r\n                                    })                    \r\n                                    !EDITOR && Object.defineProperty(this, propertyTagName, {\r\n                                        get:()=>methodProxy                                            \r\n                                    })                  \r\n                                }\r\n                            });\r\n                            prevOnLoad && prevOnLoad.call(this, ...args );                    \r\n                        }\r\n                    })(this.onLoad);\r\n                    \r\n                    // \r\n                    this.onDestroy = ((prevOnDestroy:Function)=>{\r\n                        return function(){           \r\n                            prevOnDestroy && prevOnDestroy.call(this);                            \r\n                            const audioPropertyModifyTags:string[] = this.constructor[AUDIO_TAG];\r\n                            audioPropertyModifyTags.forEach((propertyTagName:string)=>{                            \r\n                                if(!EDITOR){\r\n                                    delete this[propertyTagName];\r\n                                }                                 \r\n                            })\r\n                        }\r\n                    })(this.onDestroy)\r\n                    // \r\n                    lastPreLoad && lastPreLoad.call(this, ...args );\r\n                }            \r\n            })(target['__preload'])\r\n        }\r\n        // ----------------------------------------------------------------\r\n    }\r\n\r\n    if (target === undefined) {\r\n        // @audio() => LegacyPropertyDecorator\r\n        return audio({\r\n            type: AudioSource,\r\n        });\r\n    } else if (typeof propertyKey === 'undefined') {\r\n        options = target;\r\n        return normalized;\r\n    } else {\r\n        // @audio\r\n        normalized(target as Parameters<LegacyPropertyDecorator>[0], propertyKey, descriptorOrInitializer);\r\n        return undefined;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n@ccclass('AudioReference')\r\n@executeInEditMode(true)\r\nexport class AudioReference extends AudioSource {\r\n                \r\n    static get ENUM():AudioSourceType {\r\n        return this[AUIDO_ENUM] || DEFAULT_ENUM;\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param audio \r\n     */\r\n    public static registerAudio(audio:AudioReference){\r\n        if(audio && audio.node){\r\n            const audioMap:Map<string,AudioReference> = (this[AUDIO_MAP]) ??= new Map<string, AudioReference>();\r\n            // const audioNodePath:string = audio.node.getPathInHierarchy();\r\n            const clip:AudioClip = audio.clip;\r\n            if(!clip) {\r\n                DEV && warn('[AudioReference.registerAudio] Không tìm thấy AudioClip trong AudioReference gán cho node \\\"' + audio.node.getPathInHierarchy() + '\\\"')\r\n                return;\r\n            }\r\n            const clipName:string = audio.key || clip.name;\r\n            if(audioMap.has(clipName)) {\r\n                DEV && warn('[AudioReference.registerAudio] Có file trùng tên đã đăng ký trước đó ' + clip.name);\r\n            } else {\r\n                audioMap.set(clipName, audio);\r\n                // \r\n                // let index:number = 0\r\n                // const enumAudio: {[key: string]: number} = {};\r\n                // audioMap.forEach((value:AudioReference, key:string)=>{\r\n                //     enumAudio[key] = index++\r\n                // })\r\n                // enumAudio[UNKNOW_AUDIO] = index;\r\n                this[AUIDO_ENUM] = this.reduceEnums(audioMap);\r\n            }\r\n        }else{\r\n            error('[AudioReference.registerAudio] Đăng ký ' + js.getClassName(this) + ' lỗi !. Lỗi do đăng ký một Audio chưa được gán vào node.');\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    /**\r\n     * \r\n     * @param audio \r\n     */\r\n    public static removeAudio(key:string):boolean{\r\n        const audioMap:Map<string,AudioReference> =(this[AUDIO_MAP]) ??= new Map<string, AudioReference>();\r\n        if(audioMap && audioMap.size){\r\n            const clipName:string = key;\r\n            if(clipName && !audioMap.has(clipName)) {\r\n                // EDITOR && warn('[delRef] Không tìm thấy Audio ' + clipName + 'trong danh sách ');\r\n                return false;\r\n            } else if(clipName) {\r\n                audioMap.delete(clipName);\r\n                this[AUIDO_ENUM] = this.reduceEnums(audioMap);\r\n                return true\r\n            }\r\n\r\n        }else{\r\n            // EDITOR && warn('[delRef] Gỡ đăng ký ' + js.getClassName(this) + ' lỗi !');             \r\n        }\r\n        return false\r\n    }\r\n\r\n    /**\r\n     * Edit here\r\n     * @param key \r\n     * @returns \r\n     */\r\n    public static getAudio(key:string):AudioReference{\r\n        const audioMap:Map<string, AudioReference> = this[AUDIO_MAP];\r\n        if(audioMap && audioMap.size){\r\n            return audioMap.get(key)\r\n        }\r\n        return null;\r\n    }\r\n    \r\n    /**\r\n     * \r\n     * @param key \r\n     * @returns \r\n     */\r\n    public static hasAudio(key:string):boolean{\r\n        const audioMap:Map<string, AudioReference> = this[AUDIO_MAP];\r\n        if(audioMap && audioMap.size){\r\n            return audioMap.has(key)\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private static reduceEnums(audioMap:Map<string,AudioReference>):any{\r\n        let index:number = 0\r\n        const enumAudio: {[key: string]: number} = {};\r\n        audioMap.forEach((value:AudioReference, key:string)=>{\r\n            enumAudio[key] = index++\r\n        })\r\n        enumAudio[UNKNOW_AUDIO] = index;\r\n        return Enum(enumAudio); \r\n    }\r\n\r\n    @property({displayOrder:0})\r\n    get key():string{\r\n        if(!this._key && this.clip){\r\n            this.setKey(this.clip.name)\r\n        }\r\n        return this._key\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     * @param key \r\n     */\r\n    setKey(key:string){\r\n        const newKey:string = key.replace(/_[0-9][0-9]/g,'');\r\n        this._key && AudioReference.removeAudio(this._key);\r\n        this._key = newKey;\r\n        AudioReference.registerAudio(this);\r\n    }\r\n    // @property({override:true, visible:false})\r\n    // set loop(val: boolean) {\r\n    //     super.loop = val;\r\n    // }\r\n    // get loop(): boolean {\r\n    //     return super.loop\r\n    // }\r\n\r\n    // @property({override:true, visible:false})\r\n    // set playOnAwake(val: boolean) {\r\n    //     super.playOnAwake = val\r\n    // }\r\n    // get playOnAwake(): boolean {\r\n    //     return super.playOnAwake\r\n    // }\r\n\r\n    @property({\r\n        override:true, \r\n        slide:true,\r\n        step:0.01\r\n        // visible:false\r\n    })\r\n    set volume(val: number) {        \r\n        // \r\n        if (Number.isNaN(val)) { console.warn('illegal audio volume!'); return; }\r\n        val = math.clamp(val, 0, 1);\r\n        if (this._player) {\r\n            this._player.volume = val;\r\n            this._volume = this._player.volume;\r\n        } else {\r\n            this._volume = val;\r\n        }\r\n\r\n        if(EDITOR) {\r\n            this._savedVolume = this._volume;\r\n        };\r\n        \r\n        // super['_volume'] = val;\r\n        this._refMap && this._refMap.forEach((audio:AudioSource, key:string)=>{\r\n            if(audio !== this) { audio.volume = val; }\r\n        })\r\n    }\r\n    get volume(): number {\r\n        return this._volume || 1\r\n    }\r\n\r\n    @property({\r\n        override:true,\r\n        serializable:true\r\n    })\r\n    get clip(): AudioClip {        \r\n        return this._clip\r\n    }\r\n\r\n    set clip(audioClip: AudioClip) {\r\n        if (audioClip === this._clip) {\r\n            return;\r\n        }\r\n        super.clip = audioClip;\r\n        if(audioClip){\r\n            this.setKey(audioClip.name)\r\n        }\r\n        // \r\n    }\r\n\r\n    // @property({\r\n    //     serializable:false,\r\n    //     visible:false\r\n    // })    \r\n\r\n    @property({ serializable: true, visible: false })    \r\n    protected get savedVolume(): number {\r\n        return this._savedVolume;\r\n    }\r\n\r\n    @property({ serializable: true, visible: false })\r\n    private _key:string = null;\r\n\r\n    private _store:string = DEFAULT_STORE;\r\n\r\n    private _savedVolume: number = 1;\r\n\r\n    private _refMap:Map<string, AudioSource>;\r\n\r\n    @property({ \r\n        serializable: true,\r\n        displayName:'Disallow Multiple Channels',\r\n        tooltip:'If this field is true, there is only one AudioSource instance of component in the system. The background music is used this field.'\r\n    })    \r\n    disallowMultiple:boolean = false;\r\n    // isPersitent\r\n    \r\n    onLoad(): void {\r\n        this._refMap = new Map();\r\n        this.playOnAwake = false;\r\n        super.onLoad();\r\n        this.clip && this.setKey(this.clip.name);\r\n    }\r\n\r\n    // onEnable(): void {\r\n    //     // this.play();\r\n    // }\r\n\r\n    // onDisable(): void {\r\n    //     this.pause();\r\n    // }\r\n\r\n    onDestroy(): void {        \r\n        this.clip && AudioReference.removeAudio(this.key);\r\n    }\r\n\r\n    public resetDefaultVolume(){\r\n        this.volume = this.savedVolume;\r\n    }\r\n\r\n    public addRef(audioSource:AudioSource){\r\n        // log('add ref :: ' + audioSource.name + ' uuid:: ' + audioSource.uuid)\r\n        this._refMap.set(audioSource.uuid, audioSource);\r\n    }\r\n    \r\n    public delRef(audioSource:AudioSource){\r\n        // log('del ref :: ' + audioSource.name)\r\n        this._refMap.delete(audioSource.uuid);\r\n    }\r\n\r\n    // play(): void {\r\n        \r\n    // }\r\n\r\n}\r\n\r\n\r\n","\r\nimport { _decorator, warn, error, log } from 'cc';\r\nimport { DEBUG, DEV } from 'cc/env';\r\nimport { Action } from '../core/Action';\r\nimport { Dispatcher } from '../core/Dispatcher';\r\nimport { IBaseDispatcher } from '../interfaces/IDispatcher';\r\nimport { GAMIFY_LOGS, GAMIFY_WARNNING } from '../utils/Setting';\r\nconst { ccclass } = _decorator;\r\n\r\n@ccclass('BasicDispatcher')\r\nexport class BasicDispatcher extends Dispatcher implements IBaseDispatcher {\r\n    // \r\n    protected _tokenMap: Map<string, string> = null;\r\n    protected _stateNameMapKeys: string[] = null;\r\n    // protected _stateNameSearching: SearchingSet;\r\n    protected _penddingId:string = null;\r\n    protected _callBackMap:Map<string, Function[]> = null;\r\n    /**\r\n     *\r\n     */\r\n    constructor(id:string) {\r\n        super(id);\r\n        this._tokenMap = new Map();\r\n        this._callBackMap = new Map();\r\n        this._stateNameMapKeys = [];\r\n        // this._stateNameMapKeys = new SearchingSet();\r\n    }\r\n\r\n\r\n    //------------------- Feature ------------------\r\n\r\n    /**\r\n     * Force stop data flow. (Cưỡng ép dừng luông dữ liệu.)\r\n     * The mechanism is to ignore callbacks called after this function calls. (Cơ chế là bỏ qua các callback được gọi sau khi hàm này gọi.)\r\n     * Note: The function only works when running a data stream or isDispatching == true. (Lưu ý: Hàm chỉ có tác dụng khi đang chạy luồng dữ liệu hay isDispatching == true.)\r\n     */\r\n    public skipInvoking(){\r\n        if(this.isDispatching()){\r\n            let tokenIds:string[] = Object.keys(this._isPending);\r\n            tokenIds.forEach((tokenId:string)=>{\r\n                this._isPending[tokenId] = true;\r\n                this._isHandled[tokenId] = true;\r\n            })\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * \r\n     * @param stateName \r\n     * @param dispatchToken \r\n     */\r\n    public mapToken(stateName:string, dispatchToken:string):string{\r\n        // \r\n        let validateStateName:string = this.__getUniqueStateName(stateName);\r\n        this._tokenMap.set(validateStateName, dispatchToken);\r\n        this._tokenMap.set(dispatchToken, validateStateName);\r\n        this._stateNameMapKeys.push(validateStateName);\r\n        // this._stateNameSearching = null;\r\n        \r\n        // this._stateNameMapKeys.add(validateStateName);\r\n        DEBUG && GAMIFY_LOGS && log('> MAPPING NAME: ' + validateStateName + ' - token: ' + dispatchToken);\r\n        return validateStateName;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param stateName \r\n     * @param dispatchToken \r\n     */\r\n    public unmapToken(stateName:string, dispatchToken:string){\r\n        let validateStateName:string = this.searchRegisterName(stateName)\r\n        if(this._tokenMap.get(validateStateName) == dispatchToken){\r\n            this._tokenMap.delete(validateStateName);\r\n            this._tokenMap.delete(dispatchToken);\r\n            // \r\n            // this._stateNameMapKeys.delete(validateStateName);\r\n            this._stateNameMapKeys = this._stateNameMapKeys.filter((value:string)=>{\r\n                return !(value == validateStateName);\r\n            })\r\n            // this._stateNameSearching = null;\r\n        }else{\r\n            if(DEBUG) { \r\n                error(this.__ccClassName + '.unmapToken('+ validateStateName +', '+ dispatchToken +'): State Name và Dispatch Token không phải là một cặp.')\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Truyền vào state name trả về token id.\r\n     * Truyền vào token id trả về state name đăng ký trên hệ thống.\r\n     * @param id            // Token id hoặc state name\r\n     * @param instanceIndex     // \r\n     * @returns \r\n     */\r\n    public findMapName(id:string, instanceIndex?:number):string{\r\n        let _foundId:string = id;\r\n        if(_foundId && !this._isTokenId(_foundId)){\r\n            // Truong hop id truyen va la store name\r\n            _foundId = _foundId + (instanceIndex ? '.' + instanceIndex : '' );\r\n            _foundId = this.searchRegisterName(_foundId);\r\n        }else{\r\n            // Truong hop truyen vao la token id\r\n            if(!this.hasRegister(_foundId)){\r\n                return null;\r\n            }\r\n        }\r\n        return this._tokenMap.get(_foundId);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param stateName \r\n     * @returns \r\n     */\r\n    public searchRegisterName(stateName:string):string{\r\n        return this.searchAllRegisterNames(stateName)[0];\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @returns \r\n     */\r\n    public getAllRegistedStates():string[]{\r\n        return Array.from(this._stateNameMapKeys)\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param stateName \r\n     * @returns [ [score, fullstatename], ... ]\r\n     */\r\n    // public searchMatchingNames(stateName:string):any[]{\r\n    //     if(!this._stateNameSearching){\r\n    //         this._stateNameSearching = new SearchingSet();\r\n    //         this._stateNameMapKeys.forEach((mapKey:string)=>{\r\n    //             this._stateNameSearching.add(mapKey);\r\n    //         })\r\n    //     }\r\n    //     return this._stateNameSearching.get(stateName);\r\n    // }\r\n\r\n    /**\r\n     * Tìm kiếm ưu tiên kiểm tra cùng class trước.\r\n     * @param stateName \r\n     * @returns \r\n     */\r\n    public searchAllRegisterNames(stateName:string):string[]{\r\n        if(!stateName) return [];\r\n        return this._stateNameMapKeys.reduce((foundKeys:string[], fullStateName:string)=>{\r\n            if(stateName && stateName.length < fullStateName.length){\r\n                const parsingNames:string[] = fullStateName.split(/\\<|\\>/)\r\n                if((parsingNames.indexOf(stateName) != -1) || (parsingNames[0].indexOf(stateName) != -1)){\r\n                    foundKeys.push(fullStateName);            \r\n                } else if(DEV && fullStateName.toLowerCase().indexOf(stateName.toLowerCase()) != -1 && (fullStateName.length == stateName.length)){\r\n                    warn('The two state names ' + fullStateName + ' and ' + stateName + ' found that the class is not exactly the same. Please enter the correct name.');\r\n                    warn('(Hai state name ' + fullStateName + ' va ' + stateName + ' tim duoc nhung co class ko hoan toan giong nhau. Luu y nhap ten chinh xac.)');\r\n                }\r\n            }else if(stateName && stateName == fullStateName){\r\n                foundKeys.push(fullStateName);\r\n            }else if(fullStateName.indexOf(stateName) != -1 && (fullStateName.length == stateName.length)){\r\n                warn('The two state names ' + fullStateName + ' and ' + stateName + ' found but are not exactly the same. Please enter the correct names.')\r\n                warn('(Hai state name ' + fullStateName + ' va ' + stateName + ' tim duoc nhung ko hoan toan giong nhau. Luu y nhap ten chinh xac.)')\r\n                foundKeys.push(fullStateName);\r\n            }\r\n            return foundKeys;\r\n        }, []);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param stateName \r\n     * @returns \r\n     */\r\n    // public searchAllRegisterNames(stateName:string):string[]{\r\n    //     if(!this._stateNameSearching){\r\n    //         this._stateNameSearching =\r\n    //     }\r\n\r\n    //     const results:any[] = this._stateNameMapKeys.get(stateName);\r\n    //     return results.reduce( (exportStrs:string[], result:any[])=>{\r\n    //         const fullStateName:string = result[1] as string;\r\n    //         exportStrs.push(fullStateName);\r\n    //         return exportStrs\r\n    //     }, []);\r\n    // }\r\n\r\n    \r\n    /**\r\n     * Make sure the output is a token id, including converting the ids parameter from the store name to the corresponding token id if necessary.\r\n     * (Đảm bảo đầu ra là token id, bao gồm cả việc convert tham số ids từ dạng store name thành token id tương ứng nếu cần.)\r\n     * @param ids \r\n     * @returns \r\n     */\r\n    protected _validateIds(ids:Array<string>):Array<string>{\r\n        return ids.reduce((mapList:Array<string>, id:string)=>{\r\n            let validateId:string = this.findMapName(id);\r\n            if(validateId && !this._isTokenId(validateId)){\r\n                validateId = this.findMapName(id);\r\n            }\r\n            //\r\n            return mapList.concat(validateId || [] )\r\n        },[]);\r\n        // return ids.reduce((mapList:Array<string>, id:string)=>mapList.concat(this.findMapName(id) || [] ),[]);\r\n    }\r\n\r\n    /**\r\n     * Check if the passed id is a token id.\r\n     * (Kiểm tra id truyền vào có phải là token id không)\r\n     * @param id \r\n     * @returns \r\n     */\r\n    protected _isTokenId(id:string):boolean {\r\n        return (id.indexOf(this._prefix) != -1);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param actionType \r\n     */\r\n    protected getCallBackTask(actionType:string):Function[] {\r\n        let dataTasks:Function[] = this._callBackMap.get(actionType);\r\n        if(!dataTasks){           \r\n            dataTasks = [];\r\n            this._callBackMap.set(actionType, dataTasks);\r\n        }\r\n        return dataTasks;\r\n    }\r\n\r\n    /**\r\n     * Automatically create a new name when the old name already exists in __tokenMap. Make sure the state name in the map is unique. The function called in mapToken(...)\r\n     * (Tự tạo ra tên mới khi tên cũ đã tồn tại trong __tokenMap. Đảm bảo state name vào map là unique. Hàm được gọi trong mapToken(...))\r\n     * @param stateName \r\n     * @param startNumber \r\n     * @returns \r\n     */\r\n    private __getUniqueStateName(stateName:string, startNumber:number = 1):string {        \r\n        if(this._tokenMap.has(stateName)) {                      \r\n            return this.__getUniqueStateName(stateName + '.' + startNumber, ++startNumber)\r\n        }else if( DEBUG && GAMIFY_WARNNING ){\r\n            (startNumber > 1) ? warn(this.__ccClassName + '.mapToken(...) :: State name already exists in map list. The system automatically creates a new name ' + stateName) : undefined; \r\n            (startNumber > 1) ? warn(this.__ccClassName + '.mapToken(...) :: State name đã tồn tại trong map list. Hệ thống tự động tạo tên mới là ' + stateName) : undefined;\r\n        }\r\n        return stateName;\r\n    }\r\n\r\n    \r\n\r\n    //----------- Override -------------\r\n\r\n    /**\r\n     * \r\n     * @param ids String of full state name or token id or store/class name\r\n     */\r\n    public waitFor(ids:Array<string>) {\r\n        super.waitFor(this._validateIds(ids));\r\n    }\r\n    \r\n\r\n    protected _invokeCallback(id:string) {\r\n        this._penddingId = id;\r\n        super._invokeCallback(id)\r\n    }\r\n    \r\n    /**\r\n     * \r\n     * @param id \r\n     */\r\n    protected _excuteCallback(id:string){\r\n        if(this._pendingAction){\r\n            const actionType:string = (this._pendingAction as Action).type;\r\n            const tasks:Function[] = this.getCallBackTask(actionType);\r\n            const selectedFuntion:Function = this._callbacks[id];\r\n            tasks.push(selectedFuntion.bind(this, this._pendingAction))\r\n            this._callBackMap.set(actionType, tasks);\r\n        }else{\r\n            throw new Error('Deleted Action !')\r\n        }\r\n        // this._callbacks[id](this._pendingAction);\r\n    }\r\n\r\n    /**\r\n     * Clear bookkeeping used for dispatching.\r\n     * \r\n     * @internal\r\n     */\r\n    protected _stopDispatching() {\r\n        const actionType:string = (this._pendingAction as Action).type;\r\n        const tasks:Function[] = this.getCallBackTask(actionType);\r\n        while(tasks.length){\r\n            tasks.shift().call(null);\r\n        }\r\n        super._stopDispatching();\r\n        this._callBackMap.delete(actionType);\r\n    }\r\n\r\n    destroy(){\r\n        this._tokenMap = null;\r\n        this._callBackMap = null;\r\n        super.destroy();\r\n    }\r\n    \r\n\r\n}\r\n\r\n","import { _decorator, Component, js, log, Node } from 'cc';\nimport ParasiteComponent from '../../gamify/master/ParasiteComponent';\n\nconst { ccclass, property } = _decorator;\n\n@ccclass('ChainClip')\nexport class ChainClip<SuperComponent=Component> extends ParasiteComponent<SuperComponent> {\n    \n    @property({\n        displayName: 'Name'\n    })\n    public clipName:string = ''\n\n    protected _$sub:ChainClip<SuperComponent> = null;\n    public get sub():ChainClip<SuperComponent>{\n        return this._$sub;\n    }\n\n    protected _$controllerClip:ChainClip<SuperComponent> = null;\n    protected get controller():ChainClip<SuperComponent>{        \n        if(!this._$controllerClip){\n            this._$controllerClip = this.findControllerClip();\n        }\n        return this._$controllerClip;\n    }\n\n    protected _clipNames:string[] = [];\n\n    /**\n     * \n     */\n    protected onLoad(): void {\n        super.onLoad && super.onLoad();\n        if(this.super){\n            // this.super.loop = false;       \n            this._clipNames = [this.clipName];\n            if(Object.prototype.hasOwnProperty.call(this._$super, '_$sub')){\n                this.super['_$sub'] = this;\n                this.registerClip(this)\n            }\n        }\n    }\n\n    // protected start(): void {\n    //     // log('----------- ' + this._clipNames)\n    // }\n    // ---------------\n\n    /**\n     * \n     * @param clip \n     */\n    registerClip(clip:ChainClip<SuperComponent>){        \n        if(this._clipNames && this._clipNames.indexOf(clip.clipName) == -1){\n            this._clipNames.push(clip.clipName)\n        }\n        if(this._$super && this._$super['registerClip']){            \n            this.super['registerClip'](clip);\n        }\n    }\n\n    /**\n     * \n     */\n    async excute(){\n        \n    }\n\n    /**\n     * \n     */\n    async progress(clip:ChainClip<SuperComponent> = this.controller){\n        if(!!clip){            \n            if(clip.isExecutable()){\n                await clip.excute();\n            }\n            await clip.progress(clip.nextClip());\n            await clip.eachCompleted();\n        }\n    }\n\n    /**\n     * \n     */\n    protected async eachCompleted(){\n        if(this.controller == this){\n            // end of progress            \n            // this.player.isRunning = false;\n            await this.completed();\n        }\n    }\n\n    async completed(){\n        \n    }\n    \n    /**\n     * \n     * @returns \n     */\n    protected nextClip():ChainClip<SuperComponent>{\n        return this.sub;\n    }\n\n    /**\n     * \n     * @returns \n     */\n    protected isExecutable():boolean{        \n        return true;\n    }\n    \n    \n    // ---------------------------------------------------------------------\n\n    /**\n     * \n     * @param clip \n     * @returns \n     */\n    private findControllerClip(clip:ChainClip<SuperComponent> = this):ChainClip<SuperComponent>{\n        if(!clip) {\n            throw new Error(\"Can't find player !\");\n        }\n        const prevClip:Component|ChainClip = clip['_$super'] as Component|ChainClip\n        if(!prevClip || !js.isChildClassOf(prevClip.constructor, ChainClip)){            \n            return clip as ChainClip<SuperComponent>;\n        }\n        return this.findControllerClip(prevClip as ChainClip<SuperComponent>);\n    }\n\n    // -------------------\n\n    /**\n     * \n     */\n    protected onDestroy(): void {\n        this._$sub = null;\n        this._$controllerClip = null;\n        this._clipNames = null;        \n    }\n\n}\n\n\n","\r\nimport { _decorator, js, error, log, warn } from 'cc';\r\nimport { DEBUG, DEV, EDITOR } from 'cc/env';\r\nimport { Action } from './Action';\r\n\r\nconst { ccclass } = _decorator;\r\n\r\n/**\r\n * \r\n * Author: Hallopatidu@gmail.com\r\n */\r\n@ccclass('Dispatcher')\r\nexport class Dispatcher {\r\n\r\n    static _instance: Dispatcher;\r\n    \r\n    static get instance():Dispatcher{\r\n        if(!this._instance){\r\n            this._instance = new Dispatcher('global');\r\n        }\r\n        return this._instance\r\n    }\r\n\r\n    protected __ccClassName:string = \"\";\r\n    protected _prefix:string = \"gamify_\";\r\n    protected _isHandled:Object = Object.create(null);\r\n    protected _isPending:Object = Object.create(null);\r\n    protected _pendingAction: object;\r\n    protected _callbacks:Object = Object.create(null);\r\n    protected _dataTaskPromise:Promise<any>;\r\n\r\n    private _id:string = '';    \r\n    \r\n    private _isDispatching:boolean;    \r\n    \r\n    private _lastID:number = 1;    \r\n    private _count:number = 0;              // run on Debug mode\r\n\r\n\r\n    public get id():string{\r\n        return this._id;\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    constructor(id:string) {\r\n        // super();\r\n        this._id = id ? id : this._id;\r\n        this.__ccClassName = js.getClassName(this);\r\n    }\r\n\r\n    destroy(){\r\n        this._callbacks = null;\r\n        this._isHandled = null;\r\n        this._isPending = null;\r\n    }\r\n\r\n    /**\r\n     * Registers a callback to be invoked with every dispatched action. Returns\r\n     * a token that can be used with `waitFor()`.\r\n     */\r\n    public register(callback:Function):string {\r\n        let id = this._prefix + this._lastID++;\r\n        // const originMethod:Function = callback;\r\n        this._callbacks[id] = callback;\r\n        // this._callbacks[id] = function():Promise<any>{\r\n        //     const returnValue:any = originMethod.apply(this, Array.from(arguments));\r\n        //     return (typeof returnValue === 'object' && typeof returnValue.then === 'function') ? returnValue : Promise.resolve(returnValue);\r\n        // };\r\n        (DEBUG||DEV||EDITOR) && this._count ++;\r\n        return id;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} id \r\n     */\r\n    public hasRegister(id:string){\r\n        return this._callbacks[id] ? true : false;\r\n    }\r\n\r\n\r\n    /**\r\n    * Removes a callback based on its token.\r\n    * @param id \r\n    */\r\n    public unregister(id:string) {\r\n       !this._callbacks[id] ? (DEBUG||DEV||EDITOR) ? error( this.__ccClassName + \".unregister(\" + id + \"): Bỏ đăng ký thất bại. Không tìm được callback nào tương ứng `%s`.\", id) : error(false) : undefined;\r\n       delete this._callbacks[id];\r\n       if(DEBUG||DEV||EDITOR){\r\n            if(this._count < 0) throw new Error(\"Đã xóa hết store trước đó !\");\r\n            this._count --;\r\n            // DEBUG && GAMIFY_LOGS && log(\"-------- Unregister token : \" + id + \" - con lai \" + this._count + \" store.\");\r\n            if(this._count <= 0) {this.destroy();}           \r\n       }else{  \r\n            if(!Object.keys(this._callbacks).length){\r\n                this.destroy();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Waits for the callbacks specified to be invoked before continuing execution\r\n     * of the current callback. This method should only be used by a callback in\r\n     * response to a dispatched action.\r\n     */\r\n    public waitFor(ids:Array<string>) {        \r\n        !this._isDispatching ? (DEBUG||DEV||EDITOR) ? error( this.__ccClassName + \".waitFor(...): Hàm chỉ sử dụng trong lúc dispatch. Ví dụ: trong hàm callback trả về action\") : error(false) : undefined;\r\n        for (let ii:number = 0; ii < ids.length; ii++) {\r\n            let id = ids[ii];\r\n            if (this._isPending[id]) {                      \r\n                // if(!this._isHandled) \r\n                this.__detectCircleLoop(id);\r\n                continue;\r\n            }\r\n            !this._callbacks[id] ? (DEBUG||DEV||EDITOR) ? error( this.__ccClassName + \".waitFor(...): Không tìm được callback nào tương ứng `\" + id + \"`.\") : error(false) : undefined;\r\n            this._invokeCallback(id);\r\n        }               \r\n    }\r\n\r\n    /**\r\n     * Dispatches a action to all registered callbacks.\r\n     */\r\n    public dispatch(action:Action) {\r\n        !!this._isDispatching ? (DEBUG||DEV||EDITOR) ? error( this.__ccClassName + \".dispatch(...): Không thể xen giữa khi sự kiện dispatch trước đó chưa kết thúc.\") : error(false) : undefined;        \r\n        this._startDispatching(action);\r\n        try {\r\n            for (let id in this._callbacks) {\r\n                if (this._isPending[id]) {\r\n                    continue;\r\n                }\r\n                this._invokeCallback(id);\r\n            }\r\n        } finally {\r\n            this._stopDispatching();\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Is this Dispatcher currently dispatching.\r\n     */\r\n    public isDispatching():boolean {\r\n        return this._isDispatching;\r\n    }\r\n\r\n    /**\r\n     * Call the callback stored with the given id. Also do some internal\r\n     * bookkeeping.\r\n     *\r\n     * @internal\r\n     */\r\n    protected _invokeCallback(id:string) {\r\n        this._isPending[id] = true;        \r\n        this._excuteCallback(id);\r\n        this._isHandled[id] = true;\r\n    }\r\n    \r\n    /**\r\n     * \r\n     * @param id \r\n     */\r\n    protected _excuteCallback(id:string){\r\n        try{\r\n            if(!this._callbacks[id]) {\r\n                throw new Error('GamifyStore chưa được đăng ký : ' + id)\r\n            }\r\n            this._callbacks[id](this._pendingAction);\r\n        }catch(err){\r\n            error('Error when execute callback at ' + id + ' -action ' + JSON.stringify(this._pendingAction))\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Set up bookkeeping needed when dispatching.\r\n     *\r\n     * @internal\r\n     */\r\n    protected _startDispatching(action:Action) {\r\n        for (let id in this._callbacks) {\r\n            this._isPending[id] = false;\r\n            this._isHandled[id] = false;\r\n        }\r\n        this._pendingAction = action;        \r\n        this._isDispatching = true;\r\n    }\r\n\r\n    /**\r\n     * Clear bookkeeping used for dispatching.\r\n     * \r\n     * @internal\r\n     */\r\n    protected _stopDispatching() {\r\n        delete this._pendingAction;\r\n        this._isDispatching = false;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param id \r\n     */\r\n    protected __detectCircleLoop(id:string){\r\n        !this._isHandled[id] ? (DEBUG||DEV||EDITOR) ? error( this.__ccClassName + \".waitFor(...): Phát hiện lỗi lặp vòng tròn (A đợi B, B đợi A).\") : error(false) : undefined;\r\n    }\r\n\r\n}\r\n\r\n","export const HTML5 = true;\nexport const NATIVE = false;\nexport const ANDROID = false;\nexport const IOS = false;\nexport const MAC = false;\nexport const WINDOWS = false;\nexport const LINUX = false;\nexport const OHOS = false;\nexport const OPEN_HARMONY = false;\nexport const WECHAT = false;\nexport const WECHAT_MINI_PROGRAM = false;\nexport const BAIDU = false;\nexport const XIAOMI = false;\nexport const ALIPAY = false;\nexport const TAOBAO = false;\nexport const TAOBAO_MINIGAME = false;\nexport const BYTEDANCE = false;\nexport const OPPO = false;\nexport const VIVO = false;\nexport const HUAWEI = false;\nexport const COCOSPLAY = false;\nexport const QTT = false;\nexport const LINKSURE = false;\nexport const EDITOR = false;\nexport const EDITOR_NOT_IN_PREVIEW = false;\nexport const PREVIEW = false;\nexport const BUILD = true;\nexport const TEST = false;\nexport const DEBUG = false;\nexport const DEV = false;\nexport const MINIGAME = false;\nexport const RUNTIME_BASED = false;\nexport const SUPPORT_JIT = true;\nexport const JSB = false;\nexport const NET_MODE = 0;","import { NodeEventType } from 'cc';\r\nimport { UIOpacity } from 'cc';\r\nimport { tween } from 'cc';\r\nimport { UITransform } from 'cc';\r\nimport { Vec3 } from 'cc';\r\nimport { director } from 'cc';\r\nimport { Canvas } from 'cc';\r\nimport { EventHandler } from 'cc';\r\nimport { misc } from 'cc';\r\nimport { clamp } from 'cc';\r\nimport { view } from 'cc';\r\nimport { Vec2 } from 'cc';\r\nimport { EventTouch } from 'cc';\r\nimport { sys } from 'cc';\r\nimport { Tween } from 'cc';\r\nimport { Size } from 'cc';\r\nimport { Component } from 'cc';\r\nimport { _decorator} from 'cc';\r\nimport { log } from 'cc';\r\nimport { Input } from 'cc';\r\nimport { GameUtils } from '../../utils/GameUtils';\r\n\r\nconst { ccclass, property, requireComponent, executeInEditMode } = _decorator;\r\n\r\n@ccclass('FloatButton')\r\n@executeInEditMode(true)\r\n@requireComponent(UITransform)\r\n@requireComponent(UIOpacity)\r\n\r\n/**\r\n * Learn more from https://discuss.cocos2d-x.org/t/understanding-the-principles-of-the-coordinate-system/54108\r\n * \r\n */\r\nexport class FloatButton extends Component {\r\n    \r\n    @property({\r\n        type:[EventHandler]\r\n    })\r\n    clickEvents: EventHandler[] = [];\r\n    \r\n    private saveKey:string;\r\n\r\n    private touchOffset: Vec3;\r\n    private minVec:Vec3 = new Vec3();\r\n    private maxVec:Vec3 = new Vec3();\r\n\r\n    private uiOpacity:UIOpacity\r\n    private dimOpacity = 90;\r\n    private dimDuration = 3;\r\n    private dragable = true;\r\n     \r\n\r\n    onLoad(){\r\n        this.saveKey = 'G'+GameUtils.getHashFromString(this.node.getPathInHierarchy() + '::FloatButton')\r\n        this.uiOpacity = this.node.getComponent(UIOpacity) || this.node.addComponent(UIOpacity);\r\n        \r\n        //\r\n        Input.EventType.TOUCH_START\r\n        this.node.on(NodeEventType.MOUSE_ENTER, this.onMouseEnter, this);\r\n        this.node.on(NodeEventType.MOUSE_LEAVE, this.onMouseLeave, this);\r\n        // \r\n        this.node.on(NodeEventType.TOUCH_START, this.onTouchStart, this);        \r\n        this.node.on(NodeEventType.TOUCH_MOVE, this.onTouchMove, this);\r\n        this.node.on(NodeEventType.TOUCH_END, this.onTouchEnd, this);\r\n        this.node.on(NodeEventType.TOUCH_CANCEL, this.onTouchEnd, this);\r\n        this.onMouseLeave();        \r\n        // \r\n        const uiTransform:UITransform = this.node?.getComponent(UITransform);\r\n        const parentPos:Vec3 = this.node?.parent?.getWorldPosition();\r\n        const nodeSize:Size = uiTransform.contentSize;\r\n        const designSize:Size = view.getDesignResolutionSize();\r\n        const minX = -designSize.width / 2 + nodeSize.width / 2;\r\n        const maxX = designSize.width / 2 - nodeSize.width / 2;\r\n        const minY = -designSize.height / 2 + nodeSize.height / 2;\r\n        const maxY = designSize.height / 2 - nodeSize.height / 2;\r\n        //  \r\n        Vec2.set(this.minVec, parentPos.x + minX, parentPos.y + minY);\r\n        Vec2.set(this.maxVec, parentPos.x + maxX, parentPos.y + maxY);\r\n        //         \r\n    }\r\n\r\n    start(){\r\n        const savePosStr:string = GameUtils.getLocalStorageItem(this.saveKey);\r\n        if(savePosStr){\r\n            const saveData:{x:number, y:number, z:number} = JSON.parse(savePosStr);\r\n            const savePos:Vec3 = new Vec3(saveData.x, saveData.y, saveData.z);\r\n            this.node.setWorldPosition(savePos);\r\n        }\r\n    }\r\n\r\n    onMouseEnter(){        \r\n        if(this.uiOpacity.opacity == this.dimOpacity){\r\n            this.dimIn();\r\n        }else{\r\n            this.unscheduleAllCallbacks();\r\n        }\r\n    }\r\n\r\n    onMouseLeave(){\r\n        this.scheduleOnce(this.dimOut, this.dimDuration);\r\n    }\r\n\r\n    onTouchStart(event:EventTouch) {                \r\n        if(event.target){\r\n            if(sys.isMobile) this.onMouseEnter();\r\n            const startTouchPoint:Vec2 = event.getUILocation();\r\n            const startTouchWorldPos:Vec3 = new Vec3(startTouchPoint.x, startTouchPoint.y, 0);\r\n            const currentWorldPos:Vec3 = this.node.getWorldPosition();\r\n            this.touchOffset = startTouchWorldPos.subtract(currentWorldPos);\r\n        }\r\n    }\r\n\r\n    onTouchMove(event:EventTouch) {\r\n        if(!this.dragable) return;\r\n        if (this.touchOffset) {\r\n            const touchPoint:Vec2 = event.getUILocation();\r\n            const touchWorldPos:Vec3 = new Vec3(touchPoint.x, touchPoint.y, 0);\r\n            const currentWorldPos:Vec3 = touchWorldPos.subtract(this.touchOffset);\r\n            currentWorldPos.clampf(this.minVec, this.maxVec);\r\n            this.node.setWorldPosition(currentWorldPos);\r\n        }\r\n    }\r\n\r\n    onTouchEnd(event:EventTouch) {\r\n        if(!this.dragable) return;\r\n        if (sys.platform === sys.Platform.MOBILE_BROWSER) this.onMouseLeave();\r\n        const touchPoint:Vec2 = event.getUILocation();\r\n        const startTouchPoint:Vec2 = event.getUIStartLocation();\r\n        const deltaVec2:Vec2 = touchPoint.subtract(startTouchPoint);\r\n        if(deltaVec2.length() < 5){\r\n            this.onPress(event);\r\n        }else {\r\n            GameUtils.setLocalStorageItem( this.saveKey, JSON.stringify(this.node.getWorldPosition()))\r\n        }\r\n    }\r\n\r\n    onPress(event:EventTouch){     \r\n        EventHandler.emitEvents(this.clickEvents);\r\n    }\r\n\r\n    // \r\n    protected dimIn()\r\n    {\r\n        Tween.stopAllByTarget(this);\r\n        tween(this.uiOpacity)\r\n            .to(0.3, { opacity: 255 })\r\n            .start();\r\n    }\r\n\r\n    protected dimOut()\r\n    {\r\n        Tween.stopAllByTarget(this);\r\n        tween(this.uiOpacity)\r\n            .to(0.3, { opacity: this.dimOpacity })\r\n            .start();\r\n    }\r\n    // \r\n}\r\n\r\n\r\n","import { _decorator,director, UITransform, Canvas } from 'cc';\r\nimport { GamifyComponent } from '../../gamify/GamifyComponent';\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\nexport const GAME_LAYER = {\r\n    MAIN: 25,\r\n    PANEL: 19,\r\n    IN_GAME_POPUP: 18,\r\n    TOOLTIP_POPUP: 17,\r\n    NOTICE_POPUP: 16,\r\n    ERROR_POPUP: 15,\r\n}\r\n\r\n@ccclass('GamePopup')\r\nexport class GamePopup extends GamifyComponent {\r\n\r\n    @property({\r\n        tooltip:'Cover the entire screen.'\r\n    })\r\n    canCoverTheScreen:boolean = true\r\n    \r\n    onLoad(){\r\n        this.runInBackground = true;\r\n        super.onLoad()\r\n    }\r\n    \r\n    onInit(readyStates?:string[]){\r\n        // if(this.node) this.node.active = false;\r\n        super.onInit(readyStates)\r\n        this.resizeTransform();\r\n    }\r\n\r\n    \r\n    /**\r\n     * \r\n     */\r\n    protected resizeTransform(){\r\n        if(this.canCoverTheScreen){\r\n            const uiTransform:UITransform = this.node.getComponent(UITransform) || this.node.addComponent(UITransform);\r\n            const canvas:Canvas = director.getScene().getComponentInChildren(Canvas);\r\n            if(canvas && canvas.node){\r\n                const canvasTransform:UITransform = canvas.node.getComponent(UITransform);\r\n                uiTransform.setContentSize(canvasTransform.contentSize);\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    \r\n\r\n}\r\n\r\n","import { warn } from 'cc';\r\nimport { sys } from 'cc';\r\nimport { Asset, assetManager, CCClass, Enum, error, js, log, Node, Rect, Size, Sprite, SpriteFrame, Tween, tween, UITransform, Vec2, Vec3, _decorator, Label, Quat, TweenEasing, } from 'cc';\r\n\r\n\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n\r\n\r\n// const _uuidRegex = /.*[/\\\\][0-9a-fA-F]{2}[/\\\\]([0-9a-fA-F-@]{8,}).*/;\r\n\r\n@ccclass('GameUtils')\r\nexport class GameUtils {\r\n\r\n    static cachedAssets:Map<string, string> = new Map();\r\n\r\n    /**\r\n    * \r\n    * @param assetName \r\n    * @param classType \r\n    * @returns \r\n    */\r\n    static getAsset(assetName:string, classType:any):Asset{\r\n       let key:string = GameUtils.cachedAssets.get(assetName);\r\n       if(!key){\r\n           return assetManager.assets.find((asset:Asset, assetKey:string)=>{\r\n               const condition:boolean = (asset.name == assetName) && (asset instanceof classType);\r\n               if(condition){\r\n                   key = assetKey;\r\n                   GameUtils.cachedAssets.set(assetName, assetKey);\r\n               }\r\n               return condition\r\n           })\r\n       }\r\n       return assetManager.assets.get(key)\r\n   }\r\n\r\n   /**\r\n     * \r\n     * @param node \r\n     * @param spriteFrameName \r\n     * @param atlasName \r\n     */\r\n    // static updateSprite(node:Node, spriteFrameName:string, atlasName?:string):Sprite{\r\n    //     if(!node) return null;        \r\n    //     let sprite:Sprite = node.getComponent(Sprite) \r\n    //     if(!sprite){\r\n    //         sprite = node.addComponent(DynamicSprite);  \r\n    //         sprite.sizeMode = Sprite.SizeMode.CUSTOM;\r\n    //         sprite.type = Sprite.Type.SIMPLE;\r\n    //     }\r\n    //     // \r\n    //     if(spriteFrameName) {\r\n    //         if(sprite instanceof DynamicSprite){\r\n    //             // sprite.atlasName = atlasName;\r\n    //             sprite.setSpriteFrameByName(spriteFrameName, atlasName);\r\n    //         }else{\r\n    //             sprite.spriteFrame = GameUtils.getAsset(spriteFrameName, SpriteFrame) as SpriteFrame;\r\n    //         }\r\n    //     }\r\n    //     return sprite;\r\n    // }\r\n    \r\n    // hashCode = function(s) {\r\n    //     var h = 0, l = s.length, i = 0;\r\n    //     if ( l > 0 )\r\n    //       while (i < l)\r\n    //         h = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n    //     return h;\r\n    //   };\r\n\r\n    // static upperCaseFirstCharacter(propertyName:string):string{\r\n    //     return propertyName.replace(/\\b\\w/g, c => c.toUpperCase()).replace(/(?=[A-Z])/g,' ')\r\n    // }\r\n\r\n    // ------------------------------------- RegEx + Math -------------------------------\r\n\r\n    /**\r\n     * \r\n     * @param value \r\n     * @param canBeNegative \r\n     * @returns \r\n     */\r\n    static getHashFromString(value: string, canBeNegative:boolean = false): string {       \r\n        let hash:number = 0; //, i, chr;\r\n        let chr:number;\r\n        if (value.length === 0) return hash.toString();\r\n        for (let i:number = 0; i < value.length; i++) {\r\n          chr   = value.charCodeAt(i);\r\n          hash  = ((hash << 5) - hash) + chr;\r\n          hash |= 0; // Convert to 32bit integer\r\n        }\r\n        return canBeNegative ? hash.toString() : Math.abs(hash).toString();\r\n    }\r\n\r\n    static PATTERN_URL:RegExp = /^.*[\\\\\\/]/;\r\n    static getNameByPath(path:string):string{\r\n        return path && path.length ? path.replace(/^.*[\\\\\\/]/, '') : '';\r\n    }\r\n\r\n    // static SUPPORT_BRACKET_REGEX:RegExp = /\\<[^>]*\\>|\\{[^}]*\\}|\\{[^}]*\\}| /;\r\n    // static detechBracketSymbol():string{\r\n    //     // \\([^)]*\\)|\r\n    //     return\r\n    // }\r\n\r\n    \r\n\r\n    // --------------------------- RegExp -------------------\r\n\r\n    /**\r\n     * \r\n     * @param brackets \r\n     * @returns RegExp - Default : /(<[^>]+>|[^<>]+)/\r\n     */\r\n    static generateSplitRegex(...brackets:string[]):RegExp{\r\n        let patternRegexStr:string;\r\n        brackets.forEach((bracket:string)=>{\r\n            if(bracket.length == 2){\r\n                patternRegexStr = patternRegexStr ? patternRegexStr +\"|\" : patternRegexStr;\r\n                patternRegexStr += \"(\" + bracket[0] +\"[^\"+ bracket[1] +\"]*\" + bracket[1] + \"|[^\" + bracket[0] + bracket[1] + \"]+)\";                \r\n            }else{\r\n                warn('This bracket ' + bracket + ' should be only 2 characters.')\r\n            }\r\n        })\r\n        return patternRegexStr ? new RegExp(patternRegexStr, \"g\") : new RegExp(/(<[^>]+>|[^<>]+)/, \"g\"); \r\n    }\r\n\r\n\r\n\r\n    // --------------------------------------------------------\r\n    \r\n    /**\r\n     * \r\n     * @param point \r\n     * @param fromCordinateOfNode \r\n     * @param toCordinateOfNode \r\n     * @returns \r\n     */\r\n    static convertUICordinate(point:Vec3, fromCordinateOfNode:Node, toCordinateOfNode:Node):Vec3{\r\n        // const newPoint:Vec3 = point.clone();\r\n        const fromUITranform:UITransform = fromCordinateOfNode.getComponent(UITransform);\r\n        const toUITranform:UITransform = toCordinateOfNode.getComponent(UITransform);\r\n        if(fromUITranform && toUITranform){\r\n            const worldPoint:Vec3 = new Vec3();\r\n            const relocatePoint:Vec3 = new Vec3();\r\n            fromUITranform.convertToWorldSpaceAR(point, worldPoint);\r\n            toUITranform.convertToNodeSpaceAR(worldPoint, relocatePoint);\r\n            return relocatePoint;\r\n        }\r\n        return null\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param targetNode \r\n     * @param toCordinateOfNode \r\n     * @returns \r\n     */\r\n    static relocateUIBoundingBox(targetNode:Node, toCordinateOfNode:Node):Rect{\r\n        const targetTranform:UITransform = targetNode.getComponent(UITransform);\r\n        if(!targetNode || !targetNode.parent || !toCordinateOfNode) return null;\r\n        \r\n        const targetAnchorPoint:Vec2 = targetTranform.anchorPoint;\r\n        const boudingBox:Rect = targetTranform.getBoundingBox();\r\n        const relocateMinPoint:Vec3 = GameUtils.convertUICordinate(new Vec3(boudingBox.xMin, boudingBox.yMin , boudingBox.z), targetNode.parent, toCordinateOfNode);\r\n        const relocateMaxPoint:Vec3 = GameUtils.convertUICordinate(new Vec3(boudingBox.xMax, boudingBox.yMax , boudingBox.z), targetNode.parent, toCordinateOfNode);        \r\n        const relocateBoxWidth:number = (relocateMinPoint && relocateMaxPoint) ? (relocateMaxPoint.x - relocateMinPoint.x) : targetTranform.contentSize.width;\r\n        const relocateBoxHeight:number = (relocateMinPoint && relocateMaxPoint) ? (relocateMaxPoint.y - relocateMinPoint.y) : targetTranform.contentSize.height;\r\n        const offsetX:number = targetAnchorPoint.x * relocateBoxWidth;\r\n        const offsetY:number = targetAnchorPoint.y * relocateBoxHeight;\r\n        const posX:number = relocateMinPoint ? relocateMinPoint.x + offsetX : 0;\r\n        const posY:number = relocateMinPoint ? relocateMinPoint.y + offsetY : 0;\r\n        return new Rect(posX, posY, relocateBoxWidth, relocateBoxHeight);\r\n    }\r\n\r\n    // -------------------------------------------\r\n\r\n    /**\r\n     * \r\n     * @param startNumber \r\n     * @param endNumber \r\n     * @param onUpdate \r\n     * @param option \r\n     * {\r\n     *      fixed:number,\r\n     *      delay:number,\r\n     *      duration:number\r\n     * }\r\n     */\r\n    static countingTween(startNumber:number, endNumber:number, onCounting:Function, option?:{fixed?:number, delay?:number, duration?:number}, onDone?:Function):Tween<any>{\r\n        const fixedNum:number = (option && option.fixed) || 0;\r\n        const delayTime:number = (option && option.delay) || 0;\r\n        const duration:number = (option && option.duration) || 0.8;\r\n        const startNum:number = parseFloat(startNumber.toFixed(fixedNum));\r\n        const endNum:number = parseFloat(endNumber.toFixed(fixedNum));\r\n        let objTween = { value: startNum };\r\n        const counter:Tween<any> = tween(objTween)\r\n        .delay(delayTime)\r\n        .to(duration, { value: endNum }, {\r\n            onUpdate(target?, ratio?) {\r\n                const value:number = target['value'];                \r\n                onCounting && onCounting(parseFloat(value.toFixed(fixedNum)))\r\n            },\r\n            onComplete(target) {\r\n                const value:number = target['value'];  \r\n                // onDone && onDone(parseFloat(value.toFixed(fixedNum)))\r\n            },\r\n            // progress (start, end, current, ratio):number {\r\n            //     const countNum:number = parseFloat(current.toFixed(fixedNum))\r\n            //     onCounting && onCounting(countNum)\r\n            //     log('count: ' + countNum)\r\n            //     return start + (end - start) * ratio;\r\n            // }\r\n        })\r\n        .call(()=>{\r\n            counter.stop();\r\n            onDone && onDone(endNum)\r\n        })\r\n        .start();        \r\n        return counter;\r\n    }\r\n\r\n    static async delay(target:Node, time:number = 0.5){\r\n        await new Promise((resolve:Function)=>{\r\n            tween(target).delay(time).call(resolve).start();\r\n        })\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param target \r\n     * @param options \r\n     * @param easing \r\n     */\r\n    static async tweenPromise(target:Node, options?:{\r\n        duration:number\r\n        position?:Vec3,\r\n        rotation?:Vec3  // Euler\r\n        scale?:Vec3\r\n    }, easing?:{easing?:TweenEasing}){\r\n        // \r\n        return await new Promise((resolve:Function)=>{\r\n            const tweenOptions:any = Object.create(null);\r\n            tweenOptions.duration = options.duration;\r\n            if(options.position) {tweenOptions.position = options.position}\r\n            if(options.scale) {tweenOptions.scale = options.scale}\r\n            if(options.rotation) {\r\n                let  quat : Quat = new Quat();\r\n                Quat.fromEuler(quat, options.rotation.x, options.rotation.y, options.rotation.z);\r\n                tweenOptions.rotation = quat;\r\n            }            \r\n            //\r\n            tween(target)\r\n            .to(options.duration, \r\n                tweenOptions,\r\n                easing            // Bind rotation\r\n            )                                   \r\n            .call(()=>{\r\n                resolve();\r\n            })\r\n            .start();                                           // Call the start method to enable tween\r\n\r\n        })\r\n    }\r\n\r\n    // ------------------------- ENUM ------------------------\r\n\r\n    /**\r\n     * \r\n     * @param obj \r\n     * @param propName \r\n     * @param enumDef \r\n     */\r\n    static setEnumAttr (obj, propName, enumDef) {\r\n        CCClass.Attr.setClassAttr(obj, propName, 'type', 'Enum');\r\n        CCClass.Attr.setClassAttr(obj, propName, 'enumList', Enum.getList(enumDef));\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param targetObj \r\n     * @param propName \r\n     * @param newEnum \r\n     */\r\n    static updateEnum (targetObj, propName , newEnum) {\r\n        let defaultEnum = Object.assign( Enum({}) , newEnum);\r\n        Enum.update(defaultEnum);\r\n        CCClass.Attr.setClassAttr(targetObj, propName, 'type', 'Enum');\r\n        CCClass.Attr.setClassAttr(targetObj, propName, 'enumList', Enum.getList(defaultEnum));\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param args \r\n     * @returns \r\n     */\r\n    static getEnumFromArray(...args:Array<string|string[]>):any{\r\n        const fattenKeys:string[] = Array.from(args).reduce((accumulator:string[], value:string|string[]) => accumulator.concat(value), []) as string[];\r\n        const enumObj: {[key: string]: number} = {};\r\n        let numIndex:number = 0;\r\n        fattenKeys.forEach((key:string, index:number)=>{\r\n            if(js.isString(key)){                \r\n                enumObj[key] = index;  \r\n                numIndex = index;             \r\n            }\r\n        })        \r\n        return Enum(enumObj)\r\n    }\r\n\r\n    // ----------------------------------------------------------\r\n\r\n    /**\r\n     * Calculate the right alignment size.\r\n     * In this case:\r\n     * You want to put a node inside other node so that the target size fit to height or fit to width with the pattern node.\r\n     * @param elementSize    \r\n     * @param containerSize \r\n     * @param isCover \r\n     * @returns \r\n     */\r\n    static calculateAligning(elementSize:Size, containerSize:Size, isCover:boolean = false):Size{\r\n        const heightRatio:number = elementSize.height/containerSize.height;\r\n        const widthRatio:number = elementSize.width/containerSize.width;\r\n        return (widthRatio > heightRatio)!==isCover ? new Size(containerSize.width, elementSize.height*(1/widthRatio)) : new Size(elementSize.width*(1/heightRatio), containerSize.height);        \r\n    }\r\n\r\n    // ------------- STRING ---------------\r\n\r\n    // static spaceToNewLine(string:string):string{\r\n    //     return string.replace(/\\s/g,'\\n');\r\n    // }\r\n\r\n    /**\r\n     * Check a word has latin charaters.\r\n     * @param word \r\n     * @returns \r\n     */\r\n    static isLatinWord(word:string):boolean{\r\n        return /^[A-z\\u00C0-\\u00ff\\s'\\.,-\\/#!$%\\^&\\*;:{}=\\-_`~()]+$/.test(word);\r\n    }\r\n\r\n    // -------------- DATE ---------------\r\n\r\n    /**\r\n     * \r\n     * @param month     // getMonth() \r\n     */\r\n    static getMaxDateNumber(month:number, year:number):number{        \r\n        let numOfDays:number = 31;\r\n        if ([4, 6, 9, 11].indexOf(month) >= 0) numOfDays = 30;\r\n        if (month == 2) {\r\n            if (year % 400 == 0) numOfDays = 29\r\n            else if (year % 100 == 0) numOfDays = 28\r\n            else if (year % 4 == 0) numOfDays = 29\r\n            else numOfDays = 28\r\n        }\r\n        return numOfDays;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param date \r\n     * @param isShortFormat \r\n     * @returns \r\n     */\r\n    static formatDate(date: Date, isShortFormat: boolean = false) {\r\n\t\tconst s:number = date.getSeconds();\r\n\t\tconst min:number = date.getMinutes();\r\n\t\tconst h:number = date.getHours();\r\n\t\tconst d:number = date.getDate();\r\n\t\tconst m:number = date.getMonth() + 1;\r\n\t\tconst y:number = date.getFullYear();\r\n\t\treturn isShortFormat ?\r\n\t\t\t'' + (h <= 9 ? '0' + h : h) + ':' + (min <= 9 ? '0' + min : min) + ':' + (s <= 9 ? '0' + s : s) + ' ' + (m <= 9 ? '0' + m : m) + '/' + (d <= 9 ? '0' + d : d)\r\n\t\t\t: '' + y + '/' + (m <= 9 ? '0' + m : m) + '/' + (d <= 9 ? '0' + d : d) + ' ' + (h <= 9 ? '0' + h : h) + ':' + (min <= 9 ? '0' + min : min) + ' (' + GameUtils.getGMTString(date) + ')';\r\n\t}\r\n\r\n    /**\r\n     * \r\n     * @param date \r\n     * @returns \r\n     */\r\n    static getGMTString(date: Date) {\r\n\t\tlet offset_m:number = -date.getTimezoneOffset();\r\n\t\tlet offset_sign:string = (offset_m >= 0 ? '+' : '-');\r\n\t\toffset_m = Math.abs(offset_m);\r\n\t\tlet offset_h = Math.floor(offset_m / 60);\r\n\t\toffset_m = offset_m % 60;\r\n\t\treturn 'GMT' + offset_sign + offset_h + ':' + (offset_m <= 9 ? '0' + offset_m : offset_m);\r\n\t}\r\n\r\n    // ---------------- Currency -----------------------\r\n\r\n    static getCreditString(num: number, displayCurrency: boolean = false, isInteger: boolean = false): string {\r\n        return\r\n    }\r\n\r\n    static getFormattedCreditString(num: number, isInteger: boolean = false): string {\r\n        //clamp away js auto added decimal part\r\n        const clamped_num = parseFloat(num.toFixed(10));\r\n        let result_str = clamped_num.toString();\r\n        //locale\r\n        const locale_opt = {\r\n            minimumFractionDigits: isInteger ? 0 : 2,\r\n            maximumFractionDigits: isInteger ? 0 : 2,\r\n            style: 'decimal'\r\n        };\r\n        result_str = clamped_num.toLocaleString(undefined, locale_opt);\r\n        return result_str;\r\n    }\r\n\r\n    static getThinCreditString(num: number, isInteger: boolean = false): string {\r\n        if (num > -1e3 && num < 1e3) {\r\n            return this.getFormattedCreditString(num, isInteger);\r\n        }\r\n        const locale_opt = {\r\n            minimumFractionDigits: 0,\r\n            maximumFractionDigits: 3,\r\n            style: 'decimal'\r\n        };\r\n        let newVal = Math.trunc(num);\r\n        let thin_char: string = '';\r\n\r\n        let isNegativeValue = false;\r\n        if (newVal < 0) {\r\n            isNegativeValue = true;\r\n            newVal *= -1;\r\n        }\r\n\r\n        if (newVal >= 1e3 && newVal < 1e6) {\r\n            newVal = newVal / 1e3;\r\n            thin_char = 'K';\r\n        }\r\n        if (newVal >= 1e6 && newVal < 1e9) {\r\n            newVal = newVal / 1e6;\r\n            thin_char = 'M';\r\n        }\r\n        if (newVal >= 1e9 && newVal < 1e12) {\r\n            newVal = newVal / 1e9;\r\n            thin_char = 'B';\r\n        }\r\n        if (newVal >= 1e12) {\r\n            newVal = newVal / 1e12;\r\n            thin_char = 'T';\r\n        }\r\n        //round DOWN to 3 digits after decimal point\r\n        const re = new RegExp(\"(\\\\d+\\\\.\\\\d{3})(\\\\d)\");\r\n        const m = newVal.toString().match(re);\r\n        newVal = m ? parseFloat(m[1]) : newVal;\r\n        let result_str: string = newVal.toLocaleString(undefined, locale_opt);\r\n        if (isNegativeValue) {\r\n            result_str = '-' + result_str;\r\n        }\r\n        result_str += thin_char;\r\n        return result_str;\r\n    }\r\n\r\n    // -------------------- LOCAL STORAGE -------------------------\r\n\r\n    static getLocalStorageItem(key:string):string{        \r\n        return sys.localStorage.getItem(key)\r\n    }\r\n    \r\n    static removeLocalStorageItem(key:string){\r\n        sys.localStorage.removeItem(key)\r\n    }\r\n    \r\n    static setLocalStorageItem(key:string, value:string){        \r\n        sys.localStorage.setItem(key, value)\r\n    }\r\n\r\n    // ---------------------------- Array --------------------------------\r\n\r\n    /**\r\n     * Ánh xạ (mapping)\r\n     * @param listA \r\n     * @param listB \r\n     * @param greater \r\n     * @param lesser \r\n     * @param equality \r\n     */\r\n    static mappingArrays(listA:any[], listB:any[], greater:Function, lesser:Function, equality:Function ){\r\n        let maxLength:number = Math.max(listA.length, listB.length);\r\n        for (let index = 0; index < maxLength; index++) {\r\n            let a:any = listA[index];\r\n            let b:any = listB[index];\r\n            if( !!a > !!b ){\r\n                greater(a,b, index);\r\n            }else if( !!a < !!b ){\r\n                lesser(a,b, index);\r\n            }else {\r\n                equality(a, b, index);\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n  \r\n  \r\n\r\n}\r\n\r\n","\r\nimport { _decorator, js, log, warn } from 'cc';\r\nimport { Action } from './core/Action';\r\nimport { Dispatcher } from './core/Dispatcher';\r\nimport { RenderOrderDispatcher } from './dispatchers/RenderOrderDispatcher';\r\nimport { GamifyStore } from './GamifyStore';\r\nimport { IGamifyComponent } from './interfaces/IComponent';\r\nimport { Helper } from './utils/Helper';\r\nimport { GAMIFY_WARNNING } from './utils/Setting';\r\nimport { DEBUG, DEV } from 'cc/env';\r\nimport { error } from 'cc';\r\nconst {property, ccclass} = _decorator;\r\n\r\n/**\r\n * - Tính năng đăng ký render với Captured State - Render với trạng thái đa ngay tại vị trí gọi render();\r\n * \r\n * Author: Hallopatidu@gmail.com\r\n */ \r\n@ccclass('GamifyComponent')\r\nexport class GamifyComponent extends GamifyStore implements IGamifyComponent {\r\n    \r\n    private _capturedState:any = null;\r\n\r\n    protected _capturedAction:Action = null;\r\n\r\n    private _registerCapturedState:any = null;\r\n\r\n    private _requireRenders:Function[] = [];\r\n    \r\n    protected runInBackground:boolean = false;\r\n\r\n    public static isSubClass(className:string):boolean{\r\n        return js.isChildClassOf(js.getClassByName(className), GamifyComponent)\r\n    }\r\n        \r\n    /**\r\n     * \r\n     */\r\n    onLoad(){    \r\n        if(this.runInBackground || this.enabled ){            \r\n            super.onLoad()\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * \r\n     * @param done \r\n     * @param capturedState \r\n     * @param capturedAction \r\n     * @param sharedData \r\n     */\r\n    async onPreRender(done:Function, capturedState:any, sharedData:any, capturedAction:Action){\r\n        this._capturedAction = capturedAction;\r\n        this._capturedState = capturedState;\r\n        // \r\n        await this.onRender((sharedData?:any)=>{\r\n            done(sharedData);\r\n            this._capturedState = null;\r\n        }, capturedState, sharedData);\r\n        // \r\n    }\r\n    \r\n    /**\r\n     * \r\n     * @param done \r\n     * @param capturedState state data of GamifyComponent at the time of calling this.render(). (state data của GamifyComponent tại thời điểm gọi this.render(). )\r\n     * @param sharedData    Data is shared between rendering tasks in the same rendering flow. (Data chia se giua cac render trong cùng một luồng render.)\r\n     */\r\n    async onRender(done:Function, capturedState?:any, sharedData?:any){\r\n        done();\r\n    }\r\n\r\n    /**\r\n     * Hàm được hệ thống gọi vào khi kết thúc quá trình render của Component.\r\n     */\r\n    onCompletedRender(actionType:string){\r\n        \r\n    }\r\n\r\n    /**\r\n     * The function is called by the system at the end of the rendering process. (Hàm được hệ thống gọi vào khi kết thúc quá trình render.)\r\n     * Note (Lưu ý):\r\n     * - Only the first Gamify Component rendered in the rendering flow can call this function. (Chỉ có Gamify Component được hiển thị đầu tiên trong luồng hiển thị mới được gọi hàm này.)\r\n     * @param capturedAction \r\n     * @param sharedData \r\n     */\r\n    onCompletedAllRenders(sharedData?:any, capturedAction?:Action){\r\n        \r\n    }\r\n    \r\n    /**\r\n     * Wait for another component to handle rendering first. (Đợi một component khác xử lý render trước.)\r\n     * @param stateName \r\n     * @returns \r\n     */\r\n    public wait(stateName:string):IGamifyComponent{\r\n        let dispatcher:Dispatcher = this.getDispatcher();\r\n        if(dispatcher && dispatcher instanceof RenderOrderDispatcher){\r\n            (dispatcher as RenderOrderDispatcher).renderBefore([stateName], this.getStateName());\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Create a render task. (Tạo một task render.)\r\n     * Use state data right at the location of calling the render function even before entering the main state. (Sử dụng state data ngay tại vị trí gọi hàm render kể cả khi chưa nhập vào state chính.)\r\n     * If you want to use the latest state, call this.getState(); (Nếu muốn sử dụng state mới nhất, gọi hàm this.getState();)\r\n     * @param useCapturedState If true, then clone state for each render task. (nếu là true thì clone state cho từng task render.)\r\n     * @returns \r\n     */\r\n    public render(useCapturedState:boolean = false):IGamifyComponent{\r\n        let dispatcher:Dispatcher = this.getDispatcher();\r\n        if(!dispatcher.isDispatching()) {\r\n            warn('Do not register render outside the dispatching data flow. Warning from ' + this.getStateName())\r\n            return;\r\n        }\r\n        let capturedState:any = useCapturedState ? Helper.clone(this._registerCapturedState) : Object.assign({}, this._registerCapturedState);\r\n        if(!this._requireRenders){\r\n            this._requireRenders = [];\r\n        }\r\n        this._requireRenders.push(()=>{\r\n            // let dispatcher:Dispatcher = this.getDispatcher();\r\n            if(dispatcher && dispatcher instanceof RenderOrderDispatcher){\r\n                (dispatcher as RenderOrderDispatcher).registerRender(  this.getStateName(), \r\n                                                                capturedState,\r\n                                                                this.onPreRender.bind(this) , \r\n                                                                this.onCompletedRender.bind(this), \r\n                                                                this.hasUsingFuntion('onCompletedAllRenders') ? this.onCompletedAllRenders.bind(this) : null );\r\n            }\r\n        })\r\n        return this;\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     */\r\n    protected registerRender(){\r\n        if(this._requireRenders){\r\n            while(this._requireRenders.length){\r\n                this._requireRenders.shift().call(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected removeAllRegisterRender(){\r\n        // !this.getDispatcher().isDispatching() && GAMIFY_WARNNING ? DEBUG ? warn( this.__ccClassName + \".removeAllRegisterRender(): This function is only called during dispatching.\") : error(false) : undefined;    \r\n        if(this.getDispatcher()?.isDispatching() && this._requireRenders && this._requireRenders.length){ this._requireRenders.length = 0;}\r\n    }\r\n\r\n\r\n    protected getCaptureState():any{\r\n        return this._capturedState || this.getState();\r\n    }\r\n            \r\n    /**\r\n     * \r\n     * @param functionName \r\n     * @returns \r\n     */\r\n    protected hasUsingFuntion(functionName:string):boolean{\r\n        return Object.prototype.hasOwnProperty.call(this.constructor.prototype, functionName);        \r\n    }\r\n\r\n    \r\n    //------------- Override ----------------\r\n\r\n\r\n    /**\r\n     * \r\n     * @param state \r\n     * @param action \r\n     * @returns \r\n     */\r\n    public reduce(state:any, action:Action) {\r\n        this._registerCapturedState = state;\r\n        this._registerCapturedState.action = action.type;\r\n        return super.reduce(state, action);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param action \r\n     */\r\n    protected __endingInvokeOnDispatch(action: Action){\r\n        super.__endingInvokeOnDispatch(action);\r\n        this._registerCapturedState = null\r\n    }\r\n\r\n    /**\r\n     * Bổ sung: State phải thay đổi mới cho phép render.\r\n     */\r\n    protected __emitChange() {\r\n        this.registerRender();\r\n        super.__emitChange();\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    protected __rejectChange(){\r\n        GAMIFY_WARNNING && warn('REJECT CHANGE ' + this.__ccClassName);\r\n        this.removeAllRegisterRender();\r\n        super.__rejectChange();\r\n    }\r\n\r\n    \r\n    /**\r\n     * Bổ sung: Luôn trả về true. Vì GamifyComponent gọi được cả GamifyStore lẫn GamifyComponent khác.\r\n     * @param storeClassName \r\n     * @returns \r\n     */\r\n    protected _checkRule(storeClassName:string):boolean{\r\n        return true;\r\n    }\r\n\r\n    \r\n    /**\r\n     * Bổ sung: Với id cùng là GamifyComponent thì bỏ việc báo lỗi vòng lặp.\r\n     * @param id \r\n     */\r\n    protected __detectedUndefinedState(id:string, action:Action){    \r\n        super.__detectedUndefinedState(id, action)    \r\n        // if(DEV){\r\n        //     (this.getStoreComponent(id) instanceof GamifyComponent) ? super.__detectedUndefinedState(id, action) : warn('Found one issue inside data flow');           \r\n        // }\r\n        // !GamifyComponent.isSubClass(id) ? super.__detectedUndefinedState(id, action) : undefined;\r\n    }\r\n \r\n\r\n}\r\n\r\n","\r\nimport { _decorator, Component, warn, js, CCClass } from 'cc';\r\nimport { DEBUG, EDITOR } from 'cc/env';\r\nimport { IGamifyDispatcher } from '../interfaces/IDispatcher';\r\nimport { GAMIFY_WARNNING } from '../utils/Setting';\r\nimport { MechanicDispatcher } from './MechanicDispatcher';\r\nimport { Helper } from '../utils/Helper';\r\nconst { ccclass } = _decorator;\r\n\r\n\r\n/**\r\n * \r\n * Author: Hallopatidu@gmail.com\r\n */ \r\n@ccclass('GamifyDispatcher')\r\nexport class GamifyDispatcher extends MechanicDispatcher implements IGamifyDispatcher {\r\n\r\n    private static _enum_:any    \r\n\r\n    static get STORE_ENUM(){\r\n        return this._enum_\r\n    }\r\n\r\n    static _instance: GamifyDispatcher;\r\n        \r\n    static get instance():GamifyDispatcher{\r\n        if(!this._instance){\r\n            this._instance = new GamifyDispatcher('global');\r\n        }\r\n        return this._instance;\r\n    }\r\n\r\n\r\n    \r\n    /**\r\n     *\r\n     */\r\n    constructor(id:string) {\r\n        super(id);        \r\n    }\r\n\r\n    public static clearInstance(){        \r\n        this._instance = null;\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     * @param stateName \r\n     * @param dispatchToken \r\n     * @returns \r\n     */\r\n    public mapToken(stateName:string, dispatchToken:string):string{\r\n        const fullStateName:string = super.mapToken(stateName, dispatchToken);\r\n        if(EDITOR) GamifyDispatcher._enum_ = Helper.convertToEnum(this._stateNameMapKeys);\r\n        return fullStateName;\r\n    }\r\n\r\n    public unmapToken(stateName:string, dispatchToken:string){\r\n        super.unmapToken(stateName, dispatchToken)\r\n        if(EDITOR) GamifyDispatcher._enum_ = Helper.convertToEnum(this._stateNameMapKeys);\r\n    }\r\n\r\n   \r\n    destroy(){      \r\n        super.destroy();     \r\n        let dispatcherClass:any = js.getClassByName(this.__ccClassName);\r\n        if(dispatcherClass.instance && dispatcherClass.instance == this){\r\n            DEBUG && GAMIFY_WARNNING && warn('Xóa hoàn toàn dispatcher ' + this.id + ' kể cả trong ' + this.__ccClassName + '.instance .');\r\n            dispatcherClass.clearInstance();\r\n        }\r\n    }\r\n}\r\n\r\n","\r\nimport { _decorator, Node, error, warn, log } from 'cc';\r\nimport { DEBUG } from 'cc/env';\r\nimport { Action } from './core/Action';\r\nimport { Dispatcher } from './core/Dispatcher';\r\nimport { MechanicDispatcher } from './dispatchers/MechanicDispatcher';\r\nimport { GamifyComponent } from './GamifyComponent';\r\n// import { GamifyStore } from './GamifyStore';\r\nimport { IGamifyScenario } from './interfaces/IStore';\r\nimport { GAMIFY_WARNNING } from './utils/Setting';\r\nconst {ccclass, disallowMultiple} = _decorator;\r\n\r\n\r\n@ccclass('GamifyScenario')\r\n@disallowMultiple(true)\r\nexport class GamifyScenario extends GamifyComponent implements IGamifyScenario {\r\n    \r\n    // protected _parent:GamifyComponent = null;\r\n    private _selectedAction:Action;\r\n\r\n    \r\n    //---------------- Life-Cicle -----------------\r\n\r\n    // onParentData(state:any, action:Action):any|void{\r\n    //     return state;\r\n    // }\r\n\r\n    // onParentChanged(){\r\n    //     // log('--------------onParentChanged---------------')\r\n    // }\r\n\r\n    // onParentRejected(){\r\n    //     // log('--------------onParentRejected---------------')\r\n    // }\r\n\r\n    \r\n\r\n    /**\r\n     * Kiểm tra xem đang có luồng hiển thị chạy không ?\r\n     * @returns \r\n     */\r\n    protected isRendering():boolean {\r\n        let dispatcher:Dispatcher = this.getDispatcher();\r\n        if(dispatcher && dispatcher instanceof MechanicDispatcher){\r\n            return dispatcher.isRendering()\r\n        }\r\n        return false\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param stateName \r\n     * @returns \r\n     */\r\n    protected searchAllStateNames(stateName:string):string[]{\r\n        let dispatcher:Dispatcher = this.getDispatcher();\r\n        if(dispatcher && dispatcher instanceof MechanicDispatcher){\r\n            return dispatcher.searchAllRegisterNames(stateName);\r\n        }\r\n        return [];\r\n    }\r\n\r\n    // Write Rendering Scenario\r\n\r\n    /**\r\n     * Chọn action cần viết kịch bản.\r\n     * \r\n     * ví dụ: Để yêu cầu chuyển động các Comp1,Comp2,Comp3.\r\n     * \r\n     * action('PLAY').sequence('Comp1','Comp2','Comp3'); // chạy tuần tự \r\n     * action('PLAY').parallel('Comp1','Comp2','Comp3'); // chạy song song\r\n     * \r\n     * Hoặc gửi thêm các config mặc định thông qua action. \r\n     * Ví dụ: Tất cả các action cùng type sẽ được thêm nonStop = true vào action.payload\r\n     * action({ type: 'PLAY', payload: { nonStop: true } }).sequence('Comp1','Comp2','Comp3');\r\n     * \r\n     * @param type \r\n     * @returns \r\n     */\r\n    protected action(action:string | Action, ...recordReceivers:string[]):GamifyScenario {\r\n        let configAction:Action;\r\n        let receivers:string[] = recordReceivers;\r\n        if('string' == typeof action){\r\n            configAction = {\r\n                type: action\r\n            }\r\n        }else{\r\n            configAction = action;\r\n            receivers = receivers || action.receiver\r\n        }        \r\n        this._selectedAction = configAction;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Xóa các kịch bản mặc định - các kịch bản được tạo ra trước khi luồng dữ liệu xảy ra.\r\n     * @returns \r\n     */\r\n    protected clear():GamifyScenario{\r\n        if(this._selectedAction){\r\n            let dispatcher:Dispatcher = this.getDispatcher();\r\n            if(dispatcher && dispatcher instanceof MechanicDispatcher){\r\n                if(dispatcher.isDispatching()){\r\n                    DEBUG && GAMIFY_WARNNING && warn(this.__ccClassName + '.clear(): Hàm chỉ tác dụng xóa các kịch bản mặc định được đăng ký trước khi dispatch.');\r\n                }\r\n                (dispatcher as MechanicDispatcher).removeDefaultActionScenerio(this._selectedAction);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /**\r\n     * Tạo kịch bản chạy tuần tự.\r\n     * @returns \r\n     */\r\n    public sequence(...ids:string[]):boolean {\r\n        let targetAction:Action = this._selectedAction || this._currentAction\r\n        if(targetAction){\r\n            let dispatcher:Dispatcher = this.getDispatcher();\r\n            if(dispatcher && dispatcher instanceof MechanicDispatcher){                \r\n                (dispatcher as MechanicDispatcher).registerActionScenario(targetAction, ids);\r\n            }\r\n            this._selectedAction = null;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Tạo kịch bản chạy độc lập.\r\n     * @returns \r\n     */\r\n    public parallel(...ids:string[]):boolean {\r\n        let targetAction:Action = this._selectedAction || this._currentAction\r\n        if(targetAction){\r\n            let dispatcher:Dispatcher = this.getDispatcher();\r\n            if(dispatcher && dispatcher instanceof MechanicDispatcher){\r\n                ids.forEach((id:string)=>{\r\n                    (dispatcher as MechanicDispatcher).registerActionScenario(targetAction, [id]);\r\n                })\r\n                this._selectedAction = null;\r\n                return true;\r\n            }\r\n        }       \r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Lưu cònig action \r\n     * @returns \r\n     */\r\n    public modify(...ids:string[]):boolean {\r\n        let targetAction:Action = this._selectedAction || this._currentAction\r\n        if(targetAction){\r\n            let dispatcher:Dispatcher = this.getDispatcher();\r\n            if(dispatcher && dispatcher instanceof MechanicDispatcher){\r\n                (dispatcher as MechanicDispatcher).registerConfigAction(targetAction, ids);\r\n                this._selectedAction = null;\r\n                return true;\r\n            }\r\n        }       \r\n        return false;\r\n    }\r\n    \r\n\r\n}\r\n\r\n\r\n","\r\nimport { _decorator, Component, Node, error, warn, log, js } from 'cc';\r\nimport { Action, ActionObject, ActionType } from './core/Action';\r\nimport { Dispatcher } from './core/Dispatcher';\r\nimport { Reducer } from './core/Reducer';\r\nimport { BasicDispatcher } from './dispatchers/BasicDispatcher';\r\nimport { GamifyDispatcher } from './dispatchers/GamifyDispatcher';\r\nimport { IGamifyStore } from './interfaces/IStore';\r\nimport { Helper } from './utils/Helper';\r\nimport { GAMIFY_LOGS, GAMIFY_WARNNING } from './utils/Setting';\r\nimport { DEBUG, DEV, EDITOR } from 'cc/env';\r\nimport { ActionStoreDispatcher } from './dispatchers/ActionStoreDispatcher';\r\nimport { find } from 'cc';\r\n// \r\nconst { ccclass } = _decorator;\r\nconst ClassTagRegex:RegExp = /(?<=\\<).+?(?=\\>)/g;\r\nconst OrderTagRegex:RegExp = /(?<=\\[).+?(?=\\])/g;\r\n// \r\nexport const STORE_ACTION = {\r\n    NEW_STATE_REGISTED:'store_action_new_state_registed'\r\n}\r\n/**\r\n * - This is a kind of Stateless Component. Basically, not directly affected by surrounding components.\r\n *   (Là một dạng Stateless Component. Đại khái là Không chịu tác động trực tiếp bởi các component xung quanh.)\r\n * - Create a new lifecycle. (Tạo một lifecycle mới.)\r\n * - Connect stores each other. (Ket noi cac store.) \r\n * \r\n * Author: Hallopatidu@gmail.com\r\n */\r\n@ccclass('GamifyStore')\r\nexport class GamifyStore extends Reducer implements IGamifyStore{\r\n        \r\n    protected _currentAction:Action = null;\r\n    protected _stateName:string;\r\n\r\n    protected _rollCallCached:Map<string, string[]>;\r\n    \r\n    //---------- new Life Circle -----\r\n        \r\n    /**\r\n     * Initialize default state. (Khởi tạo state mặc định.)\r\n     */\r\n    protected get initialState():any {\r\n        return {};\r\n    }\r\n\r\n    protected initialized(readyStates?:string[]){\r\n        this.onInit(readyStates);\r\n        this.dispatch({type:STORE_ACTION.NEW_STATE_REGISTED});\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param stateName \r\n     * @param state \r\n     */\r\n    onStoreRegisted(state:any, action:Action):any{\r\n        \r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    onInit(readyStates?:string[]){ \r\n        \r\n    }\r\n\r\n    /**\r\n     * Process the state as soon as an action is sent. (Xử lý state ngay khi có một action gửi tới.)\r\n     * The function only runs with actions allowed in allowActionTypes. (Hàm chỉ chạy với các action được cho phép trong allowActionTypes.s)\r\n     * \r\n     * @param state \r\n     * @param action \r\n     */\r\n    onData(state:any, action:Action):any|void{\r\n        return state;\r\n    }\r\n   \r\n\r\n    /**\r\n     * \r\n     */\r\n    onRemove(){\r\n        \r\n    }\r\n\r\n    /**\r\n     * The function is called when an action is encountered that is not allowed to be processed. (Hàm được gọi vào khi gặp một action không được phép xử lý.)\r\n     * @param action \r\n     */\r\n    onRejectedAction(action:Action){\r\n\r\n    }\r\n    \r\n    //------------ Feature ---------------\r\n\r\n    /**\r\n     * Limit the action types called to the component's reduce method. (Giới hạn các action type được gọi vào reduce của component.)\r\n     * Store only receives actions contained in the array. If the array is empty, Store will receive all incoming actions. (Store chỉ nhận các action có trong mảng, nếu mảng rỗng, Store sẽ nhận tất cả các action đến.)\r\n     * @returns string[]\r\n     */\r\n    public allowActionTypes():string[]{\r\n        return []\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param action \r\n     * @param receiver \r\n     */\r\n    public dispatch(action:Action, ...receiver:string[]){\r\n        // (DEBUG || DEV || EDITOR) && GAMIFY_LOGS && log('--------- Dispatch:: ' + action.type + ' ---------');\r\n        action.sender = this.getStateName();\r\n        action.receiver = receiver || action.receiver || [];\r\n        if(!action.stores){\r\n            action.stores = Object.create(null);\r\n        }\r\n        action.stores[this.getStateName()] = this.getState() || Object.create(null);\r\n        this.getDispatcher().dispatch(action);\r\n    }\r\n\r\n    /**\r\n     * Immediately blocks the data flow. (Chặn ngay lập tức luồng dữ liệu.)\r\n     * Note: (Lưu ý:)\r\n     * - The function only works in onData or onParentData (by GamifyMechanic). (Hàm chỉ có tác dụng trong onData hoặc onParentData (của GamifyMechanic).)\r\n     * - Be careful when using because if calling references to state data causes other Stores to call before Gamify Mechainic, there may be a loop error. (Cẩn thận khi sử dụng vì nếu gọi các tham chiếu đến state data khiến các Store khác gọi trước Gamify Mechainic thì có thể sẽ có báo lỗi vòng lặp.)\r\n     */\r\n    protected preventDispatching(){\r\n        let dispatcher:Dispatcher = this.getDispatcher();\r\n        if(dispatcher && dispatcher instanceof BasicDispatcher){\r\n            (DEBUG || DEV || EDITOR) && GAMIFY_WARNNING && warn(this.__ccClassName + '.preventDispatching(): Đã chặn luồng action ');\r\n            dispatcher.skipInvoking();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check the number of senders that have dispatched the same type of action. (Kiểm số lượng các sender đã dispatch cùng loại action.)\r\n     * Returns true when there are enough senders of the same action type. (Trả về true khi đủ số các sender cùng loại action.)\r\n     * roll-call will reset every time the first state name is called a second time. (roll-call sẽ reset mỗi khi state name đầu tiên gọi lần 2.)\r\n     * @param stateNames  Mảng string chứa Node name hoặc Class name của GamifyStore hoặc GamifyComponent.\r\n     */\r\n    protected rollCallSameAction(...stateNames:string[]):boolean{\r\n        if(this._currentAction){\r\n            let type:string = this._currentAction.type\r\n            let sender:string = this.searchRegisterName(this._currentAction.sender);\r\n            let validateCheckList:string[] = stateNames.reduce((validateStateNames:string[] ,stateName:string)=>{\r\n                const valideStateName:string = this.searchRegisterName(stateName);\r\n                if(valideStateName){\r\n                    validateStateNames.push(valideStateName);\r\n                }else{\r\n                    (DEBUG || DEV || EDITOR) && GAMIFY_WARNNING && warn(this.__ccClassName +'.rollCall(' + stateNames + '): ' + stateName + ' is not in the system.')\r\n                }\r\n                return validateStateNames\r\n            },[]);\r\n           \r\n            let rollCallList:string[] = this._rollCallCached.get(type) || [];\r\n            let rollCallIndex:number = rollCallList.indexOf(sender);\r\n            if(rollCallIndex == 0){\r\n                rollCallList = [];\r\n                rollCallIndex = -1;                \r\n            }\r\n            // Available in validateCheckList and not yet in _rollCallList. (Có trong validateCheckList và chưa có trong _rollCallList.)\r\n            if((rollCallIndex == -1) && (validateCheckList.indexOf(sender) != -1)){\r\n                rollCallList.push(sender);\r\n                this._rollCallCached.set(type, rollCallList);\r\n            }\r\n            let condition:boolean = rollCallList.length == validateCheckList.length;\r\n            if(condition){\r\n\r\n            }\r\n            return condition;\r\n        }\r\n        return false;        \r\n    }\r\n\r\n    /**\r\n     * Check if The action is dispatched from the current component. (Kiểm tra xem Action nhận được có được gửi đi từ thành phần hiện tại không)\r\n     * @returns \r\n     */\r\n    protected senderIsMe():boolean{        \r\n        if(DEBUG || DEV || EDITOR){\r\n            const dispatcher:Dispatcher = this.getDispatcher();\r\n            if(!dispatcher?.isDispatching()){\r\n                throw new Error(this.getStateName() + '.senderIsMe():: senderIsMe method only used when processing in the Data flow');\r\n            }\r\n        }\r\n        return this._currentAction.sender == this.getStateName();\r\n    }\r\n\r\n    \r\n    /**\r\n     * Get the state name of the current store. (Lấy state name của store hiện tại.)\r\n     * @returns \r\n     */\r\n    public getStateName(){\r\n        if(!this._stateName){            \r\n            if(this.node){\r\n                let nodePath:string = this.node.getPathInHierarchy() || this.node.name;\r\n                nodePath = nodePath.replace(/\\//g, '.');\r\n                this._stateName = nodePath + '<' + this.__ccClassName + '>';\r\n            }else{\r\n                this._stateName = this.__ccClassName + '<' + this.__ccClassName + '>';\r\n            }\r\n            const existedSateNames:string[] = this.searchAllRegisterNames(this._stateName);\r\n            if(existedSateNames.length){\r\n                this._stateName = this._stateName + '[' + existedSateNames.length +']';\r\n            }\r\n        }\r\n        return this._stateName;\r\n    }\r\n\r\n    /**\r\n     * Tham chiếu tới Component tương ứng với state name.\r\n     * @param fullStateName The full name of the state name (not the abbreviation), usually the string taken from getStateName() hoặc action.sender\r\n     * (Tên đầy đủ của state name (không phải tên viết tắt), thường lá string lấy ra từ getStateName())\r\n     * @returns \r\n     */\r\n    protected getStoreComponent<GamifyStoreType = GamifyStore>(fullStateName:string):GamifyStoreType{\r\n        const nodeName:string = fullStateName.slice(0, fullStateName.indexOf('<'))\r\n        const compNode:Node = find(nodeName)\r\n        if(compNode){            \r\n            const compName:string = this.getStoreName(fullStateName);\r\n            const compIndex:number = this.getIndexOfSameStores(fullStateName);\r\n            if(compIndex !== -1){\r\n                const compList:GamifyStoreType[] = compNode.getComponents(compName) as GamifyStoreType[] ;\r\n                return compList.find((comp:GamifyStoreType)=>comp['getStateName']() == fullStateName)\r\n            }\r\n            return compNode.getComponent(compName) as GamifyStoreType;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Get the class name of GamifyStore (called Store name) from the full name of the state. Usually a short name of the state for ease of use in code.\r\n     * (Lấy tên class của GamifyStore (gọi là Store name) từ tên đầy đủ của state. Thường là tên ngắn gọn của state cho dễ sử dụng trong code.)\r\n     * @param fullStateName \r\n     */\r\n    public getStoreName(fullStateName?:string):string|null{\r\n        let selectedSateName:string = fullStateName || (this._currentAction ? this._currentAction.sender : null);\r\n        if(selectedSateName && selectedSateName.length){\r\n            const regExpMatchArray:RegExpMatchArray = selectedSateName.match(ClassTagRegex)\r\n            if(regExpMatchArray){\r\n                const insideTags:string[] = regExpMatchArray[0]?.split(/\\s/g);\r\n                if(insideTags && insideTags.length) return insideTags[0];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    \r\n    /**\r\n     * Các GamifyStore và GamifyComponent trong cùng một node sẽ được đánh index. Index này được gắn vào state name để dễ phân biệt.\r\n     * getIndexOfSameStores method lấy ra index từ tên đầy đủ của state. Tên đầy đủ của state có thể được lấy ra từ getStateName() hoặc action.sender\r\n     * @param fullStateName \r\n     */\r\n    protected getIndexOfSameStores(fullStateName?:string):number{\r\n        let selectedSateName:string = fullStateName || (this._currentAction ? this._currentAction.sender : null);\r\n        if(selectedSateName && selectedSateName.length){\r\n            const regExpMatchArray:RegExpMatchArray = selectedSateName.match(OrderTagRegex)\r\n            if(regExpMatchArray){\r\n                const insideTags:string[] = regExpMatchArray[0]?.split(/\\s/g);\r\n                if(insideTags && insideTags.length){\r\n                    return parseInt(insideTags[0]);\r\n                }\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param stateName \r\n     * @returns \r\n     */\r\n    protected searchRegisterName(stateName:string):string{\r\n        let dispatcher:Dispatcher = this.getDispatcher();\r\n        if(dispatcher && dispatcher instanceof BasicDispatcher){\r\n            return (dispatcher as BasicDispatcher).searchRegisterName(stateName);\r\n        }\r\n        // \r\n        return null\r\n    }\r\n\r\n    protected searchAllRegisterNames(stateName:string):string[]{\r\n        let dispatcher:Dispatcher = this.getDispatcher();\r\n        if(dispatcher && dispatcher instanceof ActionStoreDispatcher){\r\n            return (dispatcher as ActionStoreDispatcher).searchAllRegisterNames(stateName);\r\n        }\r\n        // \r\n        return null\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param one \r\n     * @param two \r\n     * @returns \r\n     */\r\n    protected areEqual(one:any, two:any) {\r\n        return Helper.areEqual(one, two);\r\n    }\r\n\r\n    /**\r\n     * Merge all data export form all stores at the same action.\r\n     * @param data \r\n     */\r\n    // protected share(data:object){\r\n    //     if(this._currentAction && data){\r\n    //         this._currentAction.shares = data ? Object.assign(this._currentAction.shares || {}, data)  : this._currentAction.shares;\r\n    //     }else{\r\n    //         (DEBUG || DEV || EDITOR) ? error(this.getStateName() + '.export(data): Data export is unknown') : error(false);\r\n    //     }\r\n    // }\r\n\r\n    /**\r\n     * Lấy state của các store khác.\r\n     * @param stateName \r\n     * @returns \r\n     */\r\n    protected getOtherState(stateName:string):any{\r\n        !this._currentAction ? (DEBUG || DEV || EDITOR) ? error( this.getStateName() + '.getOtherState('+ stateName + '): Cannot get state, because the ' + this.getStateName() + ' store is not included in the data flow.') : error(false) : undefined;\r\n        const inactiveAction:Action = this._currentAction;\r\n        let dispatcher:Dispatcher = this.getDispatcher();\r\n        if((DEBUG || DEV || EDITOR) && !dispatcher.isDispatching()){\r\n            throw new Error(this.getStateName() + '.getOtherState('+stateName+'):: getOtherState only used in \\\"reduce\\\" function')\r\n        }\r\n        //\r\n        if(!inactiveAction.stores){\r\n            inactiveAction.stores = Object.create(null);\r\n        }\r\n        //        \r\n        let orderStateNames:string[] = this.searchAllRegisterNames(stateName);\r\n        try{\r\n            this.getDispatcher().waitFor(orderStateNames);\r\n            \r\n        }catch(e:any){\r\n            (DEBUG || DEV || EDITOR) && GAMIFY_WARNNING && warn('There is a loop when the  ' + this.getStateName() + ' store call to ' + stateName);\r\n        }finally{\r\n            (DEBUG || DEV || EDITOR) && orderStateNames.forEach((orderStateName:string)=>{\r\n                if(!inactiveAction.stores[orderStateName]){\r\n                    this.__detectedUndefinedState(orderStateName, inactiveAction);\r\n                }\r\n            })            \r\n        }\r\n        this._currentAction = inactiveAction;\r\n        // \r\n        if(orderStateNames.length && orderStateNames.length > 1){\r\n            warn('More than one store ' + orderStateNames + ' received from ' + stateName);\r\n        }\r\n        return this._currentAction.stores[orderStateNames[0]];\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param stateName \r\n     * @returns \r\n     */\r\n    protected hasOtherState(stateName:string):boolean {\r\n        !this._currentAction ? (DEBUG || DEV || EDITOR) ? error( this.getStateName() + '.getOtherState('+ stateName + '): Cannot get state, because the ' + this.getStateName() + ' store is not included in the data flow.') : error(false) : undefined;\r\n        const inactiveAction:Action = this._currentAction;\r\n        // let dispatcher:Dispatcher = this.getDispatcher();\r\n        // if((DEBUG || DEV || EDITOR) && !dispatcher?.isDispatching()){\r\n        //     throw new Error(this.getStateName() + '.hasStateInAction('+stateName+'):: hasStateInAction only used in \\\"reduce\\\" function')\r\n        // }\r\n        if(!inactiveAction.stores){\r\n            return false;\r\n        }\r\n        let orderStateNames:string[] = this.searchAllRegisterNames(stateName);\r\n        if(orderStateNames.length && orderStateNames.length > 1){\r\n            warn('More than one store ' + orderStateNames + ' received from ' + stateName);\r\n        }\r\n        return !!this._currentAction?.stores[orderStateNames[0]];\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param stateName \r\n     * @returns \r\n     */\r\n    protected isStoreRegisted(stateName:string):boolean{\r\n        let orderStateNames:string[] = this.searchAllRegisterNames(stateName);\r\n        return orderStateNames && !!orderStateNames.length\r\n    }\r\n\r\n    // ---------- \r\n    /**\r\n     * \r\n     * @param {*} action \r\n     */\r\n    protected __prepareInvokeOnDispatch(action:Action){\r\n        this._currentAction = action;\r\n        this.__shareState();\r\n    }\r\n\r\n \r\n    protected __emitChange() {\r\n        this.__shareState();\r\n        super.__emitChange()\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param action \r\n     */\r\n    protected __endingInvokeOnDispatch(action:Action){\r\n        //  \r\n        this._currentAction = null;\r\n    }\r\n\r\n    // ---------- \r\n\r\n    /**\r\n     * Check if the action is valid or not. (Kiểm tra action có hợp lệ hay không.)\r\n     * - The action type is contained in the Action array that allows receiving, declared in the function allowActionTypes(). (Action type có trong mảng Action cho phép nhận, được khai báo trong function allowActionTypes().)\r\n     * - If the action has a specific recipient list (action.receiver), it must exist in the system. (Nếu action có danh sách người nhận (action.receiver) cụ thể thì phải tồn tại trong hệ thống.)\r\n     * @param action \r\n     * @returns boolean\r\n     */\r\n    protected _validateAction(action:Action):boolean {\r\n        const currentStateName:string = this.getStateName();\r\n        const allowTypes:Array<string> = this.allowActionTypes();\r\n        const extendAllowType:string[] = [STORE_ACTION.NEW_STATE_REGISTED].concat(allowTypes);\r\n        let receivers:string[] = action.receiver || [];\r\n        let receiverCondition:boolean = !receivers.length;\r\n        receivers.forEach((receiverName:string)=>{\r\n            let validateReceiverNames:string[] = this.searchAllRegisterNames(receiverName);\r\n            if(validateReceiverNames) {\r\n                receiverCondition = receiverCondition || (validateReceiverNames.indexOf(currentStateName) != -1);             \r\n            }\r\n        });        \r\n        let actionCondition:boolean = !(allowTypes.length && (extendAllowType.indexOf(action.type) == -1));        \r\n        return actionCondition && receiverCondition;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param storeClassName \r\n     * @returns \r\n     */\r\n    protected _checkRule(storeClassName:string):boolean{\r\n        return js.isChildClassOf(js.getClassByName(storeClassName), GamifyStore);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param id \r\n     */\r\n    protected __detectedUndefinedState(id:string, action:Action){\r\n        if((DEBUG || DEV || EDITOR)){\r\n            let problems:string[] = [\r\n                '- There was a previous data loop error. (Có lỗi vòng lặp dữ liệu trước đó.)',\r\n                '- ' + id + ' may not have been initialized yet. (' + id + ' có thể chưa kịp khởi tạo.)'                \r\n            ]\r\n            error(this.getStateName() + '.getOtherState('+id +'): The store in action cannot be retrieved: ' + this._currentAction.type + '. Store '+id+' may encounter the following problems: ' + '\\n ('+this.getStateName() + '.getOtherState('+id +'): Không lấy được state trong action: ' + this._currentAction.type + '. Store '+id+' có thể gặp các vấn đề sau: \\n' + problems.join('\\n')) ;\r\n            \r\n        }\r\n    }\r\n\r\n    // ------------- PRIVATE -------------------\r\n\r\n    /**\r\n     * \r\n     */\r\n    private __shareState(){\r\n        if(this._currentAction){\r\n            if(!this._currentAction.stores){\r\n                this._currentAction.stores = Object.create(null);\r\n            }\r\n            this._currentAction.stores[this.getStateName()] = this.getState() || Object.create(null);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param stateName \r\n     */\r\n    private __setStateName(stateName:string){\r\n        // let extension:string = btoa(this.getDispatchToken()).replace(/=/g,'')\r\n        this._stateName = stateName //+ '.' + extension;\r\n    }\r\n\r\n    //------------ Override --------------   \r\n\r\n    /**\r\n     * \r\n     * @param action \r\n     */\r\n    protected __invokeOnDispatch(action:Action) {\r\n        if(this._validateAction(action)) {\r\n            this.__prepareInvokeOnDispatch(action);\r\n            super.__invokeOnDispatch(action);      \r\n            this.__endingInvokeOnDispatch(action);\r\n        }else{\r\n            this.onRejectedAction(action);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param state \r\n     * @param action \r\n     * @returns \r\n     */\r\n    public reduce(state:any, action:Action):any {\r\n        if(action.type == STORE_ACTION.NEW_STATE_REGISTED) return this.onStoreRegisted(state, action) || state ;            \r\n        else return this.onData(state, action) || state ;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param dispatcher \r\n     * @param isForce \r\n     */\r\n    public setDispatcher(dispatcher:Dispatcher, isForce:boolean = false){        \r\n        super.setDispatcher(dispatcher, isForce);  \r\n        let currentDispatcher:Dispatcher = this.getDispatcher();   \r\n        if(currentDispatcher && currentDispatcher instanceof GamifyDispatcher && !isForce){  \r\n            // !isForce condition to call only once when using setDispatcher (Điều kiện !isForce để chỉ gọi một lần khi dùng setDispatcher)          \r\n            // After mapping the state name with the token, change the state name according to system requirements.(Sau khi map state name với token, thay đổi state name theo yêu cầu của hệ thống.)\r\n            this.__setStateName( (currentDispatcher as GamifyDispatcher).mapToken(this.getStateName(), this.getDispatchToken()) );\r\n        }\r\n        (DEBUG || DEV || EDITOR) && GAMIFY_LOGS && log('Register dispatcher '+ currentDispatcher.id +' to ' + this.getStateName());\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    public removeDispatcher(){        \r\n        let dispatcher:any = this.getDispatcher();\r\n        if(dispatcher && dispatcher instanceof GamifyDispatcher){            \r\n            (dispatcher as GamifyDispatcher).unmapToken(this.getStateName(), this.getDispatchToken());\r\n        }\r\n        (DEBUG || DEV || EDITOR) && GAMIFY_LOGS && log('Gỡ dispatcher cũ ' + dispatcher.id + ' của ' + this.getStateName());\r\n        super.removeDispatcher();\r\n    }\r\n\r\n    /**\r\n     * Data Flow\r\n     * Using for waitting another component to be implemented.\r\n     * @param gamifyComponentName \r\n     */\r\n    public waitFor(gamifyComponentName:string){\r\n        let dispatcher:Dispatcher = this.getDispatcher();\r\n        if((DEBUG || DEV || EDITOR) && !dispatcher.isDispatching()){\r\n            throw new Error(this.getStateName() + '.waitFor('+gamifyComponentName+'):: waitFor method only used when processing in the Data flow')\r\n        }\r\n        super.waitFor(gamifyComponentName);\r\n    }\r\n\r\n    \r\n\r\n    /**\r\n     * \r\n     */\r\n    onLoad(){\r\n        super.onLoad();\r\n        // Hiện tại chỉ làm việc mặc định với 01 dispatcher duy nhất.\r\n        this.setDispatcher(GamifyDispatcher.instance);\r\n        this._rollCallCached = new Map();\r\n        const readyStates:string[] = (this.getDispatcher() as GamifyDispatcher)?.getAllRegistedStates();\r\n        this.initialized(readyStates);        \r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    onDestroy(){        \r\n        this.onRemove();\r\n        super.onDestroy();\r\n    }\r\n\r\n \r\n}\r\n\r\n\r\n\r\n","\r\nimport { js, UITransform, Vec2, Vec3, _decorator, Node, Rect, ValueType, error, Enum, CCClass, Prefab, Component } from 'cc';\r\nimport { SearchingSet } from './SearchingSet';\r\nimport { Constructor } from 'cc';\r\nconst { ccclass } = _decorator;\r\n\r\n\r\n\r\nexport type ReferenceObject = {\r\n    parent:any,\r\n    key:string,\r\n    value:any    \r\n}\r\n\r\nconst RemoveTagRegex:RegExp = /[<>]/g;\r\n// const InsideTagRegex:RegExp = /(?<=\\<).+?(?=\\>)/g;\r\n\r\n// const pattern = new RegExp('^(https?:\\\\/\\\\/)?'+ // protocol\r\n// '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|'+ // domain name\r\n// '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))'+ // OR ip (v4) address\r\n// '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*'+ // port and path\r\n// '(\\\\?[;&a-z\\\\d%_.~+=-]*)?'+ // query string\r\n// '(\\\\#[-a-z\\\\d_]*)?$','i'); // fragment locator\r\n\r\nexport abstract class IHelper {\r\n    static convertToEnum(objOrArray:any):any{}\r\n}\r\n\r\n@ccclass('Helper')\r\nexport class Helper extends IHelper {\r\n\r\n    // static moduleInvoker(startObj:object, pendingIds?:object, sorttings?:string[]){\r\n    //     const pendingObj = pendingIds || Object.create(null);\r\n    //     let sorts:string[] = sorttings || [];\r\n    //     for (let id in startObj) {\r\n    //         if (pendingObj[id]) {\r\n    //             continue;\r\n    //         }\r\n    //         pendingObj[id] = true;\r\n    //         const rightId:string = startObj[id][0] as string;\r\n    //         if(rightId){\r\n    //             sorts = Helper.moduleInvoker(startObj, pendingObj, sorts);                \r\n    //         }else{\r\n    //             sorts.push(id);\r\n    //         }\r\n    //         // \r\n    //     }\r\n    //     return sorts\r\n    // }\r\n    static getHierarchyMethod(constructor:any, methodName:string):Function{\r\n        if(!constructor) return null;\r\n        return constructor?.prototype[methodName] || this.getHierarchyMethod(js.getSuper(constructor), methodName)\r\n    }\r\n\r\n    // \r\n\r\n    /**\r\n     * Di chuyển một node dính lấy một node khác.\r\n     * Hàm chưa xử lý với trường hợp snap cả góc quay.\r\n     * @param movingNode \r\n     * @param targetNode \r\n     */\r\n    static calculateClingBox(movingNode:Node, targetNode:Node):Rect{        \r\n        if(!movingNode.parent){\r\n            throw new Error('There is no parent in this node to snap. (Không có parent để đính vào.)')\r\n        }\r\n        // \r\n        let targetTranform:UITransform = targetNode.getComponent(UITransform);\r\n        if(!targetTranform){\r\n            throw new Error('There is no cc.UITransform component in targetNode. (Không có component cc.UITransform trong targetNode.)')\r\n        }\r\n        let movingNodeTranform:UITransform = movingNode.getComponent(UITransform);\r\n        if(!movingNodeTranform){\r\n            throw new Error('There is no cc.UITransform component in movingNode. (Không có component cc.UITransform trong movingNode.)')\r\n        }       \r\n        let parentNodeTranform:UITransform = movingNode.parent.getComponent(UITransform);\r\n        if(!parentNodeTranform){\r\n            throw new Error('There is no cc.UITransform component in the parent node of movingNode. (Không có component cc.UITransform trong node cha của movingNode.)')\r\n        }\r\n        let movingAnchorPoint:Vec2 = movingNodeTranform.anchorPoint;\r\n\r\n        //  Get the boundingBox index on the world and then transfer the min and max points to the coordinates of the movingNode's parent node.\r\n        //  (Lấy boudingBox chỉ số trên world rồi chuyển 2 điểm min, max vào coordinate của node cha của movingNode.)\r\n        let targetWorldBoudingBox:Rect = targetTranform.getBoundingBoxToWorld();\r\n        let targetToMovingNodeMinPoint:Vec3 = parentNodeTranform.convertToNodeSpaceAR(new Vec3(targetWorldBoudingBox.xMin, targetWorldBoudingBox.yMin, targetWorldBoudingBox.z));\r\n        let targetToMovingNodeMaxPoint:Vec3 = parentNodeTranform.convertToNodeSpaceAR(new Vec3(targetWorldBoudingBox.xMax, targetWorldBoudingBox.yMax, targetWorldBoudingBox.z));\r\n        \r\n        // Get the size of targetNode in the coordinate containing movingNode.\r\n        // (Lấy size của targetNode trong coordinate chứa movingNode. )\r\n        let targetToMovingNodeBoudingBoxX:number = targetToMovingNodeMinPoint.x;\r\n        let targetToMovingNodeBoudingBoxY:number = targetToMovingNodeMinPoint.y;\r\n        let targetToMovingNodeBoudingBoxW:number = targetToMovingNodeMaxPoint.x - targetToMovingNodeMinPoint.x;\r\n        let targetToMovingNodeBoudingBoxH:number = targetToMovingNodeMaxPoint.y - targetToMovingNodeMinPoint.y;\r\n        let targetToMovingNodeBoudingBox:Rect = new Rect(targetToMovingNodeBoudingBoxX, targetToMovingNodeBoudingBoxY, targetToMovingNodeBoudingBoxW, targetToMovingNodeBoudingBoxH);\r\n        \r\n        // Calculate the new position of movingNode according to anchorPoint.\r\n        // (Tính position mới của movingNode theo anchorPoint.)\r\n        let offsetX:number = movingAnchorPoint.x * targetToMovingNodeBoudingBox.width; \r\n        let offsetY:number = movingAnchorPoint.y * targetToMovingNodeBoudingBox.height;\r\n        targetToMovingNodeBoudingBox.x = targetToMovingNodeMinPoint.x + offsetX;\r\n        targetToMovingNodeBoudingBox.y = targetToMovingNodeMinPoint.y + offsetY;\r\n        targetToMovingNodeBoudingBox.z = targetToMovingNodeMinPoint.z;  // Note: targetToMovingNodeMinPoint.z != 0\r\n        return targetToMovingNodeBoudingBox;\r\n    }\r\n\r\n    static isChildClassOf(subClassName:string, superClassName:string){  \r\n        return js.isChildClassOf(js.getClassByName(subClassName), js.getClassByName(superClassName));\r\n    }\r\n\r\n    static searchStringInArray (str:string, strArray:string[]) {\r\n        for (let j=0; j<strArray.length; j++) {\r\n            if (strArray[j].match(str)) return j;\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    static isEmpty(obj:any):boolean{\r\n        return Object.keys(obj).length === 0 && obj.constructor === Object;\r\n    }\r\n\r\n    static isNull(obj: any): boolean {\r\n        return (obj == null || typeof (obj) == 'undefined');\r\n    }\r\n    \r\n    /**\r\n     * The function that compares whether two objects are equal or not is the fastest currently. Faster than lodash.isEqual\r\n     * (Hàm so sánh hai object co bang nhau hay khong, ham nhanh nhất hiện tại. Nhanh hơn lodash.isEqual )\r\n     * \r\n     * @param a \r\n     * @param b \r\n     * @returns \r\n     */\r\n    static areEqual(a:any , b:any):boolean{\r\n        // So sánh a, b khi ở dạng giá trị.\r\n        if (a === b) return true;\r\n\r\n        // So sánh khi a, b ở dạng object\r\n        if (a && b && typeof a == 'object' && typeof b == 'object') {\r\n            // \r\n            if (Array.isArray(a) && Array.isArray(b)) {\r\n                let length:number = a.length;\r\n                if (length != b.length) return false;\r\n                for (let i = length; i-- !== 0;){\r\n                    if (!Helper.areEqual(a[i], b[i])) {\r\n                        return false\r\n                    };\r\n                }\r\n                return true;\r\n            }\r\n            // \r\n            if ((a instanceof Map) && (b instanceof Map)) {\r\n                if (a.size !== b.size) return false;\r\n                for (let i of a.entries()){\r\n                    if (!b.has(i[0])) {\r\n                        return false\r\n                    };\r\n                }\r\n                for (let i of a.entries()){\r\n                    if (!Helper.areEqual(i[1], b.get(i[0]))) return false;\r\n                }\r\n                return true;\r\n            }\r\n            //\r\n            if ((a instanceof Set) && (b instanceof Set)) {\r\n                if (a.size !== b.size){\r\n                     return false;\r\n                }\r\n                for (let i of a.entries()){\r\n                    if (!b.has(i[0])) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n            //\r\n            if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\r\n                let length = a.byteLength;\r\n                if (length != b.byteLength) return false;\r\n                for (let i = length; i-- !== 0;)\r\n                  if (a[i] !== b[i]) return false;\r\n                return true;\r\n            }\r\n            //\r\n            if (a.valueOf && a.valueOf !== Object.prototype.valueOf && b.valueOf && b.valueOf !== Object.prototype.valueOf ) {return a.valueOf() === b.valueOf();}\r\n            if (a.toString && a.toString !== Object.prototype.toString && b.toString && b.toString !== Object.prototype.toString) {return a.toString() === b.toString();}\r\n            let keys:string[] = Object.keys(a);\r\n            let length:number = keys.length;\r\n            // Số key của b phải bằng a.\r\n            if (length !== Object.keys(b).length) return false;\r\n            // Bất kỳ key nào của a mà b không có thì return false\r\n            for (let i:number = length; i-- !== 0;) {\r\n                if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\r\n                    return false\r\n                }\r\n            };\r\n            // Tiếp tục so sánh ở các level tiếp theo.\r\n            for (let i:number = length; i-- !== 0;) {\r\n                let key = keys[i];\r\n                if (!Helper.areEqual(a[key], b[key])) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        // true if both NaN, false otherwise\r\n        return a!==a && b!==b;\r\n    }\r\n\r\n    /**\r\n     * Copy data with exclusion. (Sao chép data có loại trừ.)\r\n     * Note: Object references cannot be copied, object references will be converted into data with basic types: Array, Map, Set ValueType, number...\r\n     * (Lưu ý: Không sao chép được với các tham chiếu object mà các tham chiếu object sẽ bị convert thành data với các type cơ bản: Array, Map, Set ValueType, number ...)\r\n     * @param obj // Đối tượng sao chép\r\n     * @param excepteds // clone nhưng loại trừ các thuộc tính trong tham số này.\r\n     * @returns \r\n     */\r\n    static clone(obj:any, excepteds?:string[]):any{        \r\n        if(obj && typeof obj == 'object'){\r\n            let returnObj:any;\r\n            if (Array.isArray(obj)){\r\n                returnObj = [];\r\n                obj.forEach((value:any,index:number)=>{\r\n                    returnObj[index] = Helper.clone(value);\r\n                })\r\n            }else if (obj instanceof Map){\r\n                returnObj = new Map();\r\n                obj.forEach((value:any, key:any)=>{\r\n                    returnObj.set(key,Helper.clone(value));\r\n                })\r\n            }else if (obj instanceof Set){\r\n                returnObj = new Set();\r\n                obj.forEach((value:any)=>{\r\n                    returnObj.set(Helper.clone(value));\r\n                })\r\n            }else if(obj instanceof ValueType){\r\n                returnObj = obj.clone();\r\n            }else{\r\n                returnObj = {};\r\n                const keys:string[] = Object.keys(obj);\r\n                keys.forEach((key:string)=>{\r\n                    if(excepteds && excepteds.indexOf(key) != -1){\r\n                        undefined;\r\n                    }else{\r\n                        returnObj[key] = Helper.clone(obj[key])\r\n                    }\r\n                })\r\n            }\r\n            return returnObj;\r\n        }else{\r\n            return obj\r\n        }        \r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param obj \r\n     * @returns \r\n     */\r\n    static typeOf(obj:any):Constructor{\r\n        if (Array.isArray(obj)) return Array;\r\n        else if(obj instanceof Map) return Map;\r\n        else if(obj instanceof Set) return Set;\r\n        else if(obj instanceof ValueType) return ValueType;\r\n        else if(CCClass._isCCClass(obj)) return js.getClassByName(js.getClassName(obj))\r\n        else return Object;        \r\n    }\r\n\r\n    /**\r\n     * Simple object merging.\r\n     * @param toObj \r\n     * @param fromObj \r\n     * @param excepteds \r\n     */\r\n    static merge(toObj:any, fromObj:any, excepteds?:string[]){\r\n        if(fromObj && typeof fromObj == 'object'){\r\n            const keys:string[] = Object.keys(fromObj);\r\n            keys.forEach((key:string)=>{\r\n                if(excepteds && excepteds.indexOf(key) != -1){\r\n                    undefined;\r\n                }else if(toObj[key]){\r\n                    Helper.merge(toObj[key], fromObj[key]);\r\n                }else{\r\n                    toObj[key] = fromObj[key];\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param toObj \r\n     * @param fromObj \r\n     * @param excepteds \r\n     */\r\n    // static sameTypeMerge(toObj:any, fromObj:any, excepteds?:string[]){\r\n    //     const typeOfToObj:Constructor = Helper.typeOf(toObj);\r\n    //     const typeOfFromObj:Constructor = Helper.typeOf(fromObj);\r\n    //     if(typeOfFromObj === typeOfToObj){\r\n    //         if (typeOfFromObj === Array) {\r\n    //             fromObj.forEach((value:any,index:number)=>{\r\n    //                 toObj[index] = Helper.clone(value);\r\n    //             })\r\n    //         }else if(typeOfFromObj === Map) {\r\n    //             fromObj.forEach((value:any, key:any)=>{\r\n    //                 toObj.set(key, Helper.clone(value));\r\n    //             })\r\n    //         } else if(typeOfFromObj ===  Set) {\r\n    //             fromObj.forEach((value:any)=>{\r\n    //                 toObj.set(Helper.clone(value));\r\n    //             })\r\n    //         }else if(typeOfFromObj === ValueType) {\r\n    //             toObj.set(fromObj.clone())\r\n    //         }else {\r\n    //             const keys:string[] = Object.keys(fromObj);\r\n    //             keys.forEach((key:string)=>{\r\n    //                 if(excepteds && excepteds.indexOf(key) != -1){\r\n    //                     undefined;\r\n    //                 }else if(toObj[key]){\r\n    //                     Helper.sameTypeMerge(toObj[key], fromObj[key]);\r\n    //                     // Object.assign(toObj[key], fromObj[key])\r\n    //                 }else{\r\n    //                     toObj[key] = fromObj[key];\r\n    //                 }\r\n    //             })\r\n    //         }\r\n    //     }else{\r\n    //         error('Does not support merging 2 objs that are not of the same type!. (Không hỗ trợ merge 2 obj không cùng kiểu !)')\r\n    //     }\r\n    // }\r\n\r\n    /**\r\n     * \r\n     * @param value \r\n     * @param pattern \r\n     * @returns \r\n     */\r\n    static getCommand(value:string, pattern:RegExp = /\\{state\\.(.*)}/):string{\r\n        const searchValue:string = value.replace(/\\s+/g, '').trim();\r\n        const matchKeys:string[] = searchValue.match(pattern);\r\n        if(matchKeys && matchKeys[1]){            \r\n            return matchKeys[1]\r\n        }else{\r\n            const secondPattern:RegExp = /\\{(.*)}/;\r\n            return (pattern.source != secondPattern.source) ? this.getCommand(searchValue, secondPattern) : null\r\n        }\r\n        // return this.getCommand\r\n    }\r\n\r\n    /**\r\n     * Phân tích một object thành cặp giá trị (path, value). Ex: ('root.data.field', 10)\r\n     * Sau đó so sánh để với chuỗi searchPath để tìm ra giá trị cần tìm.\r\n     * @param obj \r\n     * @param searchPath \r\n     * @param currentPath // không yêu cầuu dùng thuộc tính này.\r\n     * @returns \r\n     */\r\n    static searchValue(obj:any, searchPath:string, currentPath?:null|string):any{        \r\n        if(currentPath && currentPath.indexOf(searchPath) !== -1){\r\n            return obj;\r\n        }else if(obj && typeof obj == 'object'){\r\n            let searchValue:any;\r\n            const keys:string[] = Object.keys(obj);\r\n            // \r\n            let searchPathResult:string;\r\n            keys.forEach((key:string)=>{\r\n                const sPath:string = currentPath ? currentPath + '.' + key : key;\r\n                const sValue:any = Helper.searchValue(obj[key], searchPath, sPath);\r\n                // Neu chua tim duoc searchValue nao thi luu sValue luon.\r\n                // Neu truoc do da co mot ket qua thi luu ket qua ngan hon.\r\n                if((sValue || js.isNumber(sValue)) && ( (!searchValue) || (searchValue && searchPathResult && (sPath.length < searchPathResult.length)) ) ){\r\n                    searchValue = sValue;                    \r\n                    searchPathResult = sPath;\r\n                }\r\n            })\r\n            //\r\n            return searchValue;\r\n        }        \r\n        return null\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param scriptObject \r\n     * @param outputObject \r\n     */\r\n    // static reduceScriptObject(scriptObject:any, outputObject:any){\r\n    //     if(scriptObject && (typeof scriptObject == 'object')){\r\n    //         const keys:string[] = Object.keys(scriptObject);\r\n    //         keys.forEach((key:string)=>{\r\n    //             if(key != 'response_script'){\r\n    //                 const payloadValue:any = scriptObject[key];\r\n    //                 if(payloadValue){\r\n    //                     if(typeof payloadValue == 'string'){\r\n    //                         const command:string = Helper.getCommand(payloadValue);\r\n    //                         if(command){\r\n    //                             scriptObject[key] = Helper.searchValue(outputObject, command);\r\n    //                         }\r\n                            \r\n    //                     }else if(typeof payloadValue == 'function'){\r\n    //                         scriptObject[key] = (payloadValue as Function)(outputObject);\r\n    //                     }else{\r\n    //                         Helper.reduceScriptObject(payloadValue, outputObject);\r\n    //                     }\r\n    //                 }\r\n    //             }\r\n    //             // \r\n    //         })\r\n    //         // \r\n    //     }\r\n    //     // \r\n    // }\r\n    \r\n    /**\r\n     * \r\n     * @param obj \r\n     * @param fromValue string: path, any: value \r\n     * @param toPath \r\n     */\r\n    static copyInside(obj:any, fromValue:any, toPath:string, modifyValueFunc?:Function){\r\n        const value:any = (typeof fromValue == 'string') ? Helper.searchValue(obj, fromValue) : fromValue;\r\n        const paths:string[] = toPath.split('.');\r\n        let pathObj:any = obj;\r\n        while((paths.length - 1) > 0){\r\n            const key:string = paths.shift();            \r\n            pathObj[key] = pathObj[key] || Object.create(null)\r\n            pathObj = pathObj[key];\r\n        }\r\n        const key:string = paths.shift();\r\n        pathObj[key] = modifyValueFunc ? modifyValueFunc(key, value, toPath) : value;\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     * @param obj \r\n     * @param searchPath \r\n     * @param value \r\n     */\r\n    static updateValue(obj:any, searchPath:string, value:any){\r\n        const refObj:ReferenceObject = this.searchReferenceObject(searchPath, obj);\r\n        if(refObj) {\r\n            refObj[refObj.key] = value;\r\n        }else{\r\n            error('Search Path chưa đúng => ' + searchPath);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param searchPath \r\n     * @param obj  object\r\n     * @param currentPath string\r\n     * @returns ReferenceObject\r\n     */\r\n    static searchReferenceObject(searchPath:string, obj:any, currentPath?:string):ReferenceObject{\r\n        if(currentPath && currentPath.indexOf(searchPath) != -1){\r\n            return obj;\r\n        }else if(obj && typeof obj == 'object'){\r\n            let searchValue:ReferenceObject;\r\n            const keys:string[] = Object.keys(obj);\r\n            keys.findIndex((key:string)=>{\r\n                const sPath:string = currentPath ? currentPath + '.' + key : key;\r\n                const sValue:any = Helper.searchReferenceObject(searchPath, obj[key], sPath);\r\n                if(!searchValue && sValue){\r\n                    searchValue = Object.create(null);\r\n                    searchValue.parent = obj;\r\n                    searchValue.key = key;\r\n                    searchValue.value = obj[key];\r\n                    return true\r\n                }\r\n                return false\r\n            })\r\n            return searchValue;\r\n        }\r\n        return null\r\n    }\r\n\r\n    \r\n    static convertToEnum(objOrArray:any):any{\r\n        const enumDef: {[key: string]: number} = {};\r\n        const names:string[] = Array.isArray(objOrArray) ? objOrArray : Object.keys(objOrArray);\r\n        names.forEach((bundle:string, index:number)=>enumDef[bundle] = index)\r\n        return Enum(enumDef)\r\n    }\r\n\r\n    static enumKey(EnumType:any, value:any):string{\r\n        for (var enumMember in EnumType) {\r\n            if(EnumType[enumMember] === value) {\r\n                return enumMember;\r\n            }\r\n        }\r\n        return '';        \r\n    }\r\n\r\n    static detechUnitVector(vector:Vec3):Vec3{\r\n        const uX:number = Math.abs(vector.x) || 1;//(vector.x != 0) ? Math.abs(vector.x):1\r\n        const uY:number = Math.abs(vector.y) || 1;//(vector.y != 0) ? Math.abs(vector.y):1\r\n        const uZ:number = Math.abs(vector.z) || 1;//(vector.y != 0) ? Math.abs(vector.y):1\r\n        return vector.clone().divide3f(uX, uY, uZ);\r\n    }\r\n\r\n    static positiveVector(vector:Vec2|Vec3):Vec2|Vec3{\r\n        if(vector instanceof Vec2){\r\n            return new Vec2(Math.abs(vector.x), Math.abs(vector.y));\r\n        }else if(vector instanceof Vec3){\r\n            return new Vec3(Math.abs(vector.x), Math.abs(vector.y), Math.abs(vector.z || 0));\r\n        }\r\n        return vector;\r\n    }\r\n\r\n    // static modulusVector(vector:Vec3, rankVec:Vec3):Vec3{\r\n    //     const _x:number = vector.x % rankVec.x || 0;\r\n    //     const _y:number = vector.y % rankVec.y || 0;\r\n    //     const _z:number = vector.z % rankVec.z || 0;\r\n    //     return new Vec3(_x, _y, _z);\r\n    // }\r\n\r\n    /**\r\n     * Tính toán size vector theo hướng uVec và giá trị của anchorPoint.\r\n     * o**********    ^            anchorVector(ax, 1 - ay, 0)\r\n     * *   |     *    | y           \r\n     * *---a     *    a --x-->      \r\n     * *         *                  \r\n     * *********** \r\n     * @param uVec \r\n     * @param tranform \r\n     * @returns \r\n     */\r\n    static calculateAnchorSizeVector(uVec:Vec3, tranform:any ):Vec3{\r\n        const tW:number = (tranform instanceof UITransform) ? tranform.contentSize.width : tranform.w;\r\n        const tH:number = (tranform instanceof UITransform) ? tranform.contentSize.height : tranform.h\r\n        const aX:number = tranform.anchorX;\r\n        const aY:number = tranform.anchorY;\r\n        // if(tW && tH && aX && aY){\r\n            return  uVec.clone().multiply3f(aX*tW, (1 - aY)*tH, 0)\r\n        // }\r\n        // return null;\r\n    }\r\n\r\n    /**\r\n     * Check xem 2 vector có phải ngược chiều nhau không ?\r\n     * @param lastVec \r\n     * @param currentVec \r\n     * @returns \r\n     */\r\n    // static areNegative(vec1:Vec3, vec2:Vec3):boolean{\r\n    //     let uVec1:Vec3 = Helper.detechUnitVector(vec1).negative();\r\n    //     let uVec2:Vec3 = Helper.detechUnitVector(vec2);\r\n    //     return uVec1.equals(uVec2);\r\n    // }\r\n    \r\n    static areNegative(vecA:Vec3|Vec2, vecB:Vec3|Vec2):boolean{        \r\n        return !(vecA.x*vecB.x >= 0 && vecA.y*vecB.y >= 0);\r\n    }\r\n    \r\n    // ------------------------ URL ------------------------------\r\n\r\n    /**\r\n     * \r\n     * @param params \r\n     * @returns \r\n     */\r\n    static queryParamsToString(params:any):string{\r\n        return params ? '?' + Object.keys(params).map( (key:string)=>( encodeURIComponent(key) + '=' + params[key] ) ).join('&') : '';\r\n    }\r\n\r\n    static isHttpURL(url:string):boolean{\r\n        const pattern = new RegExp('^(https?:\\\\/\\\\/)?'+ // protocol\r\n          '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|'+ // domain name\r\n          '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))'+ // OR ip (v4) address\r\n          '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*'+ // port and path\r\n          '(\\\\?[;&a-z\\\\d%_.~+=-]*)?'+ // query string\r\n          '(\\\\#[-a-z\\\\d_]*)?$','i'); // fragment locator\r\n        return !!pattern.test(url);\r\n    }\r\n\r\n    static parseHttpURL(url:string):any{\r\n\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param url \r\n     * @returns \r\n     */\r\n    static urlToArray(url):{[n:string]:string} {\r\n        var request = {};\r\n        var pairs = url.substring(url.indexOf('?') + 1).split('&');\r\n        for (var i = 0; i < pairs.length; i++) {\r\n            if(!pairs[i])\r\n                continue;\r\n            var pair = pairs[i].split('=');\r\n            request[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n         }\r\n         return request;\r\n    }\r\n\r\n\r\n    static arrayToURL(array:string[]):string {\r\n        var pairs = [];\r\n        for (var key in array)\r\n          if (array.hasOwnProperty(key))\r\n      \r\n            pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(array[key]));\r\n        return pairs.join('&');\r\n      }\r\n\r\n    /**\r\n     * \r\n     * @param url \r\n     * @param pars \r\n     * @param callback \r\n     * @param accessToken \r\n     */\r\n    // static getHttp(url:string, pars:any, callback:Function, accessToken:string = null) {\r\n\t// \tvar http = new XMLHttpRequest();\r\n\t// \tlet parStr = \"\";\r\n\r\n\t// \tif (pars && Array.isArray(pars) && pars.length > 0) {\r\n\t// \t\tfor (let i = 0; i < pars.length; i++) {\r\n\t// \t\t\tif (i == 0) {\r\n\t// \t\t\t\tparStr = parStr + \"?\" + pars[i][0] + \"=\" + pars[i][1];\r\n\t// \t\t\t} else {\r\n\t// \t\t\t\tparStr = parStr + \"&\" + pars[i][0] + \"=\" + pars[i][1];\r\n\t// \t\t\t}\r\n\t// \t\t}\r\n\t// \t} else if (typeof pars == \"object\") {\r\n\t// \t\tparStr = parStr + \"?\";\r\n\t// \t\tfor (let v in pars) {\r\n\t// \t\t\tparStr += v + \"=\" + pars[v] + \"&\";\r\n\t// \t\t}\r\n\t// \t\tparStr = parStr.substring(0, parStr.length - 1);\r\n\t// \t}\r\n\r\n\t// \tlet urlNew = url + parStr;\r\n\r\n\t// \t// add invalidation trick\r\n\t// \t// if (urlNew.includes(\"?\")) {\r\n\t// \t// \turlNew += \"&dummy=\" + Date.now().toString();\r\n\t// \t// } else {\r\n\t// \t// \turlNew += \"?dummy=\" + Date.now().toString();\r\n\t// \t// }\r\n\r\n\t// \thttp.open(\"GET\", urlNew, true);\r\n\t// \thttp.onloadend = () => {\r\n\t// \t\t// var result = JSON.parse(http.responseText);\r\n\t// \t\tif (http.readyState == 4 && http.status == 200) {\r\n\t// \t\t\tcallback(null, http.responseText);\r\n\t// \t\t} else if (http.readyState == 4) {\r\n\t// \t\t\tcallback(http.responseText, null);\r\n\t// \t\t}\r\n\t// \t};\r\n\t// \thttp.onerror = (err) => {\r\n\t// \t\tcallback(err, null);\r\n\t// \t};\r\n\t// \thttp.ontimeout = (err) => {\r\n\t// \t\tcallback(err, null);\r\n\t// \t};\r\n\r\n\t// \tif (accessToken) {\r\n\t// \t\thttp.setRequestHeader(\"Authorization\", \"Bearer \" + accessToken);\r\n\t// \t}\r\n\r\n\t// \thttp.send();\r\n\t// }\r\n\t\r\n    // static postHttp(\r\n\t// \turl:string,\r\n\t// \tpars:any,\r\n\t// \tcallback:Function,\r\n\t// \tcontentType = \"application/json\",\r\n\t// \taccessToken = null\r\n\t// ) {\r\n\t// \tvar http = new XMLHttpRequest();\r\n\t// \thttp.open(\"POST\", url, true);\r\n\t// \thttp.setRequestHeader(\"Content-type\", contentType);\r\n\r\n\t// \thttp.onloadend = () => {\r\n\t// \t\tif (http.readyState == 4 && http.status >= 200 && http.status < 300) {\r\n\t// \t\t\tcallback(null, http.response);\r\n\t// \t\t} else if (http.readyState == 4) {\r\n\t// \t\t\tcallback(http.response, null);\r\n\t// \t\t}\r\n\t// \t};\r\n\r\n\t// \thttp.onerror = (err) => {\r\n\t// \t\tcallback(err, null);\r\n\t// \t};\r\n\r\n\t// \thttp.ontimeout = (err) => {\r\n\t// \t\tcallback(err, null);\r\n\t// \t};\r\n\r\n\t// \tif (accessToken) {\r\n\t// \t\thttp.setRequestHeader(\"Authorization\", \"Bearer \" + accessToken);\r\n\t// \t}\r\n\r\n\t// \thttp.send(pars);\r\n\t// }\r\n\r\n\tstatic getUrlVars():object {\r\n\t\tvar vars = {};\r\n\t\tvar parts = window.location.href.replace(\r\n\t\t\t/[?&]+([^=&]+)=([^&]*)/gi,\r\n\t\t\t//@ts-ignore\r\n\t\t\tfunction (m, key, value) {\r\n\t\t\t\tvars[key] = value;\r\n\t\t\t}\r\n\t\t);\r\n\t\treturn vars;\r\n\t}\r\n\r\n\tstatic formatFloatToString(num, maxDigitNum = 2, useLocale = true, curStr = \"\") {\r\n\t\tnum = parseFloat(num.toFixed(10));\r\n\t\tlet str = num.toString();\r\n\t\tlet num_digits_after_decimal = (str.indexOf(\".\") != -1 ? str.length - 1 - str.indexOf(\".\") : 0);\r\n\t\tif (maxDigitNum > 0)\r\n\t\t\tnum_digits_after_decimal = Math.min(num_digits_after_decimal, maxDigitNum);\r\n\t\tlet locale_opt = useLocale ? \r\n\t\t\t{ \r\n\t\t\t\tminimumFractionDigits: Math.max(num_digits_after_decimal, 2),\r\n\t\t\t\tstyle: curStr.length > 0 ? \"currency\" : \"decimal\",\r\n\t\t\t\tcurrency: curStr.length > 0 ? curStr : \"USD\"\r\n\t\t\t}\r\n\t\t\t: {};\r\n\t\tif (num_digits_after_decimal >= 2)\r\n\t\t\treturn useLocale ? parseFloat(str).toLocaleString(undefined, locale_opt) : str;\r\n\t\telse\r\n\t\t\treturn useLocale ? num.toLocaleString(undefined, locale_opt) : num.toFixed(2);\r\n\t}\r\n\r\n    // static getUuidFromURL (url: string): string {\r\n    //     const _uuidRegex = /.*[/\\\\][0-9a-fA-F]{2}[/\\\\]([0-9a-fA-F-@]{8,}).*/;\r\n    //     const matches = _uuidRegex.exec(url);\r\n    //     if (matches) {\r\n    //         return matches[1];\r\n    //     }\r\n    //     return '';\r\n    // }\r\n    static getStringInsideSignal(fullString:string, signal:string = \"<>\"){\r\n        if(fullString && fullString.length){\r\n            const signalArr:string[] = signal.split('');\r\n            const left:string = signalArr[0];\r\n            const right:string = signalArr[1];\r\n            const InsideSignalRegex:string = \"/(?\"+left+\"=\\\\\"+left+\").+?(?=\\\\\"+right+\")/g;\"\r\n            const insideSignalStr:string[] = fullString.match(new RegExp(InsideSignalRegex))[0].split(/\\s/g);\r\n            // const insideTags:string[] = fullString.match(InsideTagRegex)[0].split(/\\s/g);\r\n            if(insideSignalStr && insideSignalStr.length) return insideSignalStr[0];\r\n        }\r\n    }\r\n    \r\n\r\n    static upperCaseFirstCharacter(value:string):string{\r\n        return value.replace(/\\b\\w/g, c => c.toUpperCase()).replace(/(?=[A-Z])/g,' ');\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param value \r\n     * @param searchHubs \r\n     * @returns \r\n     */\r\n    static search(value:string, searchHubs:string[]| SearchingSet):string[]{\r\n        let searchingSet:SearchingSet\r\n        if(searchHubs instanceof SearchingSet){\r\n            searchingSet = searchHubs;\r\n        }else{\r\n            searchingSet = new SearchingSet();\r\n            searchHubs.forEach((str:string)=>{\r\n                searchingSet.add(str);\r\n            })\r\n        }\r\n        if(!searchingSet.isEmpty()){\r\n            return searchingSet.get(value).reduce((results:string[], info:any[] )=>{\r\n                results.push(info[1] as string);\r\n                return results;\r\n            }, [])\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static updateEnum (targetObj:any, propName:string , newEnum:unknown):any {\r\n        let defaultEnum = Object.assign( Enum({}) , newEnum);\r\n        Enum['update'](defaultEnum);\r\n        CCClass[\"Attr\"].setClassAttr(targetObj, propName, 'type', 'Enum');\r\n        CCClass[\"Attr\"].setClassAttr(targetObj, propName, 'enumList', Enum[\"getList\"](defaultEnum));\r\n        return defaultEnum\r\n    }\r\n\r\n    static getClassNameFromPrefab(prefab:Prefab):string{\r\n        const popupComp:any = prefab.data.getComponent(Component);        \r\n        return popupComp ? js.getClassName(popupComp) : null\r\n    }\r\n\r\n    // ----------------------------- Array -------------------\r\n\r\n    /**\r\n     * \r\n     * @param arr \r\n     * @param i1 \r\n     * @param i2 \r\n     */\r\n    static swapElements(arr:any[], i1:any, i2:any) {\r\n        [arr[i1], arr[i2]] = [arr[i2], arr[i1]];\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     * Trả về mảng các phần tử khác nhau của 2 mảng cho trước.\r\n     * @param arr1 \r\n     * @param arr2 \r\n     * @param include   Default: function(elm:any,a:any[], i:number , side?:0|1){ return a.indexOf(elm) !== -1 }\r\n     * @param merge     Ex: function(elm:any, a:any[], i:number , side?:0|1):boolean{ a[i] = elm  }\r\n     * @returns         Trả về mảng chứa các phần tử khác nhau của 2 mảng cho trước.\r\n     */\r\n    // static symmetricDiff(arr1:any[], arr2:any[], include:Function = function(elm:any,a:any[], i:number, side?:0|1):boolean{ return (a.indexOf(elm) !== -1) }, merge?:Function) {        \r\n    //     return arr1.filter((elm:any , i:number)=> {\r\n    //             const bool:boolean = !include(elm,arr2,i,0);\r\n    //             bool && merge && merge(elm, arr2, i, 0);\r\n    //             return bool;\r\n    //         }).concat(arr2.filter((elm:any, i:number) =>{\r\n    //             const bool:boolean = !include(arr1,elm,i,1);\r\n    //             bool && merge && merge(elm, arr1, i, 1);\r\n    //             return bool;\r\n    //         }))    \r\n    // }\r\n\r\n\r\n    // static arrayMapping(inputs:unknown[], mapFunc:(C:any)=>(typeof C)[]){\r\n\r\n    // }\r\n\r\n}\r\n","import { _decorator, Component, Node } from 'cc';\r\nimport { Enum } from 'cc';\r\nimport { SupportedLanguages } from '../LocalizationController';\r\nimport { DEV, EDITOR } from 'cc/env';\r\nimport { Label } from 'cc';\r\nimport { LabelShadow } from 'cc';\r\nimport { LabelOutline } from 'cc';\r\nimport { log } from 'cc';\r\nimport { js } from 'cc';\r\nimport { Prefab } from 'cc';\r\nimport { SpriteFrame } from 'cc';\r\nimport { Size } from 'cc';\r\nimport { UITransform } from 'cc';\r\nimport { GameUtils } from '../../../utils/GameUtils';\r\nimport { Sprite } from 'cc';\r\nimport { SpriteAtlas } from 'cc';\r\nimport { CCBoolean } from 'cc';\r\nimport { warn } from 'cc';\r\nimport { CCClass } from 'cc';\r\nimport { Layers } from 'cc';\r\nimport { instantiate } from 'cc';\r\nimport { Layout } from 'cc';\r\nimport { error } from 'cc';\r\nimport { Helper } from '../../../gamify/utils/Helper';\r\nimport { Vec3 } from 'cc';\r\nimport { importRemoteCCClass, remoteCCClass } from '../../../gamify/utils/RemoteScriptImporter';\r\n\r\nconst { ccclass, property, executeInEditMode } = _decorator;\r\nconst LocalizationController:any = importRemoteCCClass('LocalizationController');\r\n\r\nconst DEFAULT_ELEMENT_NAME:string = 'element';\r\nconst WordBreakingRegex:RegExp = /([\\w ]+)\\s([\\w ]+)/g;        //          /((\\b[^\\s]+\\b)((?<=\\.\\w).)?)/g;\r\n\r\n// /\\([^)]*\\)|\\[[^\\]]*\\]/g;\r\nconst Separate:RegExp = /\\r?\\n|\\r|\\n/g\r\nconst FindBracketRegex:RegExp = /\\<(.*?)\\>/g;       // < > Bracket\r\nconst InsideBracketRegex:RegExp = /(?<=\\<).+?(?=\\>)/g;\r\n\r\nconst RemoveBracketRegex:RegExp = /[<>]/g;\r\n\r\nexport const LangEnum:any = GameUtils.getEnumFromArray(SupportedLanguages, 'default')\r\n\r\nenum LocalizeType {\r\n    NORMAL_TEXT,\r\n    RICH_TEXT,\r\n    IMAGE_TEXT\r\n}\r\nEnum(LocalizeType)\r\n\r\n\r\n// const enum SUPPORT_BRACKET_REGEX {\r\n//     '<>',\r\n//     '{}',\r\n//     '[]',\r\n//     '$$',\r\n//     '%%',\r\n//     '@@',\r\n//     '^^'\r\n// }\r\n\r\nconst SYMBOL_ENUM:any = Enum({NO_CONFIG:0});\r\nconst STYLE_ENUM:any = Enum({CHOOSE_STYLE_TEMPLATE_FIRST:0});\r\n\r\n\r\n@ccclass('LanguageSymbol')\r\nclass LanguageSymbol {\r\n    \r\n    static ENUM:any = SYMBOL_ENUM;\r\n    static IMAGE_EMBED:string = 'IMG_EMBED::'\r\n    static IMAGE_NAME:string = 'IMAGE_NAME::'\r\n\r\n    @property({\r\n        displayName:'Replaced Tag'\r\n    })  \r\n    public get tag(): string {\r\n        return this._tag;\r\n    }\r\n\r\n    public set tag(value: string) {\r\n        this._tag = value.trim();\r\n    }\r\n\r\n    @property({\r\n        type: SYMBOL_ENUM,\r\n        visible(){\r\n            return !this._spriteFrame && !Helper.areEqual(this.enum, SYMBOL_ENUM)\r\n        },\r\n        serializable:true,\r\n        displayName: 'Sprite Frame'\r\n    })    \r\n    public get spriteFrameEnum(): number {        \r\n        return this._spriteFrameEnum;        \r\n    }\r\n\r\n    public set spriteFrameEnum(value: number) {\r\n        // log('_spriteFrameEnum :: ' + this._spriteFrameEnum + '  -enum :: ' + Object.keys(this.enum))\r\n        this._spriteFrameEnum = value;\r\n        const spName:string= this.enum[value];\r\n        if(spName && spName.length) {\r\n            this._spriteFrameName = spName;\r\n        }\r\n    }\r\n\r\n    @property({        \r\n        type:SpriteFrame,\r\n        serializable:true,\r\n        visible:true,\r\n        displayName: 'Embed SpriteFrame'\r\n    })\r\n    public get spriteFrame():SpriteFrame{\r\n        return this._spriteFrame\r\n    }\r\n\r\n    public set spriteFrame(value:SpriteFrame){\r\n        this._spriteFrame = value;\r\n        // this._spriteFrameName = LanguageSymbol.COMA + value.name;\r\n    }\r\n\r\n    @property({visible:false, serializable:true})\r\n    private _tag: string = '';\r\n    \r\n    @property({visible:false, serializable:true})\r\n    private _spriteFrameName: string = '';\r\n\r\n    @property({visible:false, serializable:true})\r\n    private _spriteFrameEnum: number = 0;\r\n\r\n    @property({visible:false, serializable:true})\r\n    private _spriteFrame: SpriteFrame;\r\n\r\n    @property({visible:false, serializable:true})\r\n    enum:any = SYMBOL_ENUM;\r\n\r\n    updateEnum(){\r\n        GameUtils.updateEnum(this.constructor, 'spriteFrameEnum', this.enum);        \r\n        this.spriteFrameEnum = this.enum[this._spriteFrameName];        \r\n    }\r\n\r\n}\r\n\r\n@remoteCCClass('LanguageConvertorPackage')\r\n@executeInEditMode(true)\r\nexport class LanguageConvertorPackage extends Component {\r\n    \r\n    @property({type:LangEnum})\r\n    language:number = LangEnum.en;\r\n    \r\n    \r\n        \r\n    @property({\r\n        type:LocalizeType\r\n    })\r\n    get type():number {\r\n        return this._type\r\n    }\r\n\r\n    set type(value:number){\r\n        this._type = value;\r\n\r\n    }\r\n\r\n    @property({\r\n        type:CCBoolean,\r\n        serializable:true,\r\n        visible:true,\r\n        displayName:'Show In Editor',\r\n        group:'SETTING'\r\n    })\r\n    get editMode():boolean {        \r\n        return this._editMode\r\n    }\r\n\r\n    set editMode(value:boolean){\r\n        this._editMode = value;\r\n        this.onStartRender();\r\n    }\r\n\r\n    @property({\r\n        displayName:'Prefix Sentence',\r\n        group:'SETTING',\r\n        visible() {\r\n            return this.type !== LocalizeType.IMAGE_TEXT\r\n        }\r\n    })\r\n    prefix:string = ''\r\n     \r\n    @property({\r\n        type: Prefab,\r\n        visible() {\r\n            return this.type !== LocalizeType.IMAGE_TEXT;\r\n        },\r\n        serializable:true,\r\n        group: 'SETTING'\r\n    })\r\n    public get styleTemplate(): Prefab {        \r\n        // Editor.assetdb.uuidToUrl (uuid)\r\n        return this._styleTemplate;\r\n    }\r\n    public set styleTemplate(value: Prefab) {        \r\n        if(this._styleTemplate !== value){\r\n            this._styleTemplate = value;            \r\n            // this.selectedStyle = 0;\r\n            this.updateStyleEnums();\r\n            this.onStartRender();\r\n        }\r\n    }\r\n    \r\n    @property({\r\n        type: STYLE_ENUM,\r\n        visible() {\r\n            return this.type !== LocalizeType.IMAGE_TEXT && !!this.styleTemplate;\r\n        },\r\n        displayName:'|__ Selected Style',\r\n        group: 'SETTING'\r\n    })\r\n    public get selectedStyle(): number {\r\n        return this._selectedStyle;\r\n    }\r\n    public set selectedStyle(value: number) {\r\n        this._selectedStyle = value;\r\n        // !value && this.onDisableRender();\r\n        // this.onStartRender();\r\n    }\r\n\r\n    \r\n\r\n    @property({\r\n        visible() {\r\n            return (this.language == LangEnum.default) && this.type !== LocalizeType.IMAGE_TEXT\r\n        },\r\n        group:'SETTING'\r\n    })\r\n    get exampleText():string{\r\n        return this._exampleText;\r\n    }\r\n\r\n    set exampleText(value:string){\r\n        this._exampleText = value;\r\n    }\r\n\r\n    @property({\r\n        type:SpriteAtlas,\r\n        visible() {\r\n            return this.type == LocalizeType.IMAGE_TEXT \r\n        },\r\n        group:'SETTING'\r\n    })\r\n    get defaultAtlas():SpriteAtlas {\r\n        return this._defaultAtlas\r\n    }\r\n\r\n    set defaultAtlas(atlas:SpriteAtlas){\r\n        if(EDITOR){\r\n            this._defaultAtlas = atlas\r\n        }\r\n    }\r\n    \r\n    @property({\r\n        type:SpriteAtlas,\r\n        visible() {\r\n            return this.type == LocalizeType.RICH_TEXT\r\n        },        \r\n        group:'MAPPING'\r\n    })\r\n    get symbolAtlas():SpriteAtlas {\r\n        return this._symbolAtlas;\r\n    }\r\n\r\n    set symbolAtlas(atlas:SpriteAtlas){        \r\n        this._symbolAtlas = atlas;\r\n        this.updateTagEnums();\r\n    }\r\n    \r\n    @property({\r\n        type:[LanguageSymbol],\r\n        visible(){\r\n            return this.type == LocalizeType.RICH_TEXT;\r\n        },\r\n        serializable:true,\r\n        group:'MAPPING'\r\n    })\r\n    tags:LanguageSymbol[] = [];\r\n\r\n\r\n\r\n    \r\n    @property({visible:false, serializable:true})\r\n    protected _defaultAtlas:SpriteAtlas = null;\r\n\r\n    @property({visible:false, serializable:true})\r\n    protected _type:number = 0;\r\n\r\n    @property({visible:false, serializable:true})\r\n    protected _exampleText:string = '';\r\n\r\n    @property({visible:false, serializable:true})\r\n    private _editMode: boolean;\r\n    \r\n    @property({visible:false, serializable:true})\r\n    private _styleTemplate: Prefab = null;\r\n    \r\n    @property({visible:false, serializable:true})\r\n    private _selectedStyle: number = 0;\r\n\r\n    @property({visible:false, serializable:true})\r\n    private _styleEnum:any;\r\n\r\n    @property({visible:false, serializable:true})\r\n    private _symbolAtlas: SpriteAtlas;\r\n\r\n    \r\n    @property({\r\n        serializable:true\r\n    })\r\n    private _key :string = null;\r\n\r\n    @property({\r\n        readonly:true\r\n    })\r\n    get key():string{\r\n        return this._key //|| this.node.getComponent(MultilingualConvertor)?.key;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    get string():string{\r\n        return this._string;\r\n    }\r\n    set string(value:string){        \r\n        if (value === null || value === undefined) {\r\n            value = '';\r\n        } else {\r\n            value = value.toString();\r\n        }\r\n\r\n        if (this._string === value) {\r\n            return;\r\n        }\r\n        this.onDisableRender();\r\n        this._string = this.renderNormalText(value);\r\n        this.disableTargetComponent();\r\n    }\r\n\r\n    @property({\r\n        serializable:true,\r\n        visible:false\r\n    })\r\n    private saveContentSize:Size;\r\n\r\n    private _forceRunning:boolean = false;\r\n\r\n    private _string: string = '';\r\n\r\n    // --------------------\r\n\r\n    setKey(key:string){\r\n        this._key = key;\r\n\r\n    }\r\n\r\n    // @override\r\n    translate(force:boolean = false){\r\n        this._forceRunning = this._forceRunning || force;\r\n        this.onStartRender();\r\n    }\r\n\r\n    clear(){\r\n        this.onDisableRender();\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    get languageInUse():boolean{\r\n        return (LocalizationController.language == LangEnum[this.language]) || this._forceRunning;\r\n    }\r\n\r\n    save(){\r\n\r\n    }\r\n\r\n    load(){\r\n        \r\n    }\r\n\r\n    // --------------------\r\n\r\n    /**\r\n     * \r\n     */\r\n    protected onLoad(): void {\r\n        // console.log('LanguageConvertorPackage !!!!!!!!! ' + this.node.getPathInHierarchy())\r\n        \r\n        if(!this.saveContentSize || EDITOR){            \r\n            const uiTranform:UITransform = this.node.getComponent(UITransform) || this.node.addComponent(UITransform);\r\n            this.saveContentSize = uiTranform.contentSize.clone();\r\n        }\r\n        // \r\n        if(!this.exampleText || !this.exampleText.length){\r\n            const defaultLabel:Label = this.getTargetComponentAs(Label);   \r\n            if(defaultLabel && defaultLabel.string && defaultLabel.string.length){\r\n                this.exampleText = defaultLabel.string;\r\n            }\r\n        }\r\n        // \r\n        this.updateStyleEnums();\r\n        this.updateTagEnums();\r\n        this.onDisableRender();\r\n        super.onLoad && super.onLoad();\r\n        EDITOR && this.onStartRender();\r\n    }\r\n\r\n    // protected start(): void {\r\n    //     if(!EDITOR){\r\n    //         if(!this.saveContentSize){\r\n    //             const uiTranform:UITransform = this.node.getComponent(UITransform) || this.node.addComponent(UITransform);\r\n    //             this.saveContentSize = uiTranform.contentSize.clone();\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    // protected start(): void {        \r\n        \r\n    // }\r\n\r\n    /**\r\n     * \r\n     */\r\n    protected onStartRender(){\r\n        // this.onDisableRender();\r\n        if(EDITOR){            \r\n            this.editMode ? this.onEnableRender() : this.onDisableRender();\r\n        }else{            \r\n            this.languageInUse ? this.onEnableRender() : this.onDisableRender();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    protected onDisableRender(){\r\n        let langNode:Node = this.node.getChildByName(LangEnum[this.language]);\r\n        langNode && langNode.removeFromParent();\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    protected onEnableRender(){        \r\n        switch(this.type){\r\n            case LocalizeType.NORMAL_TEXT:\r\n                this.renderNormalText();\r\n                break;\r\n\r\n            case LocalizeType.RICH_TEXT:\r\n                this.renderRichText();\r\n                break;\r\n\r\n            case LocalizeType.IMAGE_TEXT:\r\n                this.renderImageText();\r\n                break;\r\n        }\r\n        // \r\n        this.disableTargetComponent();       \r\n    }\r\n\r\n    \r\n    /**\r\n     * \r\n     */\r\n    private disableTargetComponent(){\r\n        const labelComp:Label = this.getTargetComponentAs(Label); //this.node.getComponent(Label);\r\n        if(labelComp) {            \r\n            labelComp.enabled = EDITOR ? labelComp.enabled : false\r\n        } \r\n        const spriteComp:Sprite = this.getTargetComponentAs(Sprite); //this.node.getComponent(Sprite);\r\n        if(spriteComp) {            \r\n            spriteComp.enabled = EDITOR ? spriteComp.enabled : false\r\n        }\r\n    }\r\n    \r\n\r\n    // -----------------------\r\n\r\n    /**\r\n     * \r\n     */\r\n    protected renderNormalText(string:string = null):string{\r\n        // if(EDITOR && !this.node.getComponent(MultilingualConvertor)?.translateInEditor) {\r\n        //     warn('Please, Turn on \\\"Allow Translation in Editor\\\" mode (This message only show on EDITOR mode)');\r\n        //     return;\r\n        // }else \r\n        if(!this.key || !this.key.length){\r\n            (EDITOR || DEV) && warn('Please, Need a key for translation. (This message only show on EDITOR or DEV mode)');\r\n            return;\r\n        }\r\n        // \r\n        let rawText:string = string ? string : this.getString(this.key);\r\n        if(rawText !== null || rawText !== undefined ){    \r\n            rawText = this.prefix + rawText;        \r\n            \r\n            let selectedTemplate:Node;\r\n            if(this.styleTemplate){\r\n                const labelTemplates:Label[] = this.styleTemplate.data.getComponentsInChildren(Label);\r\n                const selectedLabelStyle = labelTemplates[this.selectedStyle];\r\n                selectedTemplate = selectedLabelStyle.node;\r\n            }\r\n            \r\n            const labelIterator:Generator<Label> = this.getElements.call(this, Label, this.node, this.selectedStyle, selectedTemplate);\r\n            \r\n            // Add the  layout for resizing the text display on NormalText.\r\n            // const langNode:Node = this.node.getChildByName(LangEnum[this.language]);\r\n            // langNode && this.normalizeLayout(langNode);\r\n            // \r\n            const selectedLabel:Label = labelIterator.next()?.value;\r\n            if(selectedLabel){\r\n                selectedLabel.enabled = true;                 \r\n                selectedLabel.node.layer = Layers.Enum.UI_2D;                \r\n                // \r\n                if(!this.styleTemplate){\r\n                    this.normalizeLabel(selectedLabel);\r\n                    // this.normalizeLayout(this.node)\r\n                }\r\n                // \r\n                selectedLabel.string = rawText;\r\n                selectedLabel.updateRenderData(true);\r\n                // log('\\n selectedLabel:: ' + selectedLabel['contentWidth'] )\r\n                // this.normalizeLayout(this.node)\r\n                this.bubbleResize(selectedLabel.node);\r\n                // this.removeLayout(this.node)\r\n                //                 \r\n                // this.bubbleUpdateLSize(selectedLabel.node);                \r\n            }\r\n            this._string = rawText;\r\n        }else{\r\n            DEV && warn('Can not find out the sentence with key \\\"' + this.key + '\\\" when using Normal Text mode for \\\"' + LangEnum[this.language] + '\\\" language. Path node: ' + this.node.getPathInHierarchy() + ' (This message only show on DEV mode)');\r\n        }\r\n        return rawText;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    protected renderRichText(string:string = null){\r\n        if(!this.key || !this.key.length){\r\n            (EDITOR || DEV) && warn('Please, Need a key for translation. (This message only show on EDITOR or DEV mode)');\r\n            return;\r\n        }\r\n        // \r\n        let rawText:string = string ? string : this.getString(this.key);        \r\n        // \r\n        if(rawText !== null || rawText !== undefined ){  \r\n            rawText = this.prefix + rawText;\r\n            this.normalizeRichText(rawText, this.node)            \r\n            // log('Node ' + this.node.name + ' -raw text ' + renderTexts);\r\n            this._string = rawText;\r\n        }else{\r\n            DEV && warn('Can not find out the sentence with key \\\"' + this.key + '\\\" when using Rich Text mode for \\\"' + LangEnum[this.language] + '\\\" language. Path node: ' + this.node.getPathInHierarchy() + ' (This message only show on DEV mode)');\r\n        }\r\n    }\r\n            \r\n\r\n    /**\r\n     * \r\n     */\r\n    protected renderImageText(spriteFrame:SpriteFrame = null){\r\n        if(!this.key || !this.key.length){\r\n            (EDITOR || DEV) && warn('Please, Need a key for translation. (This message only show on EDITOR or DEV mode)');\r\n            return;\r\n        }\r\n        // \r\n        const selectedSpriteFrame:SpriteFrame = spriteFrame ? spriteFrame : this.getSpriteFrame(this.key);\r\n        if(selectedSpriteFrame){            \r\n            const imageIterator:Generator<Sprite> = this.getElements(Sprite, this.node);\r\n            const selectedSprite:Sprite = imageIterator.next()?.value;\r\n            if(selectedSprite){\r\n                selectedSprite.enabled = true;                \r\n                // this.normalizeSprite(selectedSprite);\r\n                selectedSprite.spriteFrame = selectedSpriteFrame;\r\n                // if(this.getTargetComponentAs(Label)){\r\n                //     // this.normalizeSize(selectedSprite.node);\r\n                // }                \r\n                // this.normalizeSize(selectedSprite.node);\r\n                const uiTranform:UITransform = selectedSprite.node.getComponent(UITransform);\r\n                this.node.getComponent(UITransform).setContentSize(uiTranform.contentSize.clone());\r\n            }\r\n        }else{\r\n            DEV && warn('Can not find out spriteframe with key \\\"' + this.key + '\\\" when using Image Text mode for \\\"' + LangEnum[this.language] + '\\\" language. Path node: ' + this.node.getPathInHierarchy() + ' (This message only show on DEV mode)');\r\n        }\r\n    }\r\n\r\n    // -----------------------\r\n\r\n    /**\r\n     * \r\n     * @param nodeName \r\n     */\r\n    protected getNode(nodeName:string, node:Node = this.node, createNewContentWithtemplate?:Node|Prefab){\r\n        if(node.name == nodeName) return node;\r\n        let selectedNode:Node = node.getChildByName(nodeName);\r\n        if(!selectedNode){            \r\n            selectedNode = new Node();\r\n            selectedNode.name = nodeName;            \r\n            selectedNode.parent = node;\r\n            selectedNode.layer = Layers.Enum.UI_2D;\r\n            if(createNewContentWithtemplate){                \r\n                let elementNode:Node = selectedNode.getChildByName(createNewContentWithtemplate.name);\r\n                if(!elementNode){\r\n                    const newContentNode:Node|Prefab = instantiate(createNewContentWithtemplate);\r\n                    elementNode = newContentNode as Node\r\n                    elementNode.layer = Layers.Enum.UI_2D;\r\n                    elementNode.setPosition(new Vec3(0,0,0))\r\n                    selectedNode.addChild(elementNode);\r\n                }                \r\n            } \r\n        }\r\n        return selectedNode;\r\n    }\r\n\r\n    // -------------\r\n\r\n    /**\r\n     * \r\n     * @param classConstructor \r\n     * @returns \r\n     */\r\n    protected getTargetComponentAs(classConstructor:any):(typeof classConstructor){        \r\n        if(classConstructor && CCClass._isCCClass(classConstructor)){\r\n            return this.node.getComponent(classConstructor);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Get components which contained Label or Sprite.\r\n     * Feature\r\n     * - Return a Generator of Label or Sprite, depend on type of ClassConstructor\r\n     * - Auto creatting or using default Label or Sprite for next action.\r\n     * - When have template parameter or there is no component which is added node, auto creatting a new Language Node contain components which is in-use.\r\n     * - The component will use the first Label component for using in NORMAL_TEXT mode. Do not create new Language Node.\r\n     * - The component will use the first Sprite component for using in IMAGE_TEXT mode. Do not create new Language Node.\r\n     * - Use components sequentially in the template to create new or add to display list.\r\n     * \r\n     * @param classConstructor      Type of Component Class which will be used\r\n     * @param node                  This node which is in investigation.\r\n     * @param template              The prefab or node which used to instantiate the new component.\r\n     * @param startIndex            The component get start at this index\r\n     * @returns                     Return the Generator of classConstructor Type\r\n     */\r\n    protected * getElements(classConstructor:any, node:Node, startIndex:number = 0, template?:Node|Prefab):Generator<typeof classConstructor>{\r\n        if(classConstructor && CCClass._isCCClass(classConstructor)){            \r\n            if(template){\r\n                const langNode:Node = this.getNode(LangEnum[this.language], node, template);                \r\n                yield* this.getElements(classConstructor, langNode);\r\n            }else{\r\n                //  node as langNode in some case.\r\n                const elementStyles:(typeof classConstructor)[] = node.getComponentsInChildren(classConstructor).filter((comp:Component)=> comp !== this.getTargetComponentAs(classConstructor) );\r\n                if(!elementStyles.length){\r\n                    const langNode:Node = this.getNode(LangEnum[this.language], node);\r\n                    if(node !== this.node){\r\n                        // node is langNode\r\n                        const childNode:Node = this.getNode(DEFAULT_ELEMENT_NAME + node.children.length, node);\r\n                        const classComp:(typeof classConstructor) = childNode.getComponent(classConstructor) || childNode.addComponent(classConstructor);\r\n                        yield* this.getElements.call(this, classConstructor, node);\r\n                    }else{\r\n                        yield* this.getElements.call(this, classConstructor, langNode);\r\n                    }\r\n                    \r\n                }else{\r\n                    // \r\n                    const langNodeTranform:UITransform = node.getComponent(UITransform) || node.addComponent(UITransform);\r\n                    // set default contentsize\r\n                    if(!this.saveContentSize){\r\n                        log('Unknow this._saveContentSize of node: ' + this.node.getPathInHierarchy())\r\n                        \r\n                    }\r\n                    langNodeTranform.setContentSize(this.saveContentSize.clone());\r\n                    // \r\n                    const styleLength:number = elementStyles.length;\r\n                    let i = startIndex;\r\n                    while(true) {\r\n                        const isOverTemplate:boolean = Boolean(i >= styleLength);\r\n                        let selectedStyle:(typeof classConstructor) = isOverTemplate ? elementStyles[i%styleLength] : elementStyles[i++] ;\r\n                        if(isOverTemplate){   \r\n                            const container:Node = selectedStyle.node.parent;                         \r\n                            const nextStyleName:string = DEFAULT_ELEMENT_NAME + container.children.length; \r\n                            let nextStyleNode:Node = container.getChildByName(nextStyleName);\r\n                            // nextStyleNode.removeFromParent();\r\n                            if(!nextStyleNode){\r\n                                nextStyleNode = instantiate(selectedStyle.node);\r\n                                nextStyleNode.name = nextStyleName;\r\n                                nextStyleNode.layer = Layers.Enum.UI_2D;\r\n                                nextStyleNode.parent = container;\r\n                            }\r\n                            // this.normalizeLayout(container); \r\n                            selectedStyle = nextStyleNode.getComponent(classConstructor) //|| nextStyleNode.addComponent(classConstructor);\r\n                        }else{\r\n                            selectedStyle.node.layer = Layers.Enum.UI_2D;\r\n                        }                        \r\n                        yield selectedStyle;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n          \r\n\r\n    /**\r\n     * \r\n     * @param key \r\n     * @returns \r\n     */\r\n    protected getSpriteFrame(key:string):SpriteFrame{\r\n        return LocalizationController.getSpriteFrame(this.key) || (this.defaultAtlas ? this.defaultAtlas.getSpriteFrame(key) : null);\r\n    }\r\n\r\n    /**\r\n     * Sử dụng cú pháp của key {KEY_TO_TRANSLATE} trong một mẫu câu để dịch kèm mẫu câu cho sẵn. ex: \"Dzung is so {hand_some}\" to \"Dzung is so hand some\".\r\n     * \r\n     * @param key \r\n     * @returns \r\n     */\r\n    protected getString(key:string):string{\r\n        const keys:string[] = key.match(/(?<=\\{).+?(?=\\})/g);\r\n        let translatedContent:string = key;\r\n        if( keys && keys.length){\r\n            while(keys.length){\r\n                const replacedKey:string = keys.shift()?.toString().trim();\r\n                if(replacedKey && replacedKey.length){\r\n                    const subTransContent:string = LocalizationController.getRawText(replacedKey);\r\n                    if(subTransContent){\r\n                        translatedContent = translatedContent.replace('{'+ replacedKey +'}', subTransContent);\r\n                    }\r\n                }\r\n            }\r\n        }else{\r\n            translatedContent = LocalizationController.getRawText(key);\r\n        }\r\n        // const translatedContent:string = LocalizationController.getRawText(this.key);        \r\n        return translatedContent !== key ?  translatedContent : this.exampleText;\r\n        // return translatedContent !== this.key ?  translatedContent : this.exampleText;        \r\n    }\r\n\r\n    //----------------------- EDITOR -------------------\r\n\r\n    /**\r\n     * \r\n     */\r\n    protected updateTagEnums(){\r\n        const spriteFrameEnum:any = this.generateSymbolAtlasEnum();        \r\n        if(this.tags && this.tags.length){\r\n            this.tags.forEach((config:LanguageSymbol)=>{ \r\n                config.enum = spriteFrameEnum;\r\n                config.updateEnum();\r\n            })\r\n        }\r\n        \r\n    }\r\n    \r\n    /**\r\n     * \r\n     */\r\n    protected updateStyleEnums(){\r\n        if(this.styleTemplate){\r\n            const styleEnum:{[key: string]: number} = {};\r\n            const labelTemplates:Label[] = this.styleTemplate.data.getComponentsInChildren(Label);\r\n            labelTemplates.forEach((label:Label, index:number)=>{\r\n                if(label && label.node){                    \r\n                    styleEnum[label.node.name] = index;\r\n                }\r\n            })\r\n            GameUtils.updateEnum(this, 'selectedStyle', styleEnum);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * \r\n     * @returns \r\n     */\r\n    protected generateSymbolAtlasEnum():any{\r\n        if(EDITOR && this.symbolAtlas){\r\n            const spriteFrames:SpriteFrame[] = this.symbolAtlas.getSpriteFrames();\r\n            // const spriteFrames:SpriteFrame[] = Object.values(spList);\r\n            const spriteFrameNames:string[] = spriteFrames.reduce((result:string[], spriteFrame:SpriteFrame)=>{\r\n                return result.concat(spriteFrame.name)\r\n            }, [])\r\n            return GameUtils.getEnumFromArray(spriteFrameNames)\r\n        }\r\n        return Enum(SYMBOL_ENUM);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param rawText \r\n     * @returns \r\n     */\r\n    private generateRenderTexts(rawText:string):string[]{        \r\n        if(this.tags && this.tags.length){\r\n            const COMA:string = \"♥\";\r\n            let text:string = rawText;\r\n            this.tags.forEach((config:LanguageSymbol, index:number, tagData:LanguageSymbol[])=>{\r\n                text = text.replace(config.tag, COMA + (config.spriteFrame ? LanguageSymbol.IMAGE_EMBED + index : LanguageSymbol.IMAGE_NAME + config['_spriteFrameName']) + COMA)\r\n            })\r\n            return text.split(COMA);\r\n        }\r\n        return [rawText]\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param node \r\n     */\r\n    private normalizeLayout(node:Node){\r\n        const defaultLabel:Label = this.getTargetComponentAs(Label);        \r\n        if(defaultLabel && defaultLabel.overflow !== Label.Overflow.SHRINK){      \r\n            let layout:Layout = node.getComponent(Layout)      \r\n            if(!layout){\r\n                layout = node.addComponent(Layout)\r\n                switch(defaultLabel.overflow){\r\n                    case Label.Overflow.RESIZE_HEIGHT:\r\n                        layout.type = Layout.Type.VERTICAL;\r\n                        layout.alignHorizontal = true;\r\n                        break;\r\n                    case Label.Overflow.NONE:\r\n                        layout.type = Layout.Type.HORIZONTAL;\r\n                        layout.alignVertical = true;\r\n                        break;\r\n                }\r\n                layout.resizeMode = Layout.ResizeMode.CONTAINER;\r\n                \r\n            }else{\r\n                layout.updateLayout();\r\n            }\r\n        }\r\n        // else if(layout){\r\n        //     layout.destroy();\r\n        // }\r\n    }\r\n\r\n    private removeLayout(node:Node){\r\n        let layout:Layout; \r\n        if(layout ??= node.getComponent(Layout)){\r\n            layout.destroy();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param node \r\n     */\r\n    private normalizeSize(node:Node, patternSize:Size = this.saveContentSize):Size{\r\n        const uiTranform:UITransform = node.getComponent(UITransform) || node.addComponent(UITransform);\r\n        const estimateContentSize:Size = GameUtils.calculateAligning(uiTranform.contentSize.clone(), patternSize.clone());\r\n        uiTranform.setContentSize(estimateContentSize);\r\n        return estimateContentSize\r\n    }\r\n\r\n    /**\r\n     * Paste Target Component Value to the specular label.\r\n     * @param label \r\n     */\r\n    private normalizeLabel(label:Label){\r\n        const defaultLabel:Label = this.getTargetComponentAs(Label);\r\n        if(defaultLabel){            \r\n            // \r\n            label.fontSize = defaultLabel.fontSize;\r\n            label.lineHeight = defaultLabel.lineHeight;\r\n            label.horizontalAlign = defaultLabel.horizontalAlign;\r\n            label.verticalAlign = defaultLabel.verticalAlign;\r\n            // \r\n            label.font = defaultLabel.font;\r\n            label.fontFamily = defaultLabel.fontFamily;\r\n            // \r\n            label.useSystemFont = defaultLabel.useSystemFont;\r\n            label.cacheMode = defaultLabel.cacheMode;            \r\n                         \r\n            label.color = defaultLabel.color.clone();\r\n            label.enableWrapText = defaultLabel.enableWrapText;\r\n            // \r\n            label.overflow = Label.Overflow.SHRINK;\r\n            label.node.getComponent(UITransform).setContentSize(this.saveContentSize.clone());\r\n            \r\n            label.overflow = defaultLabel.overflow;\r\n            // \r\n            const labelOutline:LabelOutline = defaultLabel.getComponent(LabelOutline);\r\n            if(labelOutline){\r\n                const selectedLabelOutline:LabelOutline = label.getComponent(LabelOutline) || label.addComponent(LabelOutline);\r\n                selectedLabelOutline.color = labelOutline.color.clone();\r\n                selectedLabelOutline.width = labelOutline.width\r\n            }\r\n            // \r\n            const labelShadow:LabelShadow = defaultLabel.getComponent(LabelShadow);\r\n            if(labelShadow){\r\n                const selectedLabelOutline:LabelShadow = label.getComponent(LabelShadow) || label.addComponent(LabelShadow);\r\n                selectedLabelOutline.color = labelShadow.color.clone();\r\n                selectedLabelOutline.offset = labelShadow.offset.clone();\r\n                selectedLabelOutline.blur = labelShadow.blur;\r\n            }\r\n            \r\n        }else{\r\n            label.overflow = Label.Overflow.SHRINK;\r\n            label.enableWrapText = false;\r\n        }\r\n        // \r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param sprite \r\n     */\r\n    // private normalizeSprite(sprite:Sprite){\r\n    //     const defaultSprite:Sprite = this.getTargetComponentAs(Sprite);\r\n    //     if(defaultSprite){\r\n    //         sprite.sizeMode = defaultSprite.sizeMode;\r\n    //         sprite.type = defaultSprite.type;\r\n    //     }else{            \r\n    //         sprite.sizeMode = Sprite.SizeMode.CUSTOM;\r\n    //         sprite.type = Sprite.Type.SIMPLE;\r\n    //         // this.normalizeSize(sprite.node.parent);\r\n    //     }\r\n    //     // \r\n    // }\r\n\r\n    /**\r\n     * \r\n     * @param rawText \r\n     * @param node \r\n     */\r\n    private normalizeRichText(rawText:string, node:Node){\r\n        // \r\n        const imageIterator:Generator<Sprite> = this.getElements(Sprite, node, 0, this.styleTemplate ? this.styleTemplate : null);\r\n        const labelIterator:Generator<Label> = this.getElements(Label, node, 0, this.styleTemplate ? this.styleTemplate : null);\r\n        const renderTexts:string[] = this.generateRenderTexts(rawText);\r\n        let isMultiLines:boolean = false;\r\n        let defaultLabel:Label|Sprite;\r\n        const oneLineSize:Size =this.saveContentSize.clone();\r\n        if(defaultLabel ??= this.getTargetComponentAs(Label)){\r\n            isMultiLines = Boolean((defaultLabel as Label).overflow !== Label.Overflow.NONE);\r\n            // Calculate approximate size which is contentSize value when the label has just one line.            \r\n            oneLineSize.y = Math.min(this.saveContentSize.y, (defaultLabel as Label).lineHeight);\r\n            \r\n        }else if(defaultLabel ??= this.getTargetComponentAs(Sprite)){\r\n            // update later\r\n        }\r\n        this.normalizeLayout(node);\r\n        // \r\n        isMultiLines ? this.renderRichTextMultiline(node, renderTexts, labelIterator, imageIterator, oneLineSize) : this.renderRichTextSingleLine(node, renderTexts, labelIterator, imageIterator);\r\n        // \r\n        // this.normalizeLayout(node);\r\n        // \r\n\r\n    }\r\n\r\n            private hasSpriteFrameName(textOrSpriteFrameName:string):boolean{\r\n                return textOrSpriteFrameName.indexOf(LanguageSymbol.IMAGE_NAME) !== -1\r\n            }\r\n            \r\n            private hasEmbedImage(textOrSpriteFrameName:string):boolean{\r\n                return textOrSpriteFrameName.indexOf(LanguageSymbol.IMAGE_EMBED) !== -1\r\n            }\r\n\r\n            /**\r\n             * \r\n             * @param node \r\n             * @param renderTexts \r\n             * @param labelIterator \r\n             * @param imageIterator \r\n             */\r\n            private renderRichTextSingleLine( node:Node, renderTexts:string[], labelIterator:Generator<Label>, imageIterator:Generator<Sprite>){\r\n                // log('richtext single line')\r\n                renderTexts.forEach((textOrSpriteFrameName:string, index:number)=>{                    \r\n                    if(this.hasSpriteFrameName(textOrSpriteFrameName)){\r\n                        if(DEV && !this.symbolAtlas) return warn('This mode need to be reference to a symbol atlas')\r\n                        const selectedSprite:Sprite = imageIterator.next()?.value;\r\n                        if(selectedSprite) {\r\n                            const originSpriteFrameName:string = textOrSpriteFrameName.replace(LanguageSymbol.IMAGE_NAME,'');                                                    \r\n                            selectedSprite.sizeMode = Sprite.SizeMode.RAW;\r\n                            selectedSprite.spriteFrame = this.symbolAtlas.getSpriteFrame(originSpriteFrameName);\r\n                            // this.normalizeComponent(selectedSprite);\r\n                            selectedSprite.sizeMode = Sprite.SizeMode.CUSTOM\r\n                            this.normalizeSize(selectedSprite.node);\r\n                        }\r\n\r\n                    }else if(this.hasEmbedImage(textOrSpriteFrameName)){\r\n                        const selectedSprite:Sprite = imageIterator.next()?.value;\r\n                        if(selectedSprite) {\r\n                            const indexTag:number = parseInt(textOrSpriteFrameName.replace(LanguageSymbol.IMAGE_EMBED,''))\r\n                            const tag:LanguageSymbol = this.tags[indexTag];                            \r\n                            selectedSprite.sizeMode = Sprite.SizeMode.RAW;\r\n                            selectedSprite.spriteFrame = tag.spriteFrame;\r\n                            // this.normalizeComponent(selectedSprite);\r\n                            selectedSprite.sizeMode = Sprite.SizeMode.CUSTOM\r\n                            this.normalizeSize(selectedSprite.node);\r\n                        }\r\n                        \r\n                    }else{\r\n                        const selectedLabel:Label = labelIterator.next()?.value;\r\n                        if(selectedLabel) {\r\n                            selectedLabel.string = textOrSpriteFrameName;\r\n                            // log('Label <' + (selectedLabel.node as Node).getPathInHierarchy() + '> ' + textOrSpriteFrameName + ' -enabled: ' + selectedLabel.node.activeInHierarchy);\r\n                        }\r\n                    }\r\n                    // \r\n                })\r\n            }\r\n\r\n            /**\r\n             * \r\n             * @param node \r\n             * @param renderTexts \r\n             * @param labelIterator \r\n             * @param imageIterator \r\n             * @param oneLineSize \r\n             */\r\n            private renderRichTextMultiline(node:Node, renderTexts:string[], labelIterator:Generator<Label>, imageIterator:Generator<Sprite>, oneLineSize:Size){\r\n                // \r\n                if(renderTexts){\r\n                    if(renderTexts.length){  \r\n                        // Add the grid layout for resizing the position of each element display on RichText.\r\n                        const langNode:Node = this.getNode(LangEnum[this.language], node, this.styleTemplate ? this.styleTemplate : null);\r\n                        const layout:Layout = langNode.getComponent(Layout) || langNode.addComponent(Layout);\r\n                        layout.type = Layout.Type.GRID;\r\n                        layout.resizeMode = Layout.ResizeMode.CONTAINER;\r\n                        layout.startAxis = Layout.AxisDirection.HORIZONTAL;\r\n                        layout.verticalDirection = Layout.VerticalDirection.TOP_TO_BOTTOM;\r\n                        layout.horizontalDirection = Layout.HorizontalDirection.LEFT_TO_RIGHT;\r\n                        layout.constraint = Layout.Constraint.NONE;\r\n                    }\r\n                    // \r\n                    const maxWidth:number = this.saveContentSize.x;\r\n                    let lineWidth:number = 0;\r\n                    let siblingIndex:number = 0\r\n                    // \r\n                    renderTexts.forEach((textOrSpriteFrameName:string, index:number)=>{   \r\n                        if(this.hasSpriteFrameName(textOrSpriteFrameName)){\r\n                            if(DEV && !this.symbolAtlas) return warn('This mode need to be reference to a symbol atlas')\r\n                            // The image alway be hold on the elements which have odd index number.\r\n                            const selectedSprite:Sprite = imageIterator.next()?.value;\r\n                            if(selectedSprite) {\r\n                                const originSpriteFrameName:string = textOrSpriteFrameName.replace(LanguageSymbol.IMAGE_NAME,''); \r\n                                selectedSprite.sizeMode = Sprite.SizeMode.RAW;\r\n                                selectedSprite.spriteFrame = this.symbolAtlas.getSpriteFrame(originSpriteFrameName);\r\n                                selectedSprite.sizeMode = Sprite.SizeMode.CUSTOM\r\n                                const size:Size = this.normalizeSize(selectedSprite.node, oneLineSize);\r\n                                lineWidth += size.x;\r\n                                selectedSprite.node.setSiblingIndex(siblingIndex);\r\n                                siblingIndex++;\r\n                            }\r\n                            \r\n                        }else if(this.hasEmbedImage(textOrSpriteFrameName)){\r\n                            // The image alway be hold on the elements which have odd index number.\r\n                            const selectedSprite:Sprite = imageIterator.next()?.value;\r\n                            if(selectedSprite) {\r\n                                const indexTag:number = parseInt(textOrSpriteFrameName.replace(LanguageSymbol.IMAGE_EMBED,''))\r\n                                const tag:LanguageSymbol = this.tags[indexTag];\r\n                                selectedSprite.sizeMode = Sprite.SizeMode.RAW;\r\n                                selectedSprite.spriteFrame = tag.spriteFrame;\r\n                                selectedSprite.sizeMode = Sprite.SizeMode.CUSTOM\r\n                                const size:Size = this.normalizeSize(selectedSprite.node, oneLineSize);\r\n                                lineWidth += size.x;\r\n                                selectedSprite.node.setSiblingIndex(siblingIndex);\r\n                                siblingIndex++;\r\n                            }\r\n                            \r\n                        }else{\r\n                            // The string alway be hold on the elements which have even index number.\r\n                            const sameLineLabels:Label[] = this.splitTextToLineLabels(textOrSpriteFrameName, labelIterator, lineWidth);\r\n                            sameLineLabels.forEach((label:Label)=>{\r\n                                if(label){\r\n                                    lineWidth += label['contentWidth'];\r\n                                    label.node.setSiblingIndex(siblingIndex);\r\n                                    siblingIndex++;\r\n                                }\r\n                            });\r\n                            \r\n                        }\r\n                        // \r\n                        lineWidth = lineWidth % maxWidth;   // the lineWidth alway be clamped inside maxWidth range.                        \r\n                        // \r\n                    })\r\n                    // \r\n                }\r\n                // \r\n            }\r\n\r\n\r\n            /**\r\n             * \r\n             * @param rawText           string|string[] \r\n             * @param labelIterator \r\n             * @param startWidth \r\n             * @param sameLineLabels \r\n             * @returns lineLabel\r\n             */\r\n            private splitTextToLineLabels(rawText:string|string[], labelIterator:Generator<Label>, startWidth:number = 0, sameLineLabels:Label[] = []):Label[]{\r\n                // Detech selected label\r\n                let selectedLabel:Label = sameLineLabels.length ? sameLineLabels[sameLineLabels.length - 1] : null;\r\n                if(!selectedLabel){\r\n                    selectedLabel = labelIterator.next().value;\r\n                    this.normalizeLabel(selectedLabel);\r\n                    selectedLabel.overflow = Label.Overflow.NONE;\r\n                    selectedLabel.string = '';\r\n                    sameLineLabels.push(selectedLabel);\r\n                }\r\n                \r\n                //  \r\n                if(js.isString(rawText)){\r\n                    const maxWidth:number = this.saveContentSize.x;    // Note: startWidth alway less than maxWith. Because, startWith is a modular number of maxWidth\r\n                    const stringValue:string = rawText as string;                    \r\n                    // save last string\r\n                    const lastString:string = selectedLabel.string;\r\n                    const lastWidth:number = selectedLabel['contentWidth'];\r\n                    // Update new string to calculate new width\r\n                    selectedLabel.string = lastString + ' ' + stringValue;\r\n                    selectedLabel.updateRenderData(true);\r\n                    //\r\n                    let estimateLabelWidth:number = selectedLabel['contentWidth'];\r\n                    const newLineWidth:number = estimateLabelWidth + startWidth\r\n                    if( newLineWidth > maxWidth ){\r\n                        selectedLabel.string = lastString;\r\n                        // In the case, new Width is greater than maxWidth.\r\n                        // Solve problem by splitting the sentence to a words list.\r\n                        let splittedStrings:string[] = stringValue.split(/\\s/g);\r\n                        // stringValue is a single word or words list.\r\n                        const isASingleWord:boolean = Boolean(splittedStrings.length == 1);                        \r\n                        // stringValue is a long-word when it's a word and it's width is greater than maxWidth.\r\n                        const isALongWord:boolean = isASingleWord && (Number(estimateLabelWidth - lastWidth) > maxWidth)\r\n                        if(isALongWord){\r\n                            // The case is splitting the sentence unsuccessful.\r\n                            // Continue splitting to the characters list\r\n                            splittedStrings = stringValue.split('');\r\n                            log('is a long word')\r\n                        }else if(isASingleWord) {\r\n                                // The case is breaking to a new line.\r\n                                // We break a new line when the rawText is a single word.\r\n                                const isACharacter:boolean = isASingleWord && splittedStrings[0] && ((splittedStrings[0]).length == 1)\r\n                                if(isACharacter){\r\n                                    // Add a '-' character at the end of line.\r\n                                    selectedLabel.string = lastString //+ '-' ;\r\n                                }\r\n                                selectedLabel.updateRenderData(true);\r\n                                // \r\n                                startWidth = 0;    // \r\n                                selectedLabel = labelIterator.next().value;\r\n                                this.normalizeLabel(selectedLabel);\r\n                                selectedLabel.overflow = Label.Overflow.NONE;\r\n                                selectedLabel.string = '';\r\n                                sameLineLabels.push(selectedLabel);\r\n                                // \r\n                        }else{\r\n                            selectedLabel.updateRenderData(true);\r\n                            // The case is redo-creating line.\r\n                            startWidth = startWidth + lastWidth;                                \r\n                        }\r\n                                                \r\n                        return this.splitTextToLineLabels(splittedStrings, labelIterator, startWidth, sameLineLabels)\r\n                    }else{\r\n                        //                         \r\n                    }\r\n                }else if(Array.isArray(rawText)){\r\n                    const splittedStrings:string[] = rawText as string[];\r\n                    let selectedSelectedLabel:Label[] = sameLineLabels;\r\n                    while(splittedStrings.length){\r\n                        const newRawText:string = splittedStrings.shift();\r\n                        sameLineLabels = this.splitTextToLineLabels(newRawText, labelIterator, startWidth, sameLineLabels);\r\n                    }\r\n                    // return selectedSelectedLabel;\r\n                }else{\r\n                    error('Do not support type of rawText ' + js.getClassName(rawText));\r\n                }\r\n                // Default return\r\n                return sameLineLabels\r\n            }\r\n  \r\n    /**\r\n     * \r\n     * @param currentNode \r\n     * @param endNode \r\n     */\r\n    private bubbleResize(currentNode:Node, defaultSize:Size = null, endNode:Node = this.node){        \r\n        if(currentNode && endNode.parent && currentNode !== endNode.parent){\r\n            const currentUITransform:UITransform = currentNode.getComponent(UITransform) || currentNode.addComponent(UITransform);\r\n            const currentContentSize:Size = currentUITransform.contentSize\r\n            // currentContentSize.width\r\n            if(!defaultSize){\r\n                this.normalizeSize(currentNode);\r\n            }else{\r\n                currentUITransform.setContentSize(defaultSize);\r\n            }\r\n            // log('Resize ' + currentNode.parent.name)\r\n            this.bubbleResize(currentNode.parent, currentUITransform.contentSize.clone())\r\n        }\r\n    }\r\n\r\n    \r\n}\r\n\r\n\r\n","import { _decorator, Component, Node } from 'cc';\r\nimport { importRemoteCCClass, remoteCCClass } from 'db://assets/Scripts/gamify/utils/RemoteScriptImporter';\r\nimport { IGamifyComponent } from '../../../Scripts/gamify/interfaces/IComponent';\r\nimport { Action } from '../../../Scripts/gamify/core/Action';\r\nimport { SpriteFrame } from 'cc';\r\nimport { Color } from 'cc';\r\nimport { log } from 'cc';\r\nimport { sys } from 'cc';\r\nimport { API_ACTION, MainGameAction } from '../../../Scripts/ui/actions/StartActions';\r\nimport { error } from 'cc';\r\nimport { DEV } from 'cc/env';\r\nimport { tween } from 'cc';\r\nimport { Tween } from 'cc';\r\nimport { UIOpacity } from 'cc';\r\nimport { ServiceRequestConfig } from '../../../Scripts/ui/api/ServiceRequestConfig';\r\nimport { APIServiceAdaptor } from '../../../Scripts/ui/api/APIServiceAdaptor';\r\nimport { SpriteAtlas } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\nconst CSSButtonStyle = `.lobbyBtn{width:60px;height:60px;position:absolute;right:0;top:0;margin-top:20px;margin-right:20px;border-radius:50%;background-color:#763a00;padding:0;border:0;}.lobbyBtn:hover{background-color:#fca14c;}.lobbyBtn:active{background-color:#4b4b4b;}`;\r\n\r\nconst GamifyComponent:any = importRemoteCCClass('GamifyComponent')\r\n\r\nenum LobbyPopupStatus {\r\n    INIT,\r\n    SETUP_COMPLETED\r\n}\r\n\r\ntype LobbyPopupSate = {\r\n    status:LobbyPopupStatus,\r\n    enableLobby:boolean,\r\n    lobbyURL:string\r\n}\r\n\r\n\r\n\r\n@remoteCCClass('LobbyPopup')\r\nexport class LobbyPopup extends GamifyComponent implements IGamifyComponent {\r\n    \r\n    @property({type:Color})\r\n    buttonColor:Color = new Color();\r\n\r\n    // @property({type:SpriteAtlas})\r\n    // atlas:SpriteAtlas\r\n\r\n    @property({ type: SpriteFrame })  \r\n    homeIcon:SpriteFrame = null;  \r\n    // public get homeIcon(): SpriteFrame {\r\n    //     if(this.atlas && this._homeIcon){\r\n    //         const sp:SpriteFrame = this.atlas.getSpriteFrame(this._homeIcon.name);\r\n    //         return sp\r\n    //     }\r\n    //     return this._homeIcon;\r\n    // }\r\n\r\n    // public set homeIcon(value: SpriteFrame) {\r\n    //     if(this.atlas){\r\n    //         this._homeIcon = this.atlas.getSpriteFrame(value.name);\r\n    //         this._homeIcon\r\n    //     }else{ \r\n    //         this._homeIcon = value;\r\n    //     }\r\n    // }\r\n\r\n    @property({serializable:true})\r\n    private _homeIcon: SpriteFrame = null;\r\n\r\n    @property({type:ServiceRequestConfig})\r\n    serviceRequest:ServiceRequestConfig = null;\r\n\r\n    // @property({type:APIServiceAdaptor})\r\n    // newtworkAdaptor:APIServiceAdaptor = null;\r\n\r\n    servieNetworkName:string = null;\r\n    \r\n    private fillImgWrapper:HTMLButtonElement = null;\r\n\r\n    private lobbyURL:string;\r\n\r\n    // onStoreRegisted(state: any, action: Action): void {\r\n    //     if(action.sender == this.getStateName()){\r\n    //         console.log('-----------')            \r\n                         \r\n    //     }\r\n    // }\r\n\r\n    // onInit(readyStates?: string[]): void {\r\n       \r\n    // }\r\n\r\n    /**\r\n     * \r\n     * @param state \r\n     * @param action \r\n     */\r\n    onData(state:LobbyPopupSate, action:Action){\r\n        const actionType:string = action.type;\r\n        const payload:any = action.payload;\r\n        let networkState:any\r\n        switch(actionType){\r\n            case API_ACTION.AUTH_RESULT:\r\n                log('auth result');\r\n            case MainGameAction.INIT:                \r\n                if(payload && payload.apiService) {\r\n                    this.servieNetworkName = payload.apiService;\r\n                }\r\n                networkState = this.getAPIData(this.servieNetworkName);\r\n                state.enableLobby = (!sys.isMobile && networkState && networkState?.config && (networkState?.config?.homeButton === 'true' || networkState?.config?.homeButton === true));\r\n                // \r\n                if(state.enableLobby){\r\n                    const urlSearchParams = new URLSearchParams(window.location.search);\r\n                    state.lobbyURL = urlSearchParams.get('redirectUrl');\r\n                    if (state.lobbyURL && this.isURLValid(state.lobbyURL)) {\r\n                        state.lobbyURL = decodeURIComponent(state.lobbyURL);\r\n                        this.lobbyURL = state.lobbyURL;\r\n                        state.status = LobbyPopupStatus.SETUP_COMPLETED;\r\n                    } else {                   \r\n                        state.status = LobbyPopupStatus.INIT;\r\n                    }\r\n\r\n                    this.render();\r\n                }\r\n                \r\n            case this.serviceRequest.ResponseAction:  \r\n                networkState = this.getAPIData(this.servieNetworkName);\r\n                state.lobbyURL = networkState?.config?.lobbyURL;\r\n                this.lobbyURL = state.lobbyURL;\r\n                state.status = LobbyPopupStatus.SETUP_COMPLETED;\r\n                this.render();\r\n                break\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param done \r\n     * @param capturedState \r\n     * @param sharedData \r\n     */\r\n    async onRender(done:Function, capturedState?:LobbyPopupSate, sharedData?:any){\r\n        switch(capturedState.status){\r\n            case LobbyPopupStatus.INIT:                \r\n                this.serviceRequest.request();\r\n                break;\r\n\r\n            case LobbyPopupStatus.SETUP_COMPLETED:\r\n                this.hidePopup();\r\n                this.displayHomeButton();\r\n                this.setButtonColor(this.buttonColor.toString())  \r\n                break;\r\n        }\r\n        done();\r\n    }\r\n\r\n    //-----------------\r\n\r\n    /**\r\n     * \r\n     * @returns \r\n     */\r\n    getAPIData(serviceName:string):any{\r\n        if(serviceName){\r\n            const serviceData:any = this['getOtherState'](serviceName) as any;\r\n            if(!serviceData) {\r\n                error('[Lobby Popup]: Không có hoặc setup nhầm service');\r\n                return null;\r\n            }\r\n            return serviceData;\r\n        }else {            \r\n            error('[Lobby Popup] Chưa khai báo service name ! Có thể do StartGameAction.INIT chưa được dispatch.')\r\n        }\r\n        return null;\r\n    }\r\n\r\n    //-----------------\r\n\r\n    private isURLValid(urlStr: string): boolean {\r\n        return (urlStr != undefined && urlStr != null && urlStr != '#' && urlStr.length > 0);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param useEffect \r\n     */\r\n    private async showPopup(useEffect:boolean = false){\r\n        const uiOpacity:UIOpacity = this.node.getComponent(UIOpacity) || this.node.addComponent(UIOpacity);\r\n        this.node.children.forEach((childNode:Node)=>{            \r\n            childNode.active = true;\r\n        })\r\n        if(useEffect){\r\n            Tween.stopAllByTarget(this.node);\r\n            await new Promise((resolve: Function) => {                \r\n                tween(uiOpacity).set({\r\n                    opacity: 0\r\n                })\r\n                .to(0.4, { opacity: 255 })\r\n                .call(resolve)\r\n                .start();\r\n            });\r\n        }else{\r\n            uiOpacity.opacity = 255;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param useEffect \r\n     */\r\n    private async hidePopup(useEffect:boolean = false){\r\n        if(useEffect){\r\n            Tween.stopAllByTarget(this.node);\r\n            await new Promise((resolve: Function) => {\r\n                const uiOpacity:UIOpacity = this.node.getComponent(UIOpacity) || this.node.addComponent(UIOpacity);\r\n                tween(uiOpacity).set({\r\n                    opacity: 255\r\n                })\r\n                .to(0.4, { opacity: 0 })\r\n                .call(resolve)\r\n                .start();\r\n            });\r\n        }\r\n        // \r\n        this.node.children.forEach((childNode:Node)=>{                \r\n            childNode.active = false;\r\n        })        \r\n    }\r\n    /**\r\n     * \r\n     */\r\n    protected displayHomeButton(){\r\n        if(this.homeIcon){\r\n            const styleSheet = document.createElement(\"style\");\r\n            styleSheet.innerText = CSSButtonStyle;\r\n            document.head.appendChild(styleSheet)\r\n\r\n            // Create a wrapper div for fillImg\r\n            this.fillImgWrapper = document.createElement('button');\r\n            this.fillImgWrapper.className = 'lobbyBtn';\r\n            let fillImg = document.createElement('img');\r\n            fillImg.className = 'lobbyBtnImg';\r\n            fillImg.src = this.homeIcon.texture.toString()\r\n            fillImg.addEventListener('click', this.onHomeButtonPressed.bind(this));\r\n\r\n            this.fillImgWrapper.appendChild(fillImg); // Append fillImg to the wrapper div\r\n            document.body.appendChild(this.fillImgWrapper); // Append the wrapper div to the body\r\n\r\n\r\n        }else{\r\n\r\n        }\r\n    }\r\n\r\n    protected setButtonColor(colorStr: string) {\r\n        if (this.isLobbyEnabled && this.fillImgWrapper) {\r\n            var regex = /[0-9A-Fa-f]{6}/g;\r\n            if (colorStr.match(regex)) {\r\n                let styleSheet = document.createElement(\"style\");\r\n                styleSheet.innerText = `.lobbyBtn_1{background-color:${colorStr}}`;\r\n                document.head.appendChild(styleSheet);\r\n                this.fillImgWrapper.classList.add('lobbyBtn_1');\r\n            }\r\n            else {\r\n                log('Color string is invalid - ', colorStr);\r\n            }\r\n        }\r\n    }\r\n\r\n    // ---------\r\n\r\n    async onHomeButtonPressed() {\r\n        await this.showPopup(true);\r\n    }\r\n    \r\n    async onCancelButtonPressed(){\r\n        await this.hidePopup(true);\r\n    }\r\n\r\n    async onOKButtonPressed(){\r\n        this.hidePopup(true);\r\n        if (this.lobbyURL && this.isURLValid(this.lobbyURL)) {\r\n            //redirect\r\n            window.location.replace(this.lobbyURL);\r\n        } else {\r\n            error('Invalid redirect URL ' + this.lobbyURL);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import { SpriteAtlas } from 'cc';\r\nimport { Sprite } from 'cc';\r\nimport { Font } from 'cc';\r\nimport { CCBoolean } from 'cc';\r\nimport { CCString } from 'cc';\r\nimport { SpriteFrame } from 'cc';\r\nimport { Label } from 'cc';\r\nimport { warn } from 'cc';\r\nimport { resources } from 'cc';\r\nimport { _decorator, Component, Node } from 'cc';\r\nimport { GamifyComponent } from '../../gamify/GamifyComponent';\r\nimport { Helper } from '../../gamify/utils/Helper';\r\nimport { JsonAsset } from 'cc';\r\nimport { Action } from '../../gamify/core/Action';\r\nimport { STORE_ACTION } from '../../gamify/GamifyStore';\r\n// import { MultilingualLabel } from './MultilingualLabel';\r\nimport { DEV, EDITOR } from 'cc/env';\r\nimport { log } from 'cc';\r\nimport { IGamifyComponent } from '../../gamify/interfaces/IComponent';\r\nimport { AssetManager } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\nexport const SupportedLanguages = [\"en\", \"cs\", \"da\", \"de\", \"el\", \"es\", \"es_la\", \"fi\", \"fr\", \"hu\", \"it\", \"nl\", \"no\", \"pl\", \"pt\", \"pt_br\", \"ro\", \"sk\", \"sv\", \"tr\", \"uk_ua\", \"bg\", \"id\", \"ja\", \"ko\", \"ru\", \"th\", \"tzh\", \"vi\", \"zh\"];\r\n\r\nconst DEFAULT_ATLAS:string = \"text_atlas\";\r\nconst DEFAULT_COMMON_TEXT:string = \"common\";\r\nconst DEFAULT_CUSTOM_FONT:string = \"font\";\r\nconst DEFAULT_GAME_TEXT:string = \"text\";\r\n\r\n@ccclass('LocalizationController')\r\nexport class LocalizationController extends GamifyComponent implements IGamifyComponent {\r\n    static ACTION:{LANGUAGE_PACKAGE_LOADED:string} = { LANGUAGE_PACKAGE_LOADED:'language_package_loaded' };\r\n    //raw text, json format\r\n    static textInfo: {[n:string]:string} = null;\r\n    static jsonPackages:Set<string> = new Set();\r\n    //\r\n    private static thaiFont: Font = null;\r\n    private static _language: string = 'en';\r\n    private static _isReady: boolean = false;\r\n    static get language():string{\r\n        return this._language\r\n    }\r\n\r\n    static setLanguage(lang:string){\r\n        this._language = lang;\r\n    }\r\n\r\n    //image texts\r\n    private static textAtlas: SpriteAtlas = null;\r\n\r\n\r\n    static setText(sprite: Sprite, name: string) {\r\n        sprite.spriteFrame = null;\r\n    }\r\n\r\n    static getRawText(id: string): string {\r\n        if(DEV && !EDITOR){\r\n            !LocalizationController.textInfo && warn('All text datas are not exist !')\r\n            LocalizationController.textInfo && !LocalizationController.textInfo[id] && warn('The text data map with id \"' + id + '\" is not exist ! (This warnning message is only available in DEV mode)');\r\n        }\r\n        return LocalizationController.textInfo && LocalizationController.textInfo[id] ? LocalizationController.textInfo[id] as string : id;\r\n    }\r\n    \r\n    static getSpriteFrame(id: string): SpriteFrame {        \r\n        return LocalizationController.textAtlas ? LocalizationController.textAtlas.getSpriteFrame(id) : null;\r\n    }\r\n\r\n    // static addTextInfo(obj: {key: string, text: string}, isOverwrite: boolean = true) {\r\n    static addTextInfo(obj: {[n:string]:string}, isOverwrite: boolean = true) {\r\n        if (isOverwrite) {\r\n            LocalizationController.textInfo = {...LocalizationController.textInfo, ...obj};\r\n        } else {\r\n            LocalizationController.textInfo = {...obj, ...LocalizationController.textInfo};\r\n        }\r\n    }\r\n    \r\n    static addJSONPackage(packageName:string, obj: {[n:string]:string}, isOverwrite: boolean = true) {\r\n        if(!LocalizationController.jsonPackages.has(packageName)){\r\n            if (isOverwrite) {\r\n                LocalizationController.textInfo = {...LocalizationController.textInfo, ...obj};\r\n            } else {\r\n                LocalizationController.textInfo = {...obj, ...LocalizationController.textInfo};\r\n            }\r\n            LocalizationController.jsonPackages.add(packageName);\r\n        }\r\n    }\r\n\r\n    static get isReady():boolean {\r\n        return this._isReady;\r\n    }\r\n\r\n    // @property({\r\n    //     type:[Sprite],\r\n    //     group: 'Setup'\r\n    // })\r\n    // textSpriteList: Sprite[] = [];\r\n\r\n    // @property({\r\n    //     type:[Label],\r\n    //     group: 'Setup'\r\n    // })\r\n    // rawTextList: Label[] = [];\r\n\r\n    @property({\r\n        group: 'Setup',\r\n        displayName: 'Auto Replace Mode'\r\n    })\r\n    isAutoReplaceMode: boolean = false;\r\n\r\n    @property({ \r\n        type: [CCString],\r\n        group: 'Setup', \r\n        visible: function (this: LocalizationController) { return this.isAutoReplaceMode; } \r\n    })\r\n    namePatternList: string[] = [];\r\n\r\n    @property\r\n    localizedPath:string = 'localizes';\r\n    \r\n    get currentLanguage():string{\r\n        return LocalizationController.language\r\n    }\r\n\r\n    get initialState():any{\r\n        return {\r\n            loaded:false\r\n        }\r\n    }\r\n\r\n    \r\n    onInit(): void {\r\n        // if (LocalizationController.textInfo) {\r\n        //     //resources are loaded\r\n        //     if (this.isAutoReplaceMode) {\r\n        //         this.autoReplaceRawText();\r\n        //     }\r\n        //     this.onReady();            \r\n        // }else{\r\n        //     const urlVars:object = Helper.getUrlVars();\r\n        //     const selectedLang:string = this.verifyLanguage(urlVars['language'] || LocalizationController.language);  \r\n        //     LocalizationController.setLanguage(selectedLang);\r\n        //     this.loadTextResources(selectedLang)\r\n        // }\r\n        const urlVars:object = Helper.getUrlVars();\r\n        const selectedLang:string = this.verifyLanguage(urlVars['language'] || LocalizationController.language);  \r\n        LocalizationController.setLanguage(selectedLang);\r\n        this.loadTextResources(selectedLang).then(()=>{\r\n            if (this.isAutoReplaceMode) {\r\n                this.autoReplaceRawText();\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param state \r\n     * @param newStateName \r\n     * @param newOtherState \r\n     */\r\n    onStoreRegisted(state: any, action:Action): void {\r\n        if (LocalizationController.textInfo){  \r\n            // Catching these stores register after this store.               \r\n            this.dispatch({\r\n                type: LocalizationController.ACTION.LANGUAGE_PACKAGE_LOADED\r\n            }, this.getStateName(), action.sender)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param state \r\n     * @param action \r\n     */\r\n    // onData(state:any, action:Action):any|void{\r\n    //     const actionType:string = action.type;        \r\n    //     switch(actionType){   \r\n    //         case STORE_ACTION.NEW_STATE_REGISTED:  \r\n    //             if (LocalizationController.textInfo){  \r\n    //                 // Catching these stores register after this store.\r\n    //                 const newStateName:string = action.sender;                \r\n    //                 this.dispatch({\r\n    //                     type: LocalizationController.ACTION.LANGUAGE_PACKAGE_LOADED\r\n    //                 }, this.getStateName(), newStateName)\r\n    //             }\r\n    //             break;\r\n            \r\n    //     }\r\n    // }\r\n\r\n    /**\r\n     * \r\n     * @param lang \r\n     */\r\n    async loadTextResources(lang: string = null){\r\n        if (!LocalizationController.textInfo) {\r\n            await Promise.all([this.imageLoading(lang), this.allTextLoading(lang)]);\r\n            // LocalizationController.setLanguage(lang);\r\n        }\r\n        await this.onReady();\r\n        // this.dispatch({type:LocalizationController.ACTION.LANGUAGE_PACKAGE_LOADED});\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param lang \r\n     */\r\n    async allTextLoading(lang: string = null){\r\n        await Promise.all([this.commonTextLoading(lang), this.gameTextLoading(lang), this.customTextLoading(lang)]);\r\n        await this.onTextReady(lang);\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    // replaceText() {\r\n    //     // this.replaceTextImage();\r\n    //     this.onTextReady();\r\n    // }\r\n\r\n    // -----------------------------------------------\r\n    // \r\n    // -----------------------------------------------\r\n\r\n    /**\r\n     * \r\n     * @param lang \r\n     * @param defaultPath \r\n     * @returns \r\n     */\r\n    protected getLanguageURL(lang:string, defaultPath:string):string{\r\n        return this.localizedPath + \"/\" + lang + \"/\" + defaultPath;\r\n    }   \r\n\r\n    /**\r\n     * \r\n     */\r\n    protected get languageBundle():AssetManager.Bundle {\r\n        return resources\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param lang \r\n     * @returns \r\n     */\r\n    protected async imageLoading(lang:string){\r\n        await new Promise((resolve: Function) => {\r\n            if(EDITOR) {\r\n                resolve();\r\n                return;\r\n            }\r\n            // const atlasAssetPath:string = this.localizedPath + \"/\" + lang + \"/\" + DEFAULT_ATLAS;\r\n            const atlasAssetPath:string = this.getLanguageURL(lang, DEFAULT_ATLAS);\r\n            if(atlasAssetPath){\r\n                this.languageBundle.load(atlasAssetPath, SpriteAtlas,(err, atlas) => {\r\n                    if (err) {\r\n                        (EDITOR || DEV) && warn(\"Error loading text atlas for language \" + lang + \" (This message only show on EDITOR or DEV mode)\");\r\n                        resolve();\r\n                        return;\r\n                    }\r\n                    if (lang != SupportedLanguages[0]) {\r\n                        this.languageBundle.release(SupportedLanguages[0] + \"/\" + DEFAULT_ATLAS);\r\n                    }\r\n                    LocalizationController.textAtlas = atlas as SpriteAtlas;                    \r\n                    resolve();\r\n                });\r\n            }\r\n        });     \r\n        await this.onImageTextReady(lang);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param lang \r\n     * @returns \r\n     */\r\n    protected async commonTextLoading(lang:string){\r\n        return await new Promise((resolve: Function) => {\r\n            if(EDITOR) {\r\n                resolve();\r\n                return;\r\n            }\r\n            // const textAssetPath:string = this.localizedPath + \"/\" + lang + '/' + DEFAULT_COMMON_TEXT;\r\n            const textAssetPath:string = this.getLanguageURL(lang, DEFAULT_COMMON_TEXT);\r\n            if(textAssetPath){\r\n                this.languageBundle.load(textAssetPath, (err, assets) => {                \r\n                    if (err) {\r\n                        (EDITOR || DEV) && warn('Error loading common text for language ' + lang + \" (This message only show on EDITOR or DEV mode)\");\r\n                        resolve();\r\n                        return;\r\n                    }\r\n                    if (assets && assets instanceof JsonAsset) {\r\n                        LocalizationController.addTextInfo(assets.json as {[n:string]:string}, false);\r\n                    }else{\r\n                        LocalizationController.addTextInfo(JSON.parse(assets.toString()), false);\r\n                    }\r\n                    resolve();\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param lang \r\n     * @returns \r\n     */\r\n    protected async gameTextLoading(lang:string){\r\n        return await new Promise((resolve: Function) => {\r\n            if(EDITOR) {\r\n                resolve();\r\n                return;\r\n            }\r\n            // const textAssetPath:string = this.localizedPath + \"/\" + lang + '/' + DEFAULT_GAME_TEXT;\r\n            const textAssetPath:string = this.getLanguageURL(lang, DEFAULT_GAME_TEXT);\r\n            if(textAssetPath){\r\n                this.languageBundle.load(textAssetPath, (err, assets) => {\r\n                    if (err) {\r\n                        (EDITOR || DEV) && warn('Error loading game text for language ' + lang + \" (This message only show on EDITOR or DEV mode)\");\r\n                        resolve();\r\n                        return;\r\n                    }\r\n                    if (lang != SupportedLanguages[0]) {\r\n                        this.languageBundle.release(SupportedLanguages[0] + '/' + DEFAULT_GAME_TEXT);\r\n                    }\r\n                    if (assets && assets instanceof JsonAsset) {\r\n                        LocalizationController.addTextInfo(assets.json as {[n:string]:string}, false);\r\n                    }else{\r\n                        LocalizationController.addTextInfo(JSON.parse(assets.toString()));\r\n                    }\r\n                    resolve();\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param lang \r\n     * @returns \r\n     */\r\n    protected async customTextLoading(lang:string){\r\n        return await new Promise((resolve: Function) => {\r\n            if(EDITOR) {\r\n                resolve();\r\n                return;\r\n            }\r\n            if (lang == \"th\") {\r\n                // const fontAssetPath:string = this.localizedPath + \"/\" + lang + '/' + DEFAULT_CUSTOM_FONT;\r\n                const fontAssetPath:string = this.getLanguageURL(lang, DEFAULT_CUSTOM_FONT)\r\n                if(fontAssetPath){\r\n                    this.languageBundle.load(fontAssetPath, (err, fontAssets) => {\r\n                        if (err) {\r\n                            (EDITOR || DEV)  && warn(\"Error loading font for language \" + lang + \" (This message only show on EDITOR or DEV mode)\");\r\n                            resolve();\r\n                            return;\r\n                        }\r\n                        LocalizationController.thaiFont = fontAssets as Font;\r\n                        resolve();\r\n                    });\r\n                }\r\n            } else {\r\n                resolve();\r\n            }\r\n        })\r\n    }\r\n\r\n    // ------------------------------------------------\r\n    // \r\n    // ------------------------------------------------\r\n\r\n    /**\r\n     * \r\n     * @param languageName \r\n     * @returns \r\n     */\r\n    protected verifyLanguage(languageName:string):string{        \r\n        return (SupportedLanguages.indexOf(languageName) != -1) ? languageName : LocalizationController.language;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    async onImageTextReady(lang:string) {}\r\n\r\n    /**\r\n     * \r\n     */\r\n    async onTextReady(lang:string) {}\r\n\r\n    /**\r\n     * \r\n     */\r\n    async onReady(){\r\n        LocalizationController._isReady = true;\r\n        this.dispatch({type:LocalizationController.ACTION.LANGUAGE_PACKAGE_LOADED});\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @returns \r\n     */\r\n    protected autoReplaceRawText() {\r\n        if (this.namePatternList.length <= 0) {\r\n            return;\r\n        }\r\n\r\n        //iterate through all child nodes\r\n        this.node.walk(undefined, (child) => {\r\n            const is_matched: boolean = this.namePatternList.some((pattern:string) => { return child.name.includes(pattern); });\r\n            if (is_matched) {\r\n                const label:Label = child.getComponent(Label);\r\n                if (label) {\r\n                    //Thai texts does not work well with Arial font\r\n                    if (LocalizationController.language == \"th\") {\r\n                        label.font = LocalizationController.thaiFont;\r\n                        label.cacheMode = Label.CacheMode.NONE;\r\n                    }\r\n                    // \r\n                    const content_str = LocalizationController.textInfo[label.string] as string;\r\n                    if (content_str) {\r\n                        label.string = content_str;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\n","\r\nimport { _decorator, Component, warn, log } from 'cc';\r\nimport { DEBUG, DEV } from 'cc/env';\r\nimport { Action } from '../core/Action';\r\nimport { IMechanicDispatcher } from '../interfaces/IDispatcher';\r\nimport { RelativeMap, RenderTask } from '../types/GamifyType';\r\nimport { Helper } from '../utils/Helper';\r\nimport { GAMIFY_LOGS, GAMIFY_WARNNING } from '../utils/Setting';\r\nimport { RenderQueueDispatcher } from './RenderQueueDispatcher';\r\n\r\nconst { ccclass } = _decorator;\r\n\r\n\r\n/**\r\n * Điều khiển việc viết kịch bản tập trung cho hoạt động của game.\r\n * \r\n * Author: Hallopatidu@gmail.com\r\n */ \r\n@ccclass('MechanicDispatcher')\r\nexport class MechanicDispatcher extends RenderQueueDispatcher implements IMechanicDispatcher {\r\n\r\n    private _relativeScenarioMap:Map<string, Set<string[]>> = null;\r\n    private _configActionMap:Map<string, Action> = null;\r\n\r\n    // private _usingMechanicRelativeMap:boolean = false;\r\n\r\n    /**\r\n    *\r\n    */\r\n    constructor(id:string) {\r\n        super(id);       \r\n        this._relativeScenarioMap = new Map();\r\n        this._configActionMap = new Map();\r\n    }\r\n\r\n    \r\n\r\n    /**\r\n    * Đăng ký kịch bản chuyển động.\r\n    * - Nếu đăng ký lúc không xảy action (isDispatching == false) sẽ lưu vào kịch bản mặc định. Ví dụ: sử dụng trong onInit\r\n    * - Nếu đăng ký lúc xảy ra action sẽ điều chỉnh ngay vào relativeMap và action hiện tại.\r\n    * @param configAction \r\n    * @param ids stateName hoặc tokenId\r\n    */\r\n    public registerActionScenario(configAction:Action, ids:string[]){\r\n        let actionType:string = configAction.type;\r\n        if(actionType){         \r\n            if(this.isDispatching() && this._pendingAction){\r\n                const renderTask:RenderTask = this.getRenderTask(actionType);\r\n                // this._relativeMap = this.applyActionScenario(ids, this._relativeMap || Object.create(null));\r\n                renderTask.map = this.applyActionScenario(ids, renderTask.map || Object.create(null));\r\n                // this._usingMechanicRelativeMap = true;\r\n                \r\n                // \r\n            }else{\r\n                // Default mechanic relative map\r\n                let scenarioSet:Set<string[]> = this._relativeScenarioMap.get(actionType);\r\n                if(!scenarioSet){\r\n                    scenarioSet = new Set();\r\n                }\r\n                scenarioSet.add(ids);\r\n                this._relativeScenarioMap.set(actionType, scenarioSet);\r\n            }\r\n            // \r\n            \r\n            this.registerConfigAction(configAction)\r\n            //\r\n        }        \r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param ids \r\n     * @param relativeMap \r\n     * @returns \r\n     */\r\n    private applyActionScenario(ids:string[], relativeMap:RelativeMap):RelativeMap{\r\n        const parsingIds:string[] = ids.slice();\r\n        while(parsingIds.length){\r\n            const nextLeftId:string = parsingIds.shift();\r\n            const nextRightId:string = parsingIds[0];\r\n            if(nextRightId){\r\n                const leftIds:string[] = this.searchAllRegisterNames(nextLeftId);\r\n                const rightIds:string[] = this.searchAllRegisterNames(nextRightId);\r\n                let leftId:string;\r\n                while(leftIds.length){\r\n                    leftId = leftIds.shift();\r\n                    const leftToken:string = this.findMapName(leftId);\r\n                    relativeMap[leftToken] = relativeMap[leftToken] || [];\r\n                }\r\n                // for (let i:number = 0; i < leftIds.length; i++) {\r\n                //     const leftId:string = leftIds[i];\r\n                if(leftId){\r\n                    for (let j:number = 0; j < rightIds.length; j++) {\r\n                        const rightId = rightIds[j];\r\n                        if(leftId && rightId){\r\n                            this._applyRenderBefore([leftId, rightId], relativeMap);\r\n                        }\r\n                    }         \r\n                }           \r\n                // }\r\n            }\r\n        }\r\n        return relativeMap\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param configAction \r\n     * @param stateName \r\n     */\r\n    public registerConfigAction(configAction:Action, stateName?:string[]){\r\n        let actionType:string = configAction.type;\r\n        if(actionType){         \r\n            if(configAction.payload){\r\n                let recordAction:Action = this._configActionMap.get(actionType) || Object.create(null);\r\n                configAction.payload = recordAction.payload ? Object.assign(configAction.payload, recordAction.payload) : configAction.payload;\r\n            }\r\n            if(this.isDispatching() && this._pendingAction){\r\n                this._pendingAction = Object.assign(this._pendingAction, configAction);\r\n            }else{\r\n                this._configActionMap.set(actionType, configAction);\r\n            }\r\n        }else{\r\n            DEV && GAMIFY_WARNNING && warn(this.__ccClassName +'::registerConfigAction : action phải có type.')\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param action \r\n     */\r\n     public removeConfigAction(action:Action){\r\n        let actionType:string = action.type;\r\n        if(actionType){\r\n            this._configActionMap.delete(actionType);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param action \r\n     */\r\n    public removeDefaultActionScenerio(action:Action){\r\n        let actionType:string = action.type;\r\n        if(actionType){\r\n            this._relativeScenarioMap.delete(actionType);\r\n            this._configActionMap.delete(actionType);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param action \r\n     * @returns \r\n     */\r\n    public hasScenario(action?:Action):boolean {\r\n        let targetAction:Action = action || (this._pendingAction as Action)\r\n        if(targetAction){\r\n            let actionType:string = targetAction.type;\r\n            // return (this._relativeScenarioMap.get(actionType) || this._usingMechanicRelativeMap) ? true : false;\r\n            return this._relativeScenarioMap.get(actionType) ? true : false;\r\n        }\r\n    }\r\n\r\n   \r\n    /**\r\n     * \r\n     * @returns \r\n     */\r\n    protected _generateMechanicRelativeMap(action:Action):RelativeMap {\r\n        let relativeMap:RelativeMap = Object.create(null);\r\n        let actionType:string = action.type;\r\n        if(actionType){\r\n            let scenarioSet:Set<string[]> = this._relativeScenarioMap.get(actionType);\r\n            scenarioSet && scenarioSet.forEach((ids:string[])=>{\r\n                this.applyActionScenario(ids, relativeMap);\r\n            })\r\n        }        \r\n        return relativeMap;\r\n    }\r\n\r\n\r\n    //------------------ Override -------------------\r\n\r\n    /**\r\n     * \r\n     * @param beforeIds \r\n     * @param currentId \r\n     */\r\n    // public renderBefore(beforeIds:string[], currentId:string){\r\n    //     if(!this._usingMechanicRelativeMap){\r\n    //         super.renderBefore(beforeIds, currentId);\r\n    //     }\r\n    // }\r\n\r\n\r\n    /**\r\n     * Bổ sung: Ghi đè configAction vào toàn bộ action cùng loại khi bắt đầu dispatch.\r\n     * @param action \r\n     */\r\n    protected _startDispatching(action:Action) {\r\n        let configAction:Action = this._configActionMap.get(action.type);\r\n        if(configAction){\r\n            configAction.receiver = action.receiver.length ? (configAction.receiver || []).concat(action.receiver) : configAction.receiver;\r\n            action = Object.assign(action, configAction);\r\n        }\r\n        //\r\n        super._startDispatching(action);\r\n        //\r\n        // let mechanicRelativeMap:RenderMap =  this._generateMechanicRelativeMap(action);\r\n        // if(!Helper.areEqual(this._nullObject, mechanicRelativeMap)) {\r\n        //     this._relativeMap = Object.assign(this._relativeMap, mechanicRelativeMap);\r\n        //     this._usingMechanicRelativeMap = true;\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * Bổ sung: ghi đè this.__relativeMap nếu tồn tại relativeMap được config trong Gamify Mechanic.\r\n     */\r\n    protected _stopDispatching() {\r\n        // Tạo relative map bằng scenario.\r\n        // const action:Action = this._pendingAction;\r\n        let mechanicRelativeMap:RelativeMap =  this._generateMechanicRelativeMap(this._pendingAction as Action);\r\n        if(!Helper.areEqual(this._nullObject, mechanicRelativeMap)) {\r\n            const actionType:string = this._pendingAction ? (this._pendingAction as Action).type : null;\r\n            const renderTask:RenderTask = this.getRenderTask(actionType);\r\n            renderTask.map = Object.assign(renderTask.map, mechanicRelativeMap);\r\n            // this._usingMechanicRelativeMap = true;\r\n        }\r\n        // \r\n        super._stopDispatching();\r\n        // this._usingMechanicRelativeMap = false;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    destroy(){\r\n        this._relativeScenarioMap = null;\r\n        this._configActionMap = null;\r\n        super.destroy();\r\n    }\r\n   \r\n}\r\n\r\n","import { _decorator, Component, Node } from 'cc';\r\n// import { LocalizationController } from './LocalizationController';\r\nimport { Label } from 'cc';\r\nimport { MultilingualConvertor } from './MultilingualConvertor';\r\nimport { Sprite } from 'cc';\r\nimport { importRemoteCCClass, remoteCCClass } from '../../gamify/utils/RemoteScriptImporter';\r\nimport { LocalizationController } from './LocalizationController';\r\nimport { AssetManager } from 'cc';\r\nimport { CCString } from 'cc';\r\nimport { DEV } from 'cc/env';\r\nimport ParasiteComponent from '../../gamify/master/ParasiteComponent';\r\n// import { RemoteBundle } from '../../gamify/master/RemoteBundle';\r\nconst { property, executeInEditMode } = _decorator;\r\nconst Helper:any = importRemoteCCClass('Helper')\r\n// const LocalizationController:any = importRemoteCCClass('LocalizationController');\r\n\r\n\r\n\r\n@remoteCCClass('MultilingualController')\r\n@executeInEditMode(true)\r\nexport class MultilingualController extends LocalizationController {\r\n    \r\n    @property({\r\n        type:[Node],\r\n        serializable:true,\r\n        group: 'Setup'\r\n    })\r\n    localizingNodes:Node[] = [];\r\n\r\n    get languageBundle():AssetManager.Bundle{\r\n        return super.languageBundle\r\n    }\r\n\r\n    protected getLanguageURL(lang: string, defaultPath: string): string {\r\n        return super.getLanguageURL(lang, defaultPath);\r\n    }\r\n\r\n    \r\n    @property({\r\n        displayName: 'Run On Load',\r\n        tooltip:'Note: If true, localization will run before the plugin is initialized. \\n This will create annoying warnings when the default language package does not have words to translate.'\r\n    })\r\n    runOnLoad: boolean = true;\r\n\r\n    /**\r\n     * \r\n     */\r\n    async onReady() {        \r\n        // Neu ko co plugin thi chay luon        \r\n        await this.startLocalizing();\r\n        await super.onReady();        \r\n    }\r\n\r\n    async startLocalizing(isForce?:boolean){\r\n        // if(this.runOnLoad || isForce){\r\n        this.localizingNodes && this.localizingNodes.forEach((node:Node)=>{\r\n            if(node){\r\n                let localComp:MultilingualConvertor = node.getComponent(MultilingualConvertor) || node.addComponent(MultilingualConvertor);\r\n                if(this.runOnLoad || isForce){\r\n                    localComp.enabled = true;\r\n                    localComp.translate();\r\n                }else{\r\n                    localComp.enabled = false;\r\n                }\r\n            }\r\n        })\r\n        \r\n    }\r\n\r\n}\r\n\r\n\r\n","import { _decorator, Component, Node } from 'cc';\r\nimport { LangEnum, LanguageConvertorPackage } from './plugins/LanguageConvertorPackage';\r\nimport { log } from 'cc';\r\nimport { Enum } from 'cc';\r\nimport { Label } from 'cc';\r\nimport { Sprite } from 'cc';\r\nimport { EDITOR } from 'cc/env';\r\nimport { warn } from 'cc';\r\nimport ParasiteComponent, { override } from '../../gamify/master/ParasiteComponent';\r\nimport { SpriteFrame } from 'cc';\r\nimport { importRemoteCCClass, remoteCCClass } from '../../gamify/utils/RemoteScriptImporter';\r\nconst { ccclass, property , executeInEditMode} = _decorator;\r\n\r\nconst GameUtils:any = importRemoteCCClass('GameUtils');\r\nconst LocalizationController:any = importRemoteCCClass('LocalizationController');\r\n\r\nexport enum MultilingualKeyMode {\r\n    STATIC_KEY,\r\n    NODE_NAME_IS_KEY,\r\n    LABEL_STRING_IS_KEY,\r\n    SPRITE_FRAME_IS_KEY    \r\n};\r\n\r\n/**\r\n * This is a parasite component which use LanguageConvertorPackage to control the rendering of multilingual Label or Sprite\r\n */\r\n@remoteCCClass('MultilingualConvertor (Label or Sprite Plugin)')\r\n@executeInEditMode(true)\r\nexport class MultilingualConvertor extends ParasiteComponent<Label|Sprite> {\r\n\r\n    @property({\r\n        type:Enum(MultilingualKeyMode),\r\n        // visible():boolean{\r\n        //     return this.autoKey\r\n        // },\r\n        displayName:'Translation Mode',\r\n    })\r\n    get keyMode():number{\r\n        return this._keyMode\r\n    }\r\n\r\n    set keyMode(value:number){\r\n        this._keyMode = value;\r\n        this.autoUpdateKey();\r\n    }\r\n    \r\n    @property({\r\n        displayName:'Key',\r\n        visible():boolean{\r\n            return this.keyMode == MultilingualKeyMode.STATIC_KEY;\r\n        }\r\n    })\r\n    get key():string{\r\n        return this._key;\r\n    }\r\n\r\n    set key(value:string){\r\n        this._key = value;   \r\n        this.syncKeyToPackages();     \r\n    }\r\n    \r\n    // -----------------------\r\n    @property({serializable:true, visible:false})\r\n    private _translateInEditor: boolean = false;\r\n\r\n    @property({serializable:true, visible:false})\r\n    private _isAutoKey: boolean = false;\r\n\r\n    @property({serializable:true, visible:false})\r\n    private _key: string = '';\r\n\r\n    @property({serializable:true, visible:false})\r\n    private _keyMode:number = MultilingualKeyMode.NODE_NAME_IS_KEY;\r\n        \r\n    private _langPackage:LanguageConvertorPackage;\r\n\r\n    @override\r\n    set spriteFrame(value:SpriteFrame){\r\n        const lastSpriteFrame:SpriteFrame = (this.super as Sprite).spriteFrame;\r\n        (this.super as Sprite).spriteFrame = value;\r\n        if(value !== lastSpriteFrame){            \r\n            this.autoUpdateKey();\r\n            LocalizationController.isReady && this.node.active && this.translate();\r\n        }\r\n    }\r\n\r\n    @override\r\n    set string(value:string){\r\n        if (value === null || value === undefined) {\r\n            value = '';\r\n        } else {\r\n            value = value.toString();\r\n        }\r\n\r\n        // if ((this.super as Label).string === value) {\r\n        //     return;\r\n        // }\r\n        (this.super as Label).string = value;\r\n        if(this._langPackage){\r\n            this._langPackage.string = value;\r\n        }else{\r\n            this._pendingString = value;\r\n        }   \r\n    }\r\n    \r\n    get string():string{\r\n        if(this._langPackage && this._langPackage.string.length){\r\n            return this._langPackage.string\r\n        }\r\n        return (this.super as Label).string\r\n    }\r\n\r\n    private _pendingString:string = null\r\n\r\n    /**\r\n     * \r\n     */\r\n    onLoad(){\r\n        super.onLoad && super.onLoad();\r\n        if(EDITOR){\r\n            let enumObj:any = {STATIC_KEY:0, NODE_NAME_IS_KEY:1}; // Object.assign({}, MultilingualKeyMode)\r\n            let comp:Label|Sprite;\r\n            if(comp ??= this.node.getComponent(Label)){\r\n                enumObj[MultilingualKeyMode[MultilingualKeyMode.LABEL_STRING_IS_KEY]] = MultilingualKeyMode.LABEL_STRING_IS_KEY;                \r\n            }else if(comp ??= this.node.getComponent(Sprite)){\r\n                enumObj[MultilingualKeyMode[MultilingualKeyMode.SPRITE_FRAME_IS_KEY]] = MultilingualKeyMode.SPRITE_FRAME_IS_KEY;                \r\n            }\r\n            GameUtils.updateEnum(this, 'keyMode', Enum(enumObj));            \r\n        }\r\n        // Mặc định luôn có một gói language default\r\n        let defaultLang:LanguageConvertorPackage = this.node.getComponent(LanguageConvertorPackage);\r\n        if(!defaultLang){            \r\n            defaultLang = this.node.addComponent(LanguageConvertorPackage);\r\n            defaultLang.setKey(this.key);\r\n            defaultLang.language = LangEnum.default;\r\n        }        \r\n        // \r\n    }\r\n\r\n    start() {        \r\n        const styles:LanguageConvertorPackage[] = this.node.getComponents(LanguageConvertorPackage);\r\n        styles.forEach((style:LanguageConvertorPackage)=>{\r\n            if(style) {\r\n                style.setKey(this.key);\r\n            }            \r\n        })\r\n        if(this._pendingString){\r\n            if(this._langPackage){\r\n                this._langPackage.string = this._pendingString;\r\n            }\r\n            this._pendingString = null;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * \r\n     */\r\n    protected onEnable(): void {\r\n        this.autoUpdateKey();\r\n        LocalizationController.isReady && this.node.active && this.translate();\r\n    }\r\n\r\n    // protected onDisable(): void {\r\n    //     const styles:LanguageConvertorPackage[] = this.node.getComponents(LanguageConvertorPackage);\r\n    //     styles.forEach((style:LanguageConvertorPackage)=>{\r\n    //         if(style){\r\n    //             style.clear();\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n    \r\n    /**\r\n     * Start localizing by MultilingualController.\r\n     * @returns success or not\r\n     */\r\n    translate(){\r\n        if(!this._langPackage){\r\n            const styles:LanguageConvertorPackage[] = this.node.getComponents(LanguageConvertorPackage);\r\n            let defaultStyle:LanguageConvertorPackage;\r\n            const selectedStyle:LanguageConvertorPackage = styles.find((style:LanguageConvertorPackage)=>{\r\n                if(style.language == LangEnum.default){\r\n                    defaultStyle = style;\r\n                }\r\n                style.clear();\r\n                return style.languageInUse;\r\n            })\r\n            //     \r\n            this._langPackage = selectedStyle ? selectedStyle : defaultStyle;\r\n            this._langPackage.setKey(this.key);\r\n        }\r\n        this._langPackage.translate(true);\r\n    }\r\n\r\n    // -------------\r\n\r\n    /**\r\n     * \r\n     */\r\n    protected autoUpdateKey(){\r\n        // if(this.autoKey){\r\n        switch(this.keyMode){\r\n            case MultilingualKeyMode.NODE_NAME_IS_KEY:\r\n                this._key = this.node ? this.node.name : this._key;\r\n                break;\r\n\r\n            case MultilingualKeyMode.LABEL_STRING_IS_KEY:\r\n                let label:Label;\r\n                if(label ??= this.node.getComponent(Label)){\r\n                    this._key =  label.string && label.string.length ? label.string : this._key;\r\n                }\r\n                break;\r\n                \r\n            case MultilingualKeyMode.SPRITE_FRAME_IS_KEY:\r\n                let sprite:Sprite;\r\n                if(sprite ??= this.node.getComponent(Sprite)){\r\n                    this._key =  sprite.spriteFrame ? sprite.spriteFrame.name : this._key;\r\n                }\r\n                break;\r\n        }\r\n        // \r\n        this.syncKeyToPackages();\r\n        // }\r\n    }\r\n\r\n    protected syncKeyToPackages(){\r\n        const styles:LanguageConvertorPackage[] = this.node.getComponents(LanguageConvertorPackage);\r\n        styles.forEach((style:LanguageConvertorPackage)=>{\r\n            if(style) {\r\n                style.setKey(this.key);\r\n            }            \r\n        })\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    // protected onDestroy(): void {\r\n    //     if(this.target instanceof Sprite){\r\n    //         this.node.off(Sprite.EventType.SPRITE_FRAME_CHANGED, this.onEnable.bind(this),this);\r\n    //     }\r\n    // }\r\n}\r\n\r\n\r\n","\r\n/**\r\n * Instance Inheritance Component | Implemented of Parasite Component.\r\n * - Extending this class to modify these methods of super class.\r\n * - Super Class would be a Class of the previous component in the same node.\r\n * - Instance is created by sub class of this class which can be extended the previous component in the same node (call by Inheritance Chain).\r\n * - The order of extending depend on the 'executionOrder' property of these components added to the node.\r\n * - All of methods are create by ParasiteComponent would be merged to the first component in the Inheritance Chain.\r\n * - Just using in the same node with super class\r\n * - Using with override decorator.\r\n * \r\n * Note: If you understand How and Why this component work in the first time reading. Congratulation ! You are really a tallent developer.\r\n * Author by hallopatidu@gmail.com\r\n */\r\n\r\nimport { error, warn } from \"cc\";\r\nimport { _decorator } from \"cc\";\r\nimport { js } from \"cc\";\r\nimport { Component } from \"cc\";\r\nimport { DEV, EDITOR } from \"cc/env\";\r\nimport { Helper } from \"../utils/Helper\";\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\nexport const PARASITE_TEST_MODE:boolean = false && DEV;\r\nexport const OverrideMethodNameMap = Symbol();\r\n\r\nconst CheckEligibleForInheritance = Symbol();\r\nconst ExcuteHierarchyOverridding = Symbol();\r\nconst InitSuper = Symbol();\r\nconst GetParasiteSuperMethod = Symbol();\r\nconst SetParasiteSuperMethod = Symbol();\r\nconst GetOriginMethodName = Symbol();\r\n\r\n/**\r\n * Can add override method for this method.\r\n * @param target \r\n * @param propertyKey \r\n * @param descriptor \r\n */\r\nexport function override(target: Component, propertyKey: string, descriptor: PropertyDescriptor){\r\n    if(propertyKey === '__preload') {\r\n        error('Do not support overriding ' + propertyKey + ' method');\r\n        return;\r\n    }     \r\n    if(DEV){\r\n        if(!js.isChildClassOf(target.constructor, ParasiteComponent)){\r\n            error('You should extending ParasiteComponent Class for this class to use @override');\r\n        }\r\n    }\r\n    // \r\n    let listOfOverrideMethods:Set<string> = target[OverrideMethodNameMap];       \r\n    if(!listOfOverrideMethods){\r\n        listOfOverrideMethods = target[OverrideMethodNameMap] = new Set<string>();\r\n    } \r\n    if(!listOfOverrideMethods.has(propertyKey)){\r\n        listOfOverrideMethods.add(propertyKey);\r\n    }\r\n    // \r\n    \r\n}\r\n\r\n\r\n\r\n@ccclass('ParasiteComponent')\r\nexport default abstract class ParasiteComponent<SuperComponent=Component> extends Component {\r\n\r\n    @property({\r\n        displayName: 'Extends',        \r\n        readonly:true\r\n    })\r\n    get superName():string{\r\n        return this._$superName\r\n    }\r\n\r\n    protected _$id:number = 0;\r\n    protected _$super:Component = null;    \r\n    protected _$superName:string = '';\r\n    protected super:SuperComponent&Component = null;\r\n\r\n    /**\r\n     *\r\n     */\r\n    // constructor() {        \r\n    //     super();\r\n\r\n    //     // this.__preload = ((previousOnLoad:Function)=> ()=>{\r\n    //     //     this[ExcuteHierarchyOverridding]();\r\n    //     //     this[InitSuper]();\r\n    //     //     return previousOnLoad ? previousOnLoad.call(this) : null;\r\n    //     // })(this.__preload);\r\n\r\n    //     // this.onDestroy = ((previousDestroy:Function)=>function(){\r\n    //     //     previousDestroy ? previousDestroy.call(this) : null;            \r\n    //     //     // this.enabled = false;\r\n    //     //     // (typeof this.constructor)[]\r\n    //     //     const allParasiteComponents:ParasiteComponent[] = this.node.getComponents(ParasiteComponent);\r\n    //     //     allParasiteComponents.forEach((parasiteComp:ParasiteComponent)=> parasiteComp !== this && parasiteComp[ExcuteHierarchyOverridding]());        \r\n    //     //     this._$super = null;\r\n    //     //     if(this.super){ delete this.super;};\r\n    //     // })(this.onDestroy)\r\n\r\n    //     // this.onLoad = ((previousOnLoad:Function)=>function(){            \r\n    //     //     this[ExcuteHierarchyOverridding]();\r\n    //     //     this[InitSuper]();\r\n    //     //     previousOnLoad ? previousOnLoad.call(this) : null;\r\n    //     // })(Helper.getHierarchyMethod(this.constructor, 'onLoad'))\r\n        \r\n    //     // this.onEnable = ((previousOnEnable:Function)=>function(){\r\n    //     //     previousOnEnable ? previousOnEnable.call(this) : undefined;\r\n    //     //     DEV && log('--> enabled ' + js.getClassName(this) )\r\n    //     //     if(this.node && !this._$super){                \r\n    //     //         const allParasiteComponents:ParasiteComponent[] = this.node.getComponents(ParasiteComponent);\r\n    //     //         allParasiteComponents.forEach((parasiteComp:ParasiteComponent)=> parasiteComp[ExcuteHierarchyOverridding]());\r\n    //     //     }\r\n    //     // })(this.onEnable);\r\n\r\n    //     // this.onDisable= ((previousOnDisable:Function)=>function(){\r\n    //     //     previousOnDisable ? previousOnDisable.call(this) : undefined;\r\n    //     //     DEV && log('--> disabled ' + js.getClassName(this) )\r\n    //     //     if(this.node && !this._$super){                         \r\n    //     //         const allParasiteComponents:ParasiteComponent[] = this.node.getComponents(ParasiteComponent);\r\n    //     //         allParasiteComponents.forEach((parasiteComp:ParasiteComponent)=> parasiteComp[ExcuteHierarchyOverridding]());\r\n    //     //     }\r\n    //     // })(this.onEnable);\r\n    // }\r\n   \r\n    protected onLoad(){        \r\n        this[ExcuteHierarchyOverridding]();\r\n        this[InitSuper]();\r\n        super.onLoad && super.onLoad();\r\n    }\r\n\r\n    protected onDestroy(){\r\n        const allParasiteComponents:Component[] = this.node.getComponents(Component);\r\n        allParasiteComponents.forEach((parasiteComp:ParasiteComponent)=>{\r\n            !!parasiteComp.super && parasiteComp !== this && parasiteComp[ExcuteHierarchyOverridding]() \r\n        });        \r\n        this._$super = null;\r\n        if(this.super){ delete this.super;};\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param component \r\n     * @returns \r\n     */\r\n    [CheckEligibleForInheritance](component:Component):boolean{\r\n        // return Boolean(!!component && component.enabled)\r\n        return EDITOR ?  Boolean(!!component && component.enabled) : !!component \r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    [ExcuteHierarchyOverridding](){ \r\n        if(!this.node) return;\r\n        const allNodeComponents:ReadonlyArray<Component> = this.node.components;\r\n        const numberOfComponent:number = allNodeComponents.length;\r\n        let hostComp:Component = null;\r\n        let firstParasite:Component = null;        \r\n        const previousCompIndex:number = allNodeComponents.findIndex((component:Component, index:number, allComponents:Component[])=>{\r\n            const eligibleForInheritance:boolean = this[CheckEligibleForInheritance](component)          \r\n            let investigateComp:Component = null;\r\n            if(eligibleForInheritance){\r\n                const componentIsParasite:boolean = js.isChildClassOf(component.constructor, ParasiteComponent);\r\n                hostComp = componentIsParasite ? hostComp : component;                \r\n                let enabledIndex:number = index;\r\n                // Search enabled nextComp\r\n                while(enabledIndex < numberOfComponent - 1){\r\n                    investigateComp = allComponents[++enabledIndex];\r\n                    if(this[CheckEligibleForInheritance](investigateComp)){                    \r\n                        break;\r\n                    }else{\r\n                        continue;\r\n                    }\r\n                }\r\n                firstParasite = investigateComp && !componentIsParasite ? investigateComp : firstParasite;\r\n            }\r\n            // Old code.\r\n            // if(index < numberOfComponent - 1){\r\n            //     nextComp = allComponents[index+1];                \r\n            //     nextComp = nextComp.enabled ? nextComp : null;\r\n            //     // update firstParasite\r\n            //     firstParasite = nextComp && !componentIsParasite ? nextComp : firstParasite;\r\n            // }\r\n            // \r\n            return eligibleForInheritance && investigateComp && (investigateComp == this);\r\n        })\r\n        // \r\n        this._$id = previousCompIndex + 1;\r\n        const previousComponent:Component = allNodeComponents[previousCompIndex];\r\n        if(previousComponent){\r\n            this._$super = previousComponent;\r\n            this._$superName = js.getClassName(previousComponent);\r\n            // Find a final Parasite Component. Do not need at this time.\r\n            // let isFinalParasite:boolean = false;\r\n            // const nextComponent:Component = previousCompIndex < numberOfComponent - 2 ? allNodeComponents[previousCompIndex + 2] : null;\r\n            // if(!nextComponent || (nextComponent && !js.isChildClassOf(nextComponent.constructor, ParasiteComponent))){\r\n            //     // the last Parasite Component.       \r\n            //     isFinalParasite = true;\r\n            // }\r\n        }\r\n        // \r\n        if(this._$super){\r\n            const listOfOverrideMethods:Set<string> = this[OverrideMethodNameMap];\r\n            listOfOverrideMethods && listOfOverrideMethods.forEach((methodName:string)=>{\r\n                const hostDesc:PropertyDescriptor = js.getPropertyDescriptor(hostComp, methodName);\r\n                if(hostDesc){\r\n                    const originMethodName:string = this[GetOriginMethodName](methodName);\r\n                    const thisDesc:PropertyDescriptor = js.getPropertyDescriptor(this, methodName);\r\n                    if(firstParasite && !Object.prototype.hasOwnProperty.call(firstParasite, originMethodName)){    \r\n                        // the frist parasite saved all origin method.                \r\n                        Object.defineProperty(firstParasite, originMethodName, hostDesc);\r\n                    }\r\n                    // \r\n                    if(thisDesc && firstParasite){                        \r\n                        if(hostDesc.get || hostDesc.set){                          \r\n                            delete hostComp[methodName];\r\n                            js.getset(hostComp, \r\n                                methodName, \r\n                                thisDesc.get ? thisDesc.get.bind(this) : hostDesc.get.bind(hostComp), \r\n                                thisDesc.set ? thisDesc.set.bind(this) : hostDesc.set.bind(hostComp),\r\n                                thisDesc.enumerable, \r\n                                thisDesc.configurable);\r\n\r\n                        }else if(hostDesc.value !== undefined && typeof hostDesc.value == 'function'){\r\n                            js.value(hostComp,\r\n                                methodName,\r\n                                thisDesc.value ? thisDesc.value.bind(this) : hostDesc.value.bind(hostComp), \r\n                                thisDesc.writable || hostDesc.writable,\r\n                                thisDesc.enumerable || hostDesc.enumerable);\r\n                            \r\n                        }else{                            \r\n                            // If method is a normal attribute of host's class but you want to convert it to be a get/set method.                            \r\n                            if(thisDesc.get || thisDesc.set){                                \r\n                                js.getset(hostComp, \r\n                                    methodName, \r\n                                    thisDesc.get ? thisDesc.get.bind(this) : ()=>{\r\n                                        return firstParasite[originMethodName]\r\n                                    } ,         \r\n                                    thisDesc.set ? thisDesc.set.bind(this): (value:any)=>{\r\n                                        firstParasite[originMethodName] = value\r\n                                    }, \r\n                                    thisDesc.enumerable,\r\n                                    thisDesc.configurable)\r\n                            }\r\n                        }                        \r\n\r\n                    }else{\r\n                        delete this[originMethodName];\r\n                    }\r\n                }else{\r\n                    PARASITE_TEST_MODE && warn('The method ' + methodName + ' do not exist in the Host: ' + js.getClassName(hostComp));\r\n                }\r\n                // \r\n            })\r\n            // \r\n        }      \r\n        //   \r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    [InitSuper](){\r\n        if(this._$super){\r\n            const superProxy:ProxyConstructor = new Proxy(this, {  \r\n                get: (target:any, prop:string) => this[GetParasiteSuperMethod](target, prop),           \r\n                set: (target:any, prop:string, value:any) =>{                    \r\n                    return this[SetParasiteSuperMethod](target, prop, value)\r\n                }\r\n            });\r\n            if(this.super){ delete this.super;};\r\n            // \r\n            Object.defineProperty(this, 'super', {\r\n                get:()=>superProxy\r\n            })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param target \r\n     * @param methodName \r\n     * @returns \r\n     */\r\n    [GetParasiteSuperMethod](target:any, methodName:string):Function{\r\n        if(!target || !target._$super){\r\n            return undefined;\r\n        }\r\n        const originMethodName:string = this[GetOriginMethodName](methodName);\r\n        const thisDesc:PropertyDescriptor = js.getPropertyDescriptor(target, originMethodName);\r\n        if(thisDesc && thisDesc.get){\r\n            return thisDesc.get.call(target._$super)\r\n        }else if(thisDesc && thisDesc.value && typeof thisDesc.value == 'function'){\r\n            return thisDesc.value.bind(target._$super)\r\n        }else{\r\n            const desc:PropertyDescriptor = js.getPropertyDescriptor(target._$super, methodName);\r\n            if(desc && desc.get){\r\n                return desc.get.call(target._$super)\r\n            }else if(desc && Object.prototype.hasOwnProperty.call(desc, 'value')){\r\n                return desc.value;\r\n            }else{\r\n                return this[GetParasiteSuperMethod](target._$super, methodName);\r\n            }\r\n        }\r\n        // \r\n    }\r\n    \r\n    /**\r\n     * \r\n     * @param target \r\n     * @param methodName \r\n     * @param value \r\n     * @returns \r\n     */\r\n    [SetParasiteSuperMethod](target:any, methodName:string, value:any = undefined):boolean{\r\n        if(!target || !target._$super){\r\n            return false\r\n        }\r\n        const originMethodName:string = this[GetOriginMethodName](methodName);\r\n        const thisDesc:PropertyDescriptor = js.getPropertyDescriptor(target, originMethodName)\r\n        if(thisDesc && thisDesc.set){\r\n            thisDesc.set.call(target._$super, value)\r\n            return true;\r\n        }else{\r\n            const desc:PropertyDescriptor = js.getPropertyDescriptor(target._$super, methodName)\r\n            if(desc && desc.set){\r\n                desc.set.call(target._$super, value);\r\n                return true;\r\n            }else if(desc && Object.prototype.hasOwnProperty.call(desc, 'value')){\r\n                target._$super[methodName] = value;\r\n                return true;\r\n            }else{\r\n                return this[SetParasiteSuperMethod](target._$super, methodName, value);\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    /**\r\n     * \r\n     * @param methodName \r\n     * @returns \r\n     */\r\n    [GetOriginMethodName](methodName:string):string{\r\n        return '__$super::'+ methodName + '__';\r\n    }\r\n    \r\n\r\n}\r\n","import { _decorator, Component, Node } from 'cc';\r\nimport { FloatButton } from '../../../../Scripts/ui/button/FloatButton';\r\nimport { SpineClip } from '../../../../Scripts/ui/anims/SpineClip';\r\nimport { EventTouch } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('PlayerInboxButton')\r\nexport class PlayerInboxButton extends FloatButton {\r\n        \r\n    @property({ type: SpineClip })\r\n    public get animation(): SpineClip {\r\n        return this._animation;\r\n    }\r\n    public set animation(value: SpineClip) {\r\n        this._animation = value;\r\n    }\r\n\r\n    // @property({serializable:true})\r\n    private _animation: SpineClip;\r\n\r\n    onLoad(): void {\r\n        super.onLoad()\r\n        if(!this.animation){\r\n            this.animation = this.getComponent(SpineClip);\r\n        }\r\n    }\r\n\r\n    async onPress(event:EventTouch){        \r\n        await this.animation.play(1);\r\n        // this.animation.play(0);\r\n        super.onPress(event);        \r\n    }\r\n\r\n    protected onEnable(): void {\r\n        this.animation.play(0);\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { _decorator, Component, Node } from 'cc';\r\nimport { InboxInfo } from '../types/PlayerInboxType';\r\nimport { Event } from 'cc';\r\nimport { Label } from 'cc';\r\nimport { Eventify } from 'cc';\r\nimport { Sprite } from 'cc';\r\nimport { Button } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('PlayerInboxItem')\r\nexport class PlayerInboxItem extends Eventify(Component) {\r\n\r\n    static EVENT = {\r\n      SELECTED:'selected_item_event'\r\n    }\r\n\r\n    @property({type:Label})\r\n    rewardTitle:Label = null;\r\n\r\n    @property({type:Label})\r\n    expireTimeTitle:Label = null;\r\n\r\n    private data:InboxInfo;\r\n    private _isActive: boolean = true;\r\n    public get isActive(): boolean {\r\n      return this._isActive;\r\n    }\r\n    public set isActive(value: boolean) {\r\n      if(this._isActive !== value){\r\n        const allSprites:Sprite[] = this.getComponentsInChildren(Sprite);\r\n        allSprites.forEach((sp:Sprite)=>sp.grayscale = !this._isActive);\r\n        (this.getComponentInChildren(Button) as Button).interactable = this._isActive;      \r\n      }\r\n      this._isActive = value;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param deltaTime \r\n     */\r\n    update(deltaTime: number) {\r\n        if(this.data && this.data.claimBefore && this.isActive){\r\n          const timeRemaining:number = this.data.claimBefore.getTime() - Date.now()\r\n          this.expireTimeTitle.string = this.convertMsToTime(timeRemaining);\r\n          this.isActive = (!this.data.isRead && timeRemaining > 1000);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param data \r\n     */\r\n    render(data:InboxInfo){\r\n        this.data = data        \r\n        this.rewardTitle.string = data.count + this.rewardTitle.string;        \r\n        \r\n\r\n        // this.isActive = false\r\n    }\r\n\r\n    onClaimReward(event:Event){\r\n        this.emit(PlayerInboxItem.EVENT.SELECTED, this.data)\r\n    }\r\n\r\n\r\n\r\n    // ---------------------\r\n\r\n    private updateExpireTime(){\r\n\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param milliseconds \r\n     * @returns \r\n     */\r\n    private convertMsToTime(milliseconds: number) {\r\n        if(!this.isActive)\r\n          return `00d:00h:00m:00s`;\r\n          \r\n        let seconds:number = Math.floor(milliseconds / 1000);\r\n        let minutes:number = Math.floor(seconds / 60);\r\n        let hours:number = Math.floor(minutes / 60);\r\n        let days:number = Math.floor(hours / 24);\r\n    \r\n        seconds = seconds % 60;\r\n        minutes = minutes % 60;\r\n    \r\n        // 👇️ If you don't want to roll hours over, e.g. 24 to 00\r\n        // 👇️ comment (or remove) the line below\r\n        // commenting next line gets you `24:00:00` instead of `00:00:00`\r\n        // or `36:15:31` instead of `12:15:31`, etc.\r\n        hours = hours % 24;\r\n    \r\n        if (seconds < 0)\r\n          return `00d:00h:00m:00s`;\r\n    \r\n        return `${this.padTo2Digits(days)}d:${this.padTo2Digits(hours)}h:${this.padTo2Digits(minutes)}m:${this.padTo2Digits(seconds)}s`;\r\n      }\r\n    \r\n    private padTo2Digits(num: number) {\r\n      return num.toString().padStart(2, '0');\r\n    }\r\n\r\n    // ---------------------\r\n    protected onDestroy(): void {\r\n      this.targetOff(this)\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { _decorator, Component, Node } from 'cc';\r\nimport { WebSocketComponent } from '../../../../Scripts/ui/network/WebSocketComponent';\r\nimport { Action } from '../../../../Scripts/gamify/core/Action';\r\nimport { ServiceRequestConfig } from '../../../../Scripts/ui/api/ServiceRequestConfig';\r\nimport { MainGameAction } from '../../../../Scripts/ui/actions/StartActions';\r\nimport { error } from 'cc';\r\nimport { log } from 'cc';\r\nimport { Helper } from '../../../../Scripts/gamify/utils/Helper';\r\nimport { js } from 'cc';\r\nimport { InboxInfo, PlayerInboxAction } from '../types/PlayerInboxType';\r\nimport { EventHandler } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n\r\n\r\ntype PlayerInboxState = {\r\n    status:number,\r\n    data?:InboxInfo[]\r\n    // error?:\r\n}\r\n\r\n\r\n\r\nenum PlayerInboxNetworkState {\r\n    INIT,\r\n    READY\r\n}\r\n\r\n@ccclass('PlayerInboxNetwork')\r\nexport class PlayerInboxNetwork extends WebSocketComponent {\r\n\r\n    private servieNetworkName:string = null;\r\n\r\n    /**\r\n     * \r\n     * @param state \r\n     * @param action \r\n     */\r\n    onData(state:any, action:Action){\r\n        const actionType:string = action.type;\r\n        const payload:any = action.payload;\r\n        switch(actionType){\r\n            case MainGameAction.INIT: \r\n                if(payload && payload.apiService) {\r\n                    this.servieNetworkName = payload.apiService;\r\n                }\r\n                this.initNetworkState(state);                \r\n                break\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param done \r\n     * @param capturedState \r\n     * @param sharedData \r\n     */\r\n    async onRender(done: Function, capturedState?: any, sharedData?: any): Promise<void> {\r\n        switch(capturedState.status){\r\n            case PlayerInboxNetworkState.INIT:\r\n                await this.connect(this._url);\r\n                break;\r\n        }\r\n        done && done();\r\n    }\r\n\r\n\r\n    // // ---------------\r\n\r\n    /**\r\n     * \r\n     * @returns \r\n     */\r\n    private async initNetworkState(state:PlayerInboxState){\r\n        if(!this.servieNetworkName) return;\r\n        const networkState:any = this.getAPIData(this.servieNetworkName);    \r\n        this._url = networkState.config.wssURL;\r\n        state.status = PlayerInboxNetworkState.INIT;\r\n        this.render();\r\n    }\r\n\r\n    // ------------- REQUEST PARAMS --------------\r\n\r\n    /**\r\n     * This funtion using for handler the params tranfer to service config.\r\n     * @param state \r\n     * @param paramKey \r\n     * @returns the string which passed to {paramKey} of request.\r\n     */\r\n    getStartDateParam(state:any, paramKey:string):string{\r\n        const date:Date = new Date();\r\n        return new Date(date.getFullYear(), date.getMonth(), date.getDate()).toISOString();        \r\n    }\r\n    \r\n    /**\r\n     * This funtion using for handler the params tranfer to service config.\r\n     * @param state \r\n     * @param paramKey \r\n     * @returns the string which passed to {paramKey} of request.\r\n     */\r\n    getEndDateParam(state:any, paramKey:string):string{\r\n        return new Date().toISOString();\r\n    }\r\n\r\n    // ---------------\r\n\r\n   /**\r\n    * \r\n    * @param serviceName \r\n    * @returns \r\n    */\r\n    protected getAPIData(serviceName:string):any{\r\n        if(serviceName){\r\n            const serviceData:any = this['getOtherState'](serviceName) as any;\r\n            if(!serviceData) {\r\n                error('[Lobby Popup]: Không có hoặc setup nhầm service');\r\n                return null;\r\n            }\r\n            return serviceData;\r\n        }else {            \r\n            error('[Lobby Popup] Chưa khai báo service name ! Có thể do StartGameAction.INIT chưa được dispatch.')\r\n        }\r\n        return null;\r\n    }\r\n    // ---------------\r\n\r\n    /**\r\n     * \r\n     * @param client \r\n     * @param event \r\n     */\r\n    onMessage(client:WebSocket, event:MessageEvent){\r\n        super.onMessage(client, event)\r\n        this.dispatch({type:PlayerInboxAction.UPDATE_INBOX})\r\n        // if(event.data){\r\n            \r\n        // }\r\n    }\r\n\r\n    \r\n    /**\r\n     * \r\n     * @param client \r\n     * @param event \r\n     */\r\n    onError(client:WebSocket, event:Event){\r\n        super.onError(client, event)\r\n    }\r\n}\r\n\r\n\r\n","import { _decorator, Component, Node } from 'cc';\r\nimport { GamePopup } from '../../../Scripts/ui/popup/GamePopup';\r\nimport { Prefab } from 'cc';\r\nimport { ServiceRequestConfig } from '../../../Scripts/ui/api/ServiceRequestConfig';\r\nimport { Action } from '../../../Scripts/gamify/core/Action';\r\nimport { API_ACTION, MainGameAction } from '../../../Scripts/ui/actions/StartActions';\r\nimport { ClaimInfo, InboxInfo, PlayerInboxAction, PlayerInboxBetSetting, PlayerInboxState, PlayerInboxStatus } from './types/PlayerInboxType';\r\nimport { error } from 'cc';\r\nimport { js } from 'cc';\r\nimport { Helper } from '../../../Scripts/gamify/utils/Helper';\r\nimport { WebSocketComponent } from '../../../Scripts/ui/network/WebSocketComponent';\r\nimport { instantiate } from 'cc';\r\nimport { PlayerInboxItem } from './ui/PlayerInboxItem';\r\nimport { log } from 'cc';\r\nimport { RemoteMultilingualTextPackage } from '../../../Scripts/ui/l10n/plugins/RemoteMultilingualTextPackage';\r\nimport { Event } from 'cc';\r\nimport { warn } from 'cc';\r\nimport { AsyncWaitify } from '../../../Scripts/gamify/master/AsyncWaitify';\r\nimport { PlayButtonState, PlayMode } from '../../../Scripts/ui/button/PlayButton';\r\nimport { Label } from 'cc';\r\nimport { resolve } from 'path';\r\nconst { ccclass, property } = _decorator;\r\n\r\n\r\n\r\n\r\n@ccclass('PlayerInboxPopup')\r\nexport class PlayerInboxPopup extends AsyncWaitify(GamePopup) {\r\n\r\n\r\n    @property({readonly:true})\r\n    waitForStore:string = 'PlayButton';\r\n    \r\n    @property({\r\n        type:Node,\r\n        group:'PANEL'\r\n    })\r\n    curtain:Node = null;\r\n    \r\n    @property({\r\n        type:Node,\r\n        group:'PANEL'\r\n    })\r\n    closeButton:Node = null;\r\n\r\n    @property({\r\n        type:Node,\r\n        group:'PANEL'\r\n    })\r\n    dragButton:Node = null;\r\n\r\n    @property({\r\n        type:Node,\r\n        group:'PANEL'\r\n    })\r\n    continueNotication:Node = null;\r\n\r\n    @property({\r\n        type:Node,\r\n        group:'PANEL'\r\n    })\r\n    playerInboxPanel:Node = null;\r\n    \r\n    \r\n    @property({\r\n        type:Node,\r\n        group:'PANEL',\r\n        displayName:'|__ Content'\r\n    })\r\n    inboxContainer:Node = null;\r\n\r\n    @property({\r\n        type:Prefab,\r\n        group:'ASSETS',\r\n        displayName:'Item Prefab'\r\n    })\r\n    itemPrefab:Prefab = null;\r\n    \r\n    @property({\r\n        type:RemoteMultilingualTextPackage,\r\n        group:'ASSETS',\r\n        displayName:'Language Package'\r\n    })\r\n    languagePackage:RemoteMultilingualTextPackage = null;\r\n    \r\n    @property({\r\n        type:Node,\r\n        group:'PANEL',\r\n        displayName:'|__ Prepaid Panel'\r\n    })\r\n    prepaidPanel:Node = null;\r\n    \r\n    @property({\r\n        type:Node,\r\n        group:'PANEL',\r\n        displayName:'|__ CashDrop Panel'\r\n    })\r\n    cashDropPanel:Node = null;\r\n    \r\n    @property({\r\n        type:Label,\r\n        group:'PANEL',\r\n        displayName:'|__ Empty Notication'\r\n    })\r\n    emptyNotication:Label = null;\r\n\r\n    @property({\r\n        type:ServiceRequestConfig,\r\n        group:'NETWORK',\r\n    })\r\n    listingService:ServiceRequestConfig = null;\r\n    \r\n    @property({\r\n        type:ServiceRequestConfig,\r\n        group:'NETWORK',\r\n    })\r\n    claimService:ServiceRequestConfig = null;\r\n\r\n    public allowActionTypes(): string[] {\r\n        return [\r\n            MainGameAction.INIT,\r\n            MainGameAction.SETTING,\r\n            PlayerInboxAction.UPDATE_INBOX,\r\n            PlayerInboxAction.CLAIM,\r\n            PlayerInboxAction.SHOW,\r\n            PlayerInboxAction.HIDE\r\n        ]\r\n    }\r\n\r\n\r\n    private _selectedItemInfo:InboxInfo;\r\n\r\n    private servieName:string = 'APIService';\r\n\r\n    private _continue:Function;\r\n\r\n    onInit(readyStates?:string[]){\r\n        // if(readyStates.findIndex((fullStateName:string)=>fullStateName.indexOf('<' +this.waitForStore+ '>') !== -1) !== -1){\r\n        //     // Truong hop PlayButton khoi tao truoc PlayerInBoxPopup\r\n        //     // log('[1]. Truong hop PlayButton khoi tao truoc PlayerInBoxPopup')\r\n        //     this.ready();\r\n        // }        \r\n        this.waitForReady().then(()=>{\r\n            this.dispatch({type:PlayerInboxAction.SHOW, payload:{status: PlayerInboxStatus.SHOW_ICON_VIEW}});\r\n        })\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param state \r\n     * @param action \r\n     */\r\n    onStoreRegisted(state: any, action: Action): any {\r\n        // Kiem tra khi PlayButton load xong.\r\n        if( (this.senderIsMe() && this.hasOtherState(this.waitForStore)) || ((action.sender.indexOf(this.waitForStore) !== -1))){\r\n            this.ready();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param state \r\n     * @param action \r\n     */\r\n    onData(state:PlayerInboxState, action:Action){\r\n        const actionType:string = action.type;\r\n        const payload:any = action.payload;\r\n        switch(actionType){\r\n            case MainGameAction.INIT:\r\n                if(payload && payload.apiService) {\r\n                    this.servieName = payload.apiService;\r\n                }\r\n                // \r\n                this.servieName = payload.apiService;\r\n                this.checkAndUpdateClaimmingState(state);                \r\n                break;\r\n                \r\n            case MainGameAction.SETTING:\r\n                this.implementSettingState(state, action)\r\n                break;\r\n\r\n            case PlayerInboxAction.UPDATE_INBOX:\r\n                state.status = PlayerInboxStatus.SHOW_INBOX_VIEW;\r\n                this.render(true);\r\n                state.status = PlayerInboxStatus.READY;\r\n                break;            \r\n           \r\n            case PlayerInboxAction.SHOW:\r\n                if(payload && (js.isNumber(payload.status) || !!payload.status)){\r\n                    state.status = payload.status\r\n                }\r\n                this.render();\r\n                break;\r\n\r\n            case PlayerInboxAction.HIDE:\r\n                state.status = PlayerInboxStatus.HIDE_VIEW;\r\n                this.render();\r\n                break;\r\n\r\n            case PlayerInboxAction.CLAIM:\r\n                if(payload){\r\n                    state.status = PlayerInboxStatus.CLAIM;\r\n                    if(!state.claimed) {state.claimed = Object.create(null);}\r\n                    state.claimed.url = payload.url;\r\n                    state.claimed.data = payload.data as ClaimInfo;\r\n                }\r\n                this.render();\r\n                break;\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     * @param done \r\n     * @param capturedState \r\n     * @param sharedData \r\n     */\r\n    async onRender(done: Function, capturedState?: PlayerInboxState, sharedData?: any): Promise<void> {   \r\n        //  Note: capturedState only exists during the rendering process. When finished it will disappear. \r\n        // (Chu ý: capturedState chi tồn tại trong suốt quá trình render. Khi kết thúc nó sẽ biến mất.)\r\n        switch(capturedState.status){           \r\n\r\n            case PlayerInboxStatus.SHOW_ICON_VIEW:\r\n                await this.showIconViewRender(capturedState);\r\n                break;\r\n\r\n            // case PlayerInboxStatus.INIT:\r\n            case PlayerInboxStatus.SHOW_INBOX_VIEW:\r\n                await this.showInboxViewRender(capturedState);\r\n                await this.requestInboxStateRender();\r\n                break;\r\n\r\n            case PlayerInboxStatus.HIDE_VIEW:\r\n                // await this.showIconViewRender(capturedState);\r\n                break;\r\n\r\n            case PlayerInboxStatus.CLAIM:\r\n                await this.requestClaimmingStateRender(capturedState);\r\n                await this.showIconViewRender(capturedState);\r\n                await this.updateAutoSpinSettingRender(capturedState);                \r\n                break\r\n                \r\n            case PlayerInboxStatus.SHOW_CONTINUE_VIEW:\r\n                await this.showContinuePopupRender(capturedState);                \r\n                await this.updateAutoSpinSettingRender(capturedState);   \r\n                // await this.executeSpinStateRender(capturedState);\r\n                await this.showIconViewRender(capturedState);\r\n                break;\r\n\r\n            case PlayerInboxStatus.UPDATE:\r\n                await this.updateAutoSpinSettingRender(capturedState);\r\n                // await this.showIconViewRender(capturedState);\r\n                break;\r\n\r\n            case PlayerInboxStatus.AUTO_SPIN:\r\n                await this.executeSpinStateRender(capturedState);\r\n                break;\r\n        }\r\n        done && done();\r\n    }\r\n\r\n    // ------------------\r\n    \r\n    /**\r\n     * \r\n     * @param state \r\n     */\r\n    private checkAndUpdateClaimmingState(state:PlayerInboxState){        \r\n        if(!this.servieName) return;\r\n        const networkState:any = this.getOtherState(this.servieName);\r\n        const playerReward:any = this.getClaimedRewards(networkState);\r\n        const claimedInfo:ClaimInfo = this.getClaimInfoFromRewardData(playerReward);\r\n        // \r\n        if(claimedInfo){\r\n            if(!state.claimed) state.claimed = Object.create(null);\r\n            state.claimed.data = claimedInfo || null;\r\n            state.status = PlayerInboxStatus.SHOW_CONTINUE_VIEW;\r\n            this.render(true);            \r\n        }\r\n        state.status = PlayerInboxStatus.READY;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param state \r\n     */\r\n    private implementSettingState(state:PlayerInboxState, action:Action){\r\n        if(this.senderIsMe()){     \r\n            if(!this.isStoreRegisted(this.waitForStore)){   \r\n                warn('implementSettingState----------- store ' + this.waitForStore + ' chua duoc khai tao')\r\n            } \r\n            this.waitFor(this.waitForStore);\r\n            const claimedInfo: {\r\n                url: string;\r\n                data: ClaimInfo;\r\n            } = state.claimed;\r\n            // const playButtonState:PlayButtonState = this.getOtherState(this.waitForStore);\r\n            // // && playButtonState.mode == PlayMode.NORMAL\r\n            if(claimedInfo && claimedInfo.data && !!claimedInfo.data?.count && claimedInfo.data?.count > 0){                \r\n                const lastStatus:PlayerInboxStatus = state.status;\r\n                state.status = PlayerInboxStatus.AUTO_SPIN;\r\n                this.render(true);\r\n                state.status = lastStatus;\r\n                state.claimed = null;\r\n            }\r\n        }else{\r\n            // log('settign from ' + action.sender)\r\n        }\r\n    }\r\n\r\n    // ------------------\r\n\r\n    \r\n\r\n    // ------------------------------------------\r\n\r\n    /**\r\n     * \r\n     */\r\n    private async requestInboxStateRender(){\r\n        const networkState:any = await this.listingService.request();\r\n        await this.renderInboxList(networkState);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param capturedState \r\n     */\r\n    private async requestClaimmingStateRender(capturedState:PlayerInboxState){\r\n        if(!this.isStoreRegisted(this.waitForStore)){\r\n            await this.waitForReady();\r\n        }\r\n        const claimUrl:string = capturedState?.claimed?.url;\r\n        const claimedInfo:ClaimInfo = capturedState?.claimed?.data as ClaimInfo;\r\n        if(claimedInfo && claimUrl && claimUrl.length){            \r\n            const networkState:any = await this.claimService.request([{url:claimUrl}]);\r\n            if(!networkState) {\r\n                error('[PlayerInboxPopup]::checkAndSetupPlayerInboxSetting(...): Do not found state data via \\\"servieName\\\" '); \r\n                return;\r\n            }\r\n            // \r\n            const playerReward:any = this.getClaimedRewards(networkState);\r\n            const claimedInfo:ClaimInfo = this.getClaimInfoFromRewardData(playerReward);            \r\n            if(!capturedState.claimed) capturedState.claimed = Object.create(null);\r\n            capturedState.claimed.data = claimedInfo;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param rewardCount \r\n     * @param betSetting \r\n     */\r\n    protected async updateAutoSpinSettingRender(state:PlayerInboxState){        \r\n        const claimedInfo:ClaimInfo = state?.claimed?.data;\r\n        if(claimedInfo){            \r\n            const rewardCount:number = claimedInfo.count;\r\n            const betSetting:PlayerInboxBetSetting = claimedInfo.betSetting;\r\n            const isUnstopable:boolean = (!!rewardCount && rewardCount > 0);\r\n\r\n            if(!this.isStoreRegisted(this.waitForStore)){\r\n                await this.waitForReady();\r\n            }\r\n\r\n            this.dispatch({type:MainGameAction.SETTING, payload: {     \r\n                isUnstoppable:isUnstopable,         \r\n                autoSpinNumber: rewardCount,\r\n                betConfig: betSetting\r\n            }});        \r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     * @param state \r\n     */\r\n    private async executeSpinStateRender(state:PlayerInboxState){\r\n        if(!this.isStoreRegisted(this.waitForStore)){  \r\n            await this.waitForReady();\r\n        }\r\n        this.dispatch({type:API_ACTION.SPIN});\r\n        // state.claimed = null;\r\n        // this.setState(state);\r\n    }\r\n    \r\n\r\n    // ------------------------------------------\r\n\r\n    /**\r\n     * \r\n     * @param state \r\n     */\r\n    private async showContinuePopupRender(state:PlayerInboxState){\r\n        this.curtain.active = true;\r\n        this.playerInboxPanel.active = false;\r\n        this.closeButton.active = false;\r\n        this.continueNotication.active = true;\r\n        this.dragButton.active = false;\r\n        await new Promise((resolve:Function)=>{\r\n            this._continue = resolve;\r\n        })\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     * @param state \r\n     */\r\n    private async showInboxViewRender(state?:PlayerInboxState){\r\n        this.curtain.active = true;\r\n        this.playerInboxPanel.active = true;\r\n        this.closeButton.active = true;        \r\n        this.continueNotication.active = false;\r\n        this.dragButton.active = false;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param state \r\n     */\r\n    private async showIconViewRender(state?:PlayerInboxState){\r\n        this.curtain.active = false;        \r\n        this.playerInboxPanel.active = false;\r\n        this.closeButton.active = false;\r\n        this.continueNotication.active = false;\r\n        this.dragButton.active = true;\r\n    }\r\n\r\n        \r\n    // --------------- PRIVATE ---------------------\r\n\r\n    /**\r\n     * \r\n     * @param networkState \r\n     * @returns \r\n     */\r\n    private getClaimedRewards(networkState:any):any{\r\n        if(!networkState) return;\r\n        let claimedReward:any = Helper.searchValue(networkState, 'config.playerReward');\r\n        if(Array.isArray(claimedReward)){\r\n            claimedReward = (claimedReward as any[]).find((reward:any)=> reward.status == \"CLAIMED\");\r\n        }\r\n        return claimedReward;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param networkState \r\n     * @returns \r\n     */\r\n    private getPlayMode(networkState:any):number{\r\n        const spinData:any = networkState?.spin;\r\n        if(spinData){\r\n            const numOfFreeSpin:number = spinData.freeSpins || 0;\r\n            return (numOfFreeSpin && numOfFreeSpin > 0) ? 1 : 0; // 1: FreeSpin , 0: Normal Spin\r\n        }\r\n        return 0\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param claimRewardData \r\n     */\r\n    private getClaimInfoFromRewardData(playerReward:any):ClaimInfo{\r\n        if(!playerReward) return null;\r\n        const id:string = Helper.searchValue(playerReward, 'id');       \r\n        const rewardCount:number = playerReward.rewardCount || Helper.searchValue(playerReward, 'reward.count') || 0;\r\n        let rewardData:any = Helper.searchValue(playerReward, 'reward.data');\r\n        if(rewardData){\r\n            rewardData = js.isString(rewardData) ? JSON.parse(rewardData) : rewardData;\r\n        }\r\n        // Update auto spin number\r\n        const betSetting:PlayerInboxBetSetting = rewardData ? Helper.searchValue(rewardData, 'betSetting') : null;         \r\n        // \r\n        if(betSetting && id){\r\n            return {\r\n                claimId: id,\r\n                betSetting: betSetting,\r\n                count: rewardCount\r\n            } as ClaimInfo\r\n        }\r\n        return null\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param state \r\n     */      \r\n    protected async renderInboxList(networkState:any){\r\n        if(networkState?.config?.playerInbox){\r\n            const data:any[] = networkState?.config?.playerInbox.data;  // data of inbox_history\r\n            const domain:string = Helper.searchValue(networkState?.config, 'domain');\r\n            const playerToken:string = Helper.searchValue(networkState?.config, 'playerToken');\r\n            // \r\n            if(this.emptyNotication) { \r\n                this.emptyNotication.node.active = !(data && data.length);\r\n            }\r\n            // \r\n            if(data && data.length){\r\n                const now = new Date().getTime(); // Get the current date and time \r\n                const inboxList:InboxInfo[] = [];\r\n                data.forEach((elementData:any, index:number)=>{\r\n                    const inboxInfo:InboxInfo = js.createMap();\r\n                    // Pick data field from network data.\r\n                    inboxInfo.id = index;\r\n                    inboxInfo.claimId = Helper.searchValue(elementData, 'id');\r\n                    inboxInfo.module = Helper.searchValue(elementData, 'module');\r\n                    inboxInfo.isRead = !!Helper.searchValue(elementData, 'isRead');\r\n                    inboxInfo.claimBefore = new Date(Helper.searchValue(elementData, 'claimBefore'));\r\n                    inboxInfo.claimUrl  = domain + Helper.searchValue(elementData, 'claimUrl') + playerToken;\r\n                    inboxInfo.count  = Helper.searchValue(elementData, 'extraInfo.reward.count');\r\n                    // inboxInfo.gameMode  = Helper.searchValue(elementData, 'extraInfo.reward.data.gameMode.type'); // Optional, do not need.\r\n                    inboxInfo.betSetting = Helper.searchValue(elementData, 'extraInfo.reward.data.betSetting');\r\n                    // \r\n                    inboxList.push(inboxInfo);\r\n                })\r\n                if(inboxList.length) {\r\n                    inboxList.sort((a:InboxInfo, b:InboxInfo)=>{\r\n                        const timeA = new Date(a.claimBefore).getTime();\r\n                        const timeB = new Date(b.claimBefore).getTime();\r\n                        // Compare the 'created' times\r\n                        if (timeA < now && timeB < now) {\r\n                            return 0; // Keep the order unchanged if both times are less than the current time\r\n                        } else if (timeA < now) {\r\n                            return 1; // 'a' should be placed at the end of the array\r\n                        } else if (timeB < now) {\r\n                            return -1; // 'b' should be placed at the end of the array\r\n                        } else {\r\n                            return (timeA - timeB); // Compare times in ascending order\r\n                        }\r\n                    })\r\n                    // \r\n                    // await this.activeViewRender();\r\n                    await this.updateInboxHistoryRender(inboxList);\r\n                }\r\n                // \r\n            }else{\r\n                warn('Empty Inbox !!!')\r\n            }\r\n            //\r\n\r\n            // \r\n        }else{\r\n            warn('There is no data for networkState.config.playerInbox');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param inboxList \r\n     */\r\n    private async updateInboxHistoryRender(inboxList:InboxInfo[]){\r\n        if(this.inboxContainer && this.itemPrefab){\r\n            if(this.languagePackage){\r\n                await this.languagePackage.waitForReady();\r\n            }\r\n            this.inboxContainer.removeAllChildren();\r\n            inboxList.forEach((data:InboxInfo)=>{\r\n                const itemName:string = data.claimId;\r\n                let itemNode:Node = this.inboxContainer.getChildByName(itemName);\r\n                if(!itemNode){\r\n                    itemNode= instantiate(this.itemPrefab);\r\n                    itemNode.parent = this.inboxContainer;\r\n                    itemNode.name = itemName;\r\n                }\r\n                // \r\n                const item:PlayerInboxItem = itemNode.getComponent(PlayerInboxItem);\r\n                item.on(PlayerInboxItem.EVENT.SELECTED, this.onClaimItem.bind(this));\r\n                item.render(data);\r\n                // \r\n            })\r\n        }\r\n    }\r\n\r\n    // -----------------\r\n    \r\n    /**\r\n     * \r\n     * @param itemInfo \r\n     */\r\n    protected async onClaimItem(itemInfo:InboxInfo){        \r\n        // if(this._selectedItemInfo == itemInfo) return;\r\n        // \r\n        if(this.claimService){\r\n            const claimedInfo:ClaimInfo = {\r\n                claimId: itemInfo.claimId,\r\n                count: itemInfo.count,\r\n                betSetting: itemInfo.betSetting\r\n            }\r\n            // \r\n            this.dispatch({type:PlayerInboxAction.CLAIM, payload:{\r\n                url: itemInfo.claimUrl,\r\n                data: claimedInfo                \r\n            }});\r\n            //           \r\n        }else{\r\n            error('No service config \\\"claimService\\\"');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param event \r\n     */\r\n    protected onPressIconButton(event:Event){\r\n        this.dispatch({type:PlayerInboxAction.SHOW, payload:{status: PlayerInboxStatus.SHOW_INBOX_VIEW} });\r\n    }\r\n    \r\n    /**\r\n     * \r\n     * @param event \r\n     */\r\n    protected onPressCloseButton(event:Event){\r\n        this.dispatch({type:PlayerInboxAction.SHOW, payload:{status: PlayerInboxStatus.SHOW_ICON_VIEW}});\r\n    }\r\n\r\n    protected onPressOkButton(event:Event){\r\n        if(this._continue){\r\n            this._continue();\r\n        }\r\n        // this.dispatch({type:PlayerInboxAction.SHOW, payload:{status: PlayerInboxStatus.SHOW_INBOX_VIEW} });\r\n    }\r\n\r\n    // -----------------\r\n    /**\r\n     * This funtion using for handler the params tranfer to service config.\r\n     * @param state \r\n     * @param paramKey \r\n     * @returns the string which passed to {paramKey} of request.\r\n     */\r\n    getStartDateParam(state:any, paramKey:string):string{\r\n        const date:Date = new Date();\r\n        return new Date(date.getFullYear(), date.getMonth(), date.getDate()).toISOString();        \r\n    }\r\n    \r\n    /**\r\n     * This funtion using for handler the params tranfer to service config.\r\n     * @param state \r\n     * @param paramKey \r\n     * @returns the string which passed to {paramKey} of request.\r\n     */\r\n    getEndDateParam(state:any, paramKey:string):string{\r\n        return new Date().toISOString();\r\n    }\r\n\r\n    /**\r\n     * This funtion using for handler the params tranfer to service config.\r\n     * @param state \r\n     * @param paramKey \r\n     * @returns \r\n     */\r\n    getCurrentRewardId(state:any, paramKey:string):string{        \r\n        return (this._selectedItemInfo) ? this._selectedItemInfo.claimId : undefined\r\n    }\r\n\r\n    /**\r\n     * This funtion using for handler the params tranfer to service config.\r\n     * @param state \r\n     * @param paramKey \r\n     * @returns \r\n     */\r\n    getCurrentModule(state:any, paramKey:string):string{\r\n        return (this._selectedItemInfo) ? this._selectedItemInfo.module : undefined\r\n    }\r\n\r\n    getIsFunParam(state:any, paramKey:string):string{\r\n        return 'false'\r\n    }\r\n    // -----------------\r\n    /**\r\n     * \r\n     * @returns \r\n     */\r\n    protected getAPIData():any{\r\n        const serviceData:any = this.getOtherState(this.servieName);\r\n        if(!serviceData) {\r\n            error('Không có hoặc setup nhầm service');\r\n            return null;\r\n        }\r\n        return serviceData;\r\n    }\r\n    // -----------------\r\n\r\n}\r\n\r\n\r\n","export type PlayerInboxResponse = {\r\n    items:InboxInfo[]\r\n    count?:number,\r\n    page?:number,\r\n    pageCount?:number,\r\n    size?: number,\r\n    total?: number\r\n}\r\n\r\nexport type ClaimInfo = {\r\n    claimId:string,\r\n    count:number,\r\n    betSetting:PlayerInboxBetSetting,\r\n}\r\n\r\nexport type InboxInfo = {\r\n    id:number,\r\n    claimId:string,\r\n    gameMode:string,\r\n    module:string,\r\n    isRead:boolean,\r\n    // count:number,\r\n    // betSetting:PlayerInboxBetSetting,\r\n    claimUrl:string,\r\n    claimBefore:Date\r\n} & ClaimInfo\r\n\r\n\r\n\r\nexport type PlayerInboxBetSetting = {\r\n    betSize: number, \r\n    betLevel: number, \r\n    baseBet: number, \r\n    betAmount: number\r\n}\r\n\r\nexport type PlayerInboxState = {\r\n    status:number,\r\n    // gameMode?:number,\r\n    claimed:{\r\n        url:string\r\n        data: ClaimInfo\r\n    },\r\n    // rewardCount?:number\r\n}\r\n\r\nexport enum PlayerInboxStatus {\r\n    INIT,\r\n    READY,\r\n    UPDATE,    \r\n    SHOW_CONTINUE_VIEW,\r\n    SHOW_ICON_VIEW,\r\n    SHOW_INBOX_VIEW,    \r\n    HIDE_VIEW,\r\n    CLAIM,\r\n    AUTO_SPIN\r\n}\r\n\r\nexport const PlayerInboxAction = {\r\n    UPDATE_INBOX:'player_inbox_update_inbox_action',\r\n    UPDATE_SETTING:'player_inbox_update_setting_action',\r\n    SHOW:'player_inbox_show_action',\r\n    HIDE:'player_inbox_hide_action',\r\n    CLAIM:'player_inbox_claim_action',\r\n}","\r\nimport { Component, error, log, warn, _decorator } from 'cc';\r\nimport { DEBUG } from 'cc/env';\r\nimport { Action } from './Action';\r\nimport { Store } from './Store';\r\n\r\nconst { ccclass } = _decorator;\r\n\r\n/**\r\n * \r\n * \r\n * Author: Hallopatidu@gmail.com\r\n */\r\n@ccclass('Reducer')\r\nexport class Reducer extends Store {\r\n    protected _state: any;\r\n\r\n    //------------------------------------------\r\n    onLoad(){\r\n        this._state = this.initialState;\r\n    }\r\n    \r\n    /**\r\n     * \r\n     */\r\n    onDestroy(){\r\n        super.onDestroy();\r\n        this._state = null;\r\n    }\r\n    \r\n\r\n    /**\r\n     * \r\n     */\r\n    onRejected(){\r\n        // override \r\n        // DEBUG && GAMIFY_LOGS && log('Cập nhật store thất bại :: '+ this.__ccClassName)\r\n    }\r\n\r\n    //------------------------------------------\r\n    /**\r\n     * Getter that exposes the entire state of this store. If your state is not\r\n     * immutable you should override this and do not expose _state directly.\r\n     */\r\n    public getState():any {\r\n        return Object.assign({}, this._state) ; // Working for a Imutable State\r\n    }\r\n\r\n    /**\r\n     * Constructs the initial state for this store. This is called once during\r\n     * construction of the store.\r\n     */\r\n    protected get initialState():any {        \r\n        try{             \r\n            throw new Error( this.__ccClassName + \".initialState :: Cần có thủ tục khởi tạo State ban đầu.\")\r\n        }catch(err:any){\r\n            error(error);\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    /**\r\n     * Used to reduce a stream of actions coming from the dispatcher into a\r\n     * single state object.\r\n     */\r\n    public reduce(state:any, action:Action):any {\r\n        // return abstractMethod('ReduceStore', 'reduce');                       \r\n        throw new Error( this.__ccClassName + \".reduce :: Các subclass kế thừa Reducer yêu cầu Override hàm này để có thủ tục reduce các trạng thái của Store.\");\r\n        return state;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if two versions of state are the same. You do not need to override\r\n     * this if your state is immutable.\r\n     */\r\n    protected areEqual(one:any, two:any) {        \r\n        return one === two; \r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} action \r\n     */\r\n    // protected __prepareInvokeOnDispatch(action:Action){\r\n    //     // \r\n    // }\r\n\r\n    /**\r\n     * \r\n     * @param action \r\n     */\r\n    // protected __endingInvokeOnDispatch(action:Action){\r\n    //     // \r\n    // }\r\n\r\n\r\n    /**\r\n     * This method override super.__invokeOnDispatch and encapsulates all logic for invoking __onDispatch. It should\r\n     * be used for things like catching changes and emitting them after the\r\n     * subclass has handled a action.\r\n     */\r\n    // protected __invokeOnDispatch(action:Action) {\r\n    //     this.__prepareInvokeOnDispatch(action);\r\n    //     super.__invokeOnDispatch(action);\r\n    //     this.__endingInvokeOnDispatch(action);\r\n    // }\r\n\r\n\r\n    /**\r\n     * The callback that will be registered with the dispatcher during\r\n     * instantiation. Subclasses must override this method. This callback is the\r\n     * only way the store receives new data.\r\n     */\r\n    protected __onDispatch(action:Action) {        \r\n        // Reduce the stream of incoming action to state, update when necessary.\r\n        // let startingState = this._state;\r\n        let endingState = this.reduce(this.getState(), action);\r\n        \r\n        // This means your ending state should never be undefined.            \r\n        // !(endingState !== undefined) ? DEBUG ? error(this.__ccClassName + '.reduce(...) trả về giá trị chưa xác định, dự là đã quên trả về giá trị state trong trường hợp mặc định ? (nếu không thích trả về thì nên để là return null)') : error(false) : undefined;\r\n        !(endingState !== undefined) ? DEBUG ? error(this.__ccClassName + '.reduce(...) return undefined value, May be, you have forgotten returning the state attribute ? (could be returning the null value, if you want)') : error(false) : undefined;\r\n        this.setState(endingState);\r\n        // if (!this.areEqual(startingState, endingState)) {\r\n        //     this._state = endingState;\r\n\r\n        //     // `__emitChange()` sets `this.__changed` to true and then the actual\r\n        //     // change will be fired from the emitter at the end of the dispatch, this\r\n        //     // is required in order to support methods like `hasChanged()`\r\n        //     this.__emitChange();\r\n        // }else{\r\n        //     this.__rejectChange();\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * Check and set new state.\r\n     * @param newState \r\n     */\r\n    protected setState(newState:any, isForced:boolean = false):boolean{\r\n        let startingState = this._state;\r\n        if ( isForced || !this.areEqual(startingState, newState) ) {\r\n            this._state = newState;\r\n            // `__emitChange()` sets `this.__changed` to true and then the actual\r\n            // change will be fired from the emitter at the end of the dispatch, this\r\n            // is required in order to support methods like `hasChanged()`\r\n            this.__emitChange();\r\n            return true\r\n        }else{\r\n            this.__rejectChange();\r\n            return false\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    protected __rejectChange(){\r\n        this.onRejected();\r\n    }    \r\n\r\n}\r\n\r\n","import { _decorator } from 'cc';\r\nimport ParasiteComponent, { override } from '../../../gamify/master/ParasiteComponent';\r\nimport { MultilingualController } from '../MultilingualController';\r\nimport { importRemoteCCClass, remoteCCClass } from '../../../gamify/utils/RemoteScriptImporter';\r\nimport { Enum } from 'cc';\r\nimport { AssetManager } from 'cc';\r\nimport { assetManager } from 'cc';\r\nimport { JsonAsset } from 'cc';\r\nimport { js } from 'cc';\r\nimport { error } from 'cc';\r\nimport { DEV, EDITOR } from 'cc/env';\r\nimport { warn } from 'cc';\r\nimport { log } from 'cc';\r\nimport { Component } from 'cc';\r\nimport { AsyncWaitify } from '../../../gamify/master/AsyncWaitify';\r\nimport { Asset } from 'cc';\r\nimport { CCString } from 'cc';\r\nimport { resources } from 'cc';\r\nconst { property, executeInEditMode } = _decorator;\r\nconst Helper:any = importRemoteCCClass('Helper');\r\nconst LocalizationController:any = importRemoteCCClass('LocalizationController');\r\n// const ParasiteComponent:any = importRemoteCCClass('ParasiteComponent');\r\n// when release the game-template. I will add more links to resource servers.\r\nconst RESOURCE_SERVER = {\r\n    STAGE_LOADING: '',\r\n    GAMIFY_WORKSPACE :'http://222.252.29.181:2567',\r\n    JSDELIVR_NET:'https://cdn.jsdelivr.net/gh/hallo-gamify/gamify-resource@master',\r\n}\r\n\r\nconst LANG_BLOCK:string = '{language}';\r\n\r\ntype BundleJSON = {\r\n    [key:string] : string[]\r\n}\r\n\r\nlet DefaultResourceServer = Helper.convertToEnum(RESOURCE_SERVER);\r\nlet DefaultBundleName = Enum({ERROR_LOADING_BUNDLE:0});\r\nlet DefaultBundleVersion = Enum({ERROR_LOADING_BUNDLE_VERSION:0});\r\n\r\n@remoteCCClass('RemoteMultilingualTextPackage')\r\n@executeInEditMode(true)\r\nexport class RemoteMultilingualTextPackage extends AsyncWaitify(Component) {\r\n    \r\n    static BundleList:BundleJSON;\r\n    \r\n    // @override\r\n    // async startLocalizing() {\r\n    //     await this.startLoadingLanguagePack();\r\n    //     console.log('goi vao super startLocalizing')\r\n    // }\r\n\r\n    // -----------------------\r\n    \r\n\r\n    @property({\r\n        type: DefaultResourceServer,\r\n        displayName:'Host'\r\n    })    \r\n    public get hostIndex(): number {\r\n        return this._hostIndex;\r\n    }\r\n    public set hostIndex(value: number) {\r\n        if(this._hostIndex !== value){\r\n            this._hostIndex = value;\r\n            this.hostName = RESOURCE_SERVER[DefaultResourceServer[value]];\r\n            this.__loadAndParseBundleList();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    @property({\r\n        type: DefaultBundleName,\r\n        displayName:'Bundle',\r\n        visible() {\r\n            return this.hostIndex !== DefaultResourceServer.STAGE_LOADING;\r\n        }\r\n    })    \r\n    public get bundleNameIndex(): number {\r\n        return this._bundleNameIndex;\r\n    }\r\n    public set bundleNameIndex(value: number) {      \r\n        this.updateBundleEnum();        \r\n        if(RemoteMultilingualTextPackage.BundleList){\r\n            this._bundleNameIndex = value;\r\n            this.bundleName = DefaultBundleName[this._bundleNameIndex];\r\n        }\r\n        this.updateBundleVersionEnum();\r\n    }\r\n    \r\n    @property({\r\n        type: DefaultBundleVersion,\r\n        displayName:'Version',\r\n        visible() {\r\n            return this.hostIndex !== DefaultResourceServer.STAGE_LOADING;\r\n        }\r\n    })    \r\n    public get bundleVersionIndex(): number {\r\n        return this._bundleVersionIndex;\r\n    }\r\n    public set bundleVersionIndex(value: number) {                           \r\n        this.updateBundleVersionEnum();        \r\n        if(RemoteMultilingualTextPackage.BundleList){\r\n            this._bundleVersionIndex = value;   \r\n            this.bunderVersion = DefaultBundleVersion[this._bundleVersionIndex];\r\n        }        \r\n    }\r\n        \r\n    //\r\n    // @property({\r\n    //     type: [DefaultBundleName],\r\n    //     displayName: 'Wait For Loading',\r\n    //     visible() {\r\n    //         return this.hostIndex !== DefaultResourceServer.STAGE_LOADING ;\r\n    //     },        \r\n    // }) \r\n    // waitBundleLoading:number[] = [];\r\n\r\n    @property({serializable:true , visible:false})\r\n    hostName:string = RESOURCE_SERVER.GAMIFY_WORKSPACE;\r\n\r\n    @property({\r\n        type:CCString,\r\n        serializable:true ,\r\n        visible(){\r\n            return this.hostIndex == DefaultResourceServer.STAGE_LOADING\r\n        }\r\n        // visible:false\r\n    })\r\n    bundleName:string = '';\r\n\r\n    @property({serializable:true , visible:false})\r\n    bunderVersion:string = null;\r\n\r\n    @property({serializable:true})\r\n    private _hostIndex: number = 0;\r\n\r\n    @property({serializable:true})\r\n    private _bundleVersionIndex: number = 0;\r\n\r\n    @property({serializable:true})\r\n    private _bundleNameIndex: number = 0;\r\n\r\n    // @property({\r\n    //     // visible:false,\r\n    //     tooltip:'Ex: '+ LANG_BLOCK + '.json - Path to language json file. In which, the '+ LANG_BLOCK + ' key word would be replaced by current language'\r\n    // })\r\n    // patternPath:string = LANG_BLOCK + '.json';\r\n    \r\n    // protected controller:MultilingualController = null;\r\n    private controller:MultilingualController = null;\r\n    \r\n    /**\r\n     * \r\n     */\r\n    async onLoad() {\r\n        if(!this.controller) this.controller = this.getComponent(MultilingualController)\r\n        super.onLoad && super.onLoad();\r\n        await this.startLoadingLanguagePack();        \r\n        this.controller && await this.controller.startLocalizing(true);\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    private async startLoadingLanguagePack(){\r\n        const lang:string = this.controller?.currentLanguage || LocalizationController.language;\r\n        if(this.hostIndex !== DefaultResourceServer.STAGE_LOADING){\r\n            await this.__loadAndParseBundleList.call(this);\r\n        }\r\n        const bundle:AssetManager.Bundle = await this.__loadBundle();\r\n        const languageJSONData:{[n:string]:string} = await this._loadAndParseLanguagePackage(lang, bundle);\r\n        this.ready(languageJSONData);\r\n    }\r\n    \r\n    /**\r\n     * \r\n     * @returns Promise<BundleJSON>\r\n     */\r\n    private async __loadAndParseBundleList():Promise<BundleJSON>{\r\n        if(this.hostIndex == DefaultResourceServer.STAGE_LOADING) return null;\r\n        RemoteMultilingualTextPackage.BundleList = RemoteMultilingualTextPackage.BundleList || await new Promise((resolve:Function)=>assetManager.loadAny({url: this.hostName + '/remote'}, (err:Error, json:BundleJSON&JsonAsset|string)=>{\r\n            const jsonObj:any = js.isString(json) ? JSON.parse(json as string) : json\r\n            return !err ? resolve(jsonObj) : resolve(null);\r\n        }))\r\n        // Parsing bundles\r\n        if(RemoteMultilingualTextPackage.BundleList){                \r\n            this.updateBundleEnum();\r\n            this.updateBundleVersionEnum();\r\n            return RemoteMultilingualTextPackage.BundleList as BundleJSON;\r\n        }else{\r\n            error('[RemoteMultilingualTextPackage] Khong load duoc server !')\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @returns Promise<AssetManager.Bundle>\r\n     */\r\n    private async __loadBundle():Promise<AssetManager.Bundle>{\r\n        if(!EDITOR){\r\n            if(!this.bundleName || !this.bundleName.length) {\r\n                warn('Do not exsit bundle name ' + this.bundleName + ' use cc.resources bundle instead')\r\n                return resources\r\n            }\r\n            let bundle:AssetManager.Bundle = assetManager.getBundle(this.bundleName);\r\n            if(!bundle){\r\n                const bundleUrl:string = ((this.hostIndex == DefaultResourceServer.STAGE_LOADING) ? '' : this.hostName) + '/remote/' + this.bundleName;\r\n                bundle = await new Promise<AssetManager.Bundle>((resolve:Function)=>{\r\n                    if(this.hostIndex == DefaultResourceServer.STAGE_LOADING){\r\n                        assetManager.loadBundle(bundleUrl, (err:Error, downloadBundle:AssetManager.Bundle)=>{                   \r\n                            if(!err){                               \r\n                                resolve(downloadBundle);                            \r\n                            }else{\r\n                                DEV && error('Bundle Loading Error ' + err + ' bundle name: ' + this.bundleName)\r\n                                resolve(null)\r\n                            }\r\n                            \r\n                        }) \r\n                    }else{\r\n                        // \r\n                        assetManager.loadBundle(bundleUrl, {version: this.bunderVersion}, (err:Error, downloadBundle:AssetManager.Bundle)=>{                   \r\n                            if(!err){                               \r\n                                resolve(downloadBundle);                            \r\n                            }else{\r\n                                DEV && error('Bundle Loading Error ' + err + ' bundle name: ' + this.bundleName)\r\n                                resolve(null)\r\n                            }\r\n                            \r\n                        }) \r\n                    }\r\n                })\r\n            }\r\n            return bundle;\r\n        }else{\r\n            // \r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param bundle \r\n     */\r\n    private async _loadAndParseLanguagePackage(lang:string, bundle:AssetManager.Bundle):Promise<{[n:string]:string}>{\r\n        const textAssetPath:string = (this.controller && this.controller.localizedPath ? this.controller.localizedPath + '/' : '') + lang; //this.parseLangUrl(lang, this.controller.localizedPath);        \r\n        if(textAssetPath && bundle){\r\n            const languageJSONData:{[n:string]:string} = await new Promise((resolve:Function)=>{                \r\n                bundle.load(textAssetPath,JsonAsset, (err, assets) => {                \r\n                    if (err) {\r\n                        (EDITOR || DEV) && warn('Error loading common text for language ' + lang + \" (This message only show on EDITOR or DEV mode)\");\r\n                        resolve(null);\r\n                    }else{\r\n                        if (assets && assets instanceof JsonAsset) {\r\n                            resolve(assets.json)\r\n                        }else{\r\n                            resolve(JSON.parse(assets.toString()))\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            const packageName:string = bundle.name;\r\n            languageJSONData && LocalizationController.addJSONPackage(packageName, languageJSONData, false);\r\n            // DEV && console.log('languageJSONData: ' + JSON.stringify(languageJSONData))\r\n            return languageJSONData\r\n        }\r\n        return null\r\n    }\r\n\r\n\r\n    // private parseLangUrl(lang:string, patternPath:string):string{\r\n    //     return patternPath.replace(LANG_BLOCK, lang)\r\n    // }\r\n\r\n    /**\r\n     * \r\n     */\r\n    private updateBundleEnum(){        \r\n        if(RemoteMultilingualTextPackage.BundleList){\r\n            DefaultBundleName = Helper.convertToEnum(RemoteMultilingualTextPackage.BundleList);\r\n            EDITOR && Helper.updateEnum(this,'bundleNameIndex', DefaultBundleName);   \r\n            if(this.bundleName && this.bundleName.length && DefaultBundleName[this.bundleName] !== undefined && DefaultBundleName[this.bundleName] !== null){\r\n                this._bundleNameIndex = DefaultBundleName[this.bundleName];\r\n            }else{\r\n                this._bundleNameIndex = 0;\r\n            }\r\n            this.bundleName = DefaultBundleName[this._bundleNameIndex];\r\n        }\r\n        if(!RemoteMultilingualTextPackage.BundleList) console.log('Unable update bundle Enum !')\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    private updateBundleVersionEnum(){\r\n        if(RemoteMultilingualTextPackage.BundleList){\r\n            const bundleName:string = DefaultBundleName[this.bundleNameIndex];\r\n            const versionList:string[] = RemoteMultilingualTextPackage.BundleList[bundleName]\r\n            DefaultBundleVersion = Helper.convertToEnum(versionList);\r\n            EDITOR && Helper.updateEnum(this,'bundleVersionIndex', DefaultBundleVersion);            \r\n            if(this.bunderVersion && this.bunderVersion.length && DefaultBundleVersion[this.bunderVersion] !== undefined && DefaultBundleVersion[this.bunderVersion] !== null){\r\n                this._bundleVersionIndex = DefaultBundleVersion[this.bunderVersion];\r\n            }else{\r\n                this._bundleVersionIndex = 0;\r\n            }\r\n            this.bunderVersion = DefaultBundleVersion[this._bundleVersionIndex];\r\n        }\r\n        if(!RemoteMultilingualTextPackage.BundleList) console.log('Unable update version Enum !')\r\n    }\r\n\r\n    \r\n\r\n}\r\n\r\n\r\n","import { __private, js  } from \"cc\";\r\nimport { CCClass } from \"cc\";\r\nimport { warn } from \"cc\";\r\n\r\nimport { DEV } from \"cc/env\";\r\n\r\nconst CACHE_KEY = '__ccclassCache__';\r\n\r\n// export type CCConstructor = __private._types_globals__Constructor<unknown>;\r\n\r\nfunction makeSmartClassDecorator<TArg> (\r\n    decorate: <TFunction extends Function>(constructor: TFunction, arg?: TArg) => ReturnType<ClassDecorator>,\r\n): ClassDecorator & ((arg?: TArg) => ClassDecorator) {\r\n    return proxyFn;\r\n    function proxyFn(...args: Parameters<ClassDecorator>): ReturnType<ClassDecorator>;\r\n    function proxyFn(arg?: TArg): ClassDecorator;\r\n    function proxyFn (target?: Parameters<ClassDecorator>[0] | TArg): ReturnType<ClassDecorator> {\r\n        try{\r\n            if (typeof target === 'function') {\r\n                // If no parameter specified\r\n                return decorate(target);\r\n            } else {\r\n                return function <TFunction extends Function> (constructor: TFunction) {\r\n                    return decorate(constructor, target);\r\n                };\r\n            }\r\n        }catch(err){\r\n            DEV && warn('[Error In DEV mode]'+ err);\r\n        }\r\n    }\r\n}\r\n\r\nexport function importRemoteCCClass(className:string):__private._types_globals__Constructor<unknown>{\r\n    return js.getClassByName(className)\r\n}\r\n\r\n\r\n/**\r\n * Do not declare this class to cc when a similar class with the same name already exists in the system.\r\n * (Không khai báo class này cho cc khi đã tồn tại class tương tự và trùng tên trong hệ thống.)\r\n * Priority is given to using classes in scripts of each game if they have the same name. This will not affect other games that share the same remote class\r\n * (Ưu tiên sử dụng class trong scripts của từng game nếu trùng tên. Như vậy sẽ không ảnh hưởng tới các game khác dùng chung remote class.)\r\n */\r\nexport const remoteCCClass: ((name:string) => ClassDecorator) & ClassDecorator = makeSmartClassDecorator<string>((constructor, name) => {            \r\n    if(!js.getClassByName(name)){\r\n        let base = js.getSuper(constructor);\r\n        if (base === Object) {\r\n            base = null;\r\n        }\r\n\r\n        const proto = {\r\n            name,\r\n            extends: base,\r\n            ctor: constructor,\r\n        };\r\n        const cache = constructor[CACHE_KEY];\r\n        if (cache) {\r\n            const decoratedProto = cache.proto;\r\n            if (decoratedProto) {\r\n                js.mixin(proto, decoratedProto);\r\n            }\r\n            constructor[CACHE_KEY] = undefined;\r\n        }\r\n\r\n        const res = CCClass(proto);\r\n        return res\r\n    }\r\n});\r\n\r\n","\r\nimport { error, js, log, warn, _decorator } from 'cc';\r\nimport { DEBUG, DEV } from 'cc/env';\r\nimport { Action, ActionObject } from '../core/Action';\r\nimport { IRenderOrderDispatcher } from '../interfaces/IDispatcher';\r\nimport { FunctionTask, OnRender, PromiseTask, RelativeMap, RenderTask } from '../types/GamifyType';\r\nimport { GAMIFY_DATA_LOGS, GAMIFY_LOGS, GAMIFY_RENDER_LOGS, GAMIFY_WARNNING, MAX_TIME_RENDER, REJECT_WHEN_TIMEOUT } from '../utils/Setting';\r\nimport { ActionStoreDispatcher } from './ActionStoreDispatcher';\r\nimport { Helper } from '../utils/Helper';\r\nconst { ccclass } = _decorator;\r\n\r\n\r\n/**\r\n * Điều khiển thứ tự Render của View.\r\n * 1. Tạo Promise cho các render task của các GamifyComponent\r\n * 2. Khi kết thúc quá trình cập nhật data, chạy cùng lúc các Promise task.\r\n * 3. Trong quá trình reduce. Đánh dấu các render task phụ thuộc.\r\n * \r\n */\r\n@ccclass('RenderOrderDispatcher')\r\nexport class RenderOrderDispatcher extends ActionStoreDispatcher implements IRenderOrderDispatcher {\r\n    // \r\n    protected _nullObject:object = Object.create(null);\r\n    //\r\n    private _orderTasks: string[] = null;       // Thứ tự các store và component trong luồng hiển thị.\r\n    \r\n    // private _renderTasks: FunctionTask = null;  // Chứa các request render.\r\n\r\n    // private _completedRenderTasks: Function[] = null;  // Chứa các completed render callback .\r\n\r\n    // protected _pendingRenderIds: string[] = null;   // Các task còn lại chưa render. Khi mảng này rỗng sẽ bắn ra sự kiên kết thúc render. Chỉ có giá trị chính thức khi bắt đầu rendering.\r\n\r\n    protected _isRendering:boolean = false;\r\n\r\n    // protected _selectedId:string = null;\r\n\r\n    /**\r\n     * _relativeMap là data key với value là string[], mỗi key là token id của một task render, và value là chuỗi các id tiếp theo được render.\r\n     */\r\n    // protected _relativeMap: RelativeMap = null;   // Bản đồ quan trọng trong việc sắp xếp thứ tự render.\r\n\r\n    protected _renderMap:Map<string, RenderTask> = null;\r\n\r\n    /**\r\n     *\r\n     */\r\n    constructor(id:string) {\r\n        super(id);\r\n        // this._pendingRenderIds = [];\r\n        // this._renderTasks = Object.create(null);\r\n        // \r\n        this._renderMap = new Map();\r\n        // this._completedRenderTasks = [];\r\n    }\r\n\r\n    //----------------- Feature -----------------\r\n\r\n    /**\r\n     * Hàm update relativeMap, đưa token id của phần tử cuối trong tham số ids\r\n     * vào mảng của các ids khác.\r\n     * \r\n     * @param ids \r\n     * @param relativeMap \r\n     */\r\n    protected _applyRenderBefore(ids:string[], relativeMap:RelativeMap){\r\n        let validateIds:string[] = this._validateIds(ids);\r\n        let selectedId:string = validateIds.pop();\r\n        validateIds.forEach((tokenId:string)=>{            \r\n            let _waitIds:string[] = relativeMap[tokenId] || [];\r\n            _waitIds = _waitIds.concat([selectedId]);\r\n            relativeMap[tokenId] = _waitIds;\r\n        })\r\n        relativeMap[selectedId] = relativeMap[selectedId] || [];\r\n    }\r\n\r\n    \r\n    /**\r\n     * Đăng ký các onRender function của GamifyComponent vào bộ quản lý render theo thứ tự.\r\n     * @param id            token id hoặc state name được đăng ký với hệ thống.\r\n     * @param onStartRender      Hàm onRender của các GamifyComponent\r\n     * @param capturedState     State Data của action tại thời điểm gọi đăng ký render. \r\n     */\r\n    public registerRender(id:string, capturedState:any = null, onStartRender?:OnRender, onCompletedRender?:Function, onCompletedAllRenders?:Function){\r\n        if(!this._pendingAction){\r\n            DEV && error('You have just register a render when run on data flow. (Hàm registerRender chỉ được gọi khi đang chạy luồng dữ liệu !)')\r\n        }\r\n        const capturedAction:Action = this._pendingAction as Action;            \r\n        const actionType:string = capturedAction.type;\r\n        const renderTask:RenderTask = this.getRenderTask(actionType);\r\n        const functionTask:FunctionTask = renderTask.tasks;    \r\n        if( functionTask && this.isDispatching() ) {\r\n            const tokenId:string = this._validateIds([id])[0];\r\n            DEBUG && (GAMIFY_LOGS || GAMIFY_RENDER_LOGS) && log('♥ ♥ ♥ REGISTER RENDER: ' + id + ' -tokenId: ' + tokenId +'   - action: ' + (this._pendingAction as Action).type);\r\n            //             \r\n            const relativeMap:RelativeMap = renderTask.map;\r\n            const allCompletedMethods:Function[] = renderTask.callbacks;\r\n            const pendingRenderTasks:Set<string> = renderTask.pending;\r\n            // Đăng ký cho phép render cho component id\r\n            // this._relativeMap[tokenId] = this._relativeMap[tokenId] || [];\r\n            // this._renderTasks[tokenId] = this._renderTasks[tokenId] || [];\r\n            // \r\n            relativeMap[tokenId] = relativeMap[tokenId] || [];\r\n            functionTask[tokenId] = functionTask[tokenId] || [];\r\n            // pendingRenderTasks.add(tokenId);\r\n            // \r\n            // Đăng ký hàm OnRender cho id tương ứng.\r\n            const registerRenderTask:PromiseTask = (sharedData:any)=>{\r\n                //\r\n                // onCompletedAllRenders && this._completedRenderTasks.push(onCompletedAllRenders);\r\n                onCompletedAllRenders && allCompletedMethods.push(onCompletedAllRenders);\r\n                pendingRenderTasks.add(tokenId);\r\n                // \r\n                return new Promise<any>((resolve:Function, reject:Function)=>{\r\n                    // DEBUG && GAMIFY_LOGS && log('>>>> EXCUTE RENDER TASK: ' + this.findMapName(tokenId) + ' - MAP: ' + this._pendingRenderIds);\r\n                    const storeName:string = this.findMapName(tokenId)\r\n                    //    pendingRenderTasks.delete(tokenId);\r\n                    // const removeIndex:number = this._pendingRenderIds.indexOf(tokenId)\r\n                    // if(removeIndex !== -1) { this._pendingRenderIds.splice(removeIndex, 1) }\r\n                    // \r\n                    let timeOutId:any;\r\n                    if((DEBUG || DEV) && !GAMIFY_RENDER_LOGS){\r\n                        timeOutId = setTimeout(()=>{                            \r\n                            DEBUG && warn('[WARNING] TIMEOUT RENDER TASK: ' + tokenId);                            \r\n                            DEBUG && warn('|________ Maybe, You could forget calling done function for the render process from \\\"' + storeName + '\\\" component with action: ' + actionType + ' on time. The MAX_TIME_RENDER is ' + MAX_TIME_RENDER + 'second. This MAX_TIME_RENDER constance is configured in gamify/ui/Setting.ts  ');\r\n                            DEBUG && warn('          (Có thể đã quên done render cho component ' + storeName + ' trong luồng action ' + actionType + '. Điều chỉnh thời gian tối đa cho việc báo lỗi này trong \\\"gamify/ui/Setting.ts\\\" hằng số MAX_TIME_RENDER )');\r\n                            clearTimeout(timeOutId);\r\n                            REJECT_WHEN_TIMEOUT && reject && reject();\r\n                        }, MAX_TIME_RENDER*1000) ;\r\n                    }\r\n                    //\r\n                    DEBUG && (GAMIFY_LOGS || GAMIFY_RENDER_LOGS) && log('>>>> START RENDER COMPONENT: ' + storeName + ' -tokenId: ' + tokenId + ' -action: ' + actionType);\r\n                    onStartRender && onStartRender((continueSharedData:any)=>{\r\n                        if(DEBUG && (GAMIFY_LOGS || GAMIFY_RENDER_LOGS)) {\r\n                            log('>>>>>>>> COMPLETED RENDER COMPONENT: ' + storeName + ' -tokenId: ' + tokenId + ' -action: ' + actionType);                            \r\n                        }\r\n                        onCompletedRender && onCompletedRender(actionType);\r\n                        //\r\n                        (DEBUG || DEV) && clearTimeout(timeOutId);\r\n                        // \r\n                        if(pendingRenderTasks.has(tokenId)) {pendingRenderTasks.delete(tokenId);}\r\n                        //                    \r\n                        continueSharedData = sharedData ? Object.assign(sharedData, continueSharedData) : continueSharedData;\r\n                        resolve && resolve(continueSharedData);\r\n                        if(pendingRenderTasks.size == 0){\r\n                            this._stopRendering(continueSharedData, capturedAction);\r\n                        }\r\n                    }, capturedState, sharedData, capturedAction);\r\n                    //\r\n                })\r\n                //\r\n            };\r\n            // \r\n            // this._renderTasks[tokenId].push(registerRenderTask);\r\n            functionTask[tokenId].push(registerRenderTask);\r\n            // \r\n        }\r\n        // \r\n    }\r\n    \r\n    \r\n    /**\r\n     * Xóa một onRender đã đăng ký.\r\n     * @param id    token id hoặc state name được đăng ký với hệ thống.\r\n     */\r\n     public removeRender(id:string){\r\n        // const selectedActionType:string = actionType || this._pendingAction ? (this._pendingAction as Action).type : null;\r\n        const tokenId:string = this._validateIds([id])[0];\r\n        this._renderMap.forEach((renderTask:RenderTask)=>{\r\n            // Xoá funtionTask\r\n            const functionTask:FunctionTask = renderTask.tasks\r\n            delete functionTask[tokenId];\r\n            // Xoá map của tokenId trong relativeMap\r\n            const relativeMap:RelativeMap = renderTask.map;\r\n            delete relativeMap[tokenId];\r\n            // Xoá toàn bộ tokenId liên quan trong relativeMap.\r\n            const keys:string[] = Object.keys(relativeMap)\r\n            keys.forEach((key:string)=>{                \r\n                const relativeKeys:string[] = relativeMap[key]\r\n                const index:number = relativeKeys.indexOf(key)\r\n                if(index != -1){\r\n                    relativeKeys.splice(index , 1);\r\n                    relativeMap[key] = relativeKeys;\r\n                }\r\n            })\r\n        })\r\n        // \r\n    }\r\n\r\n\r\n    /**\r\n     * Đăng ký các component chạy trước component hiện tại.\r\n     * @param beforeIds     Các token id hoặc state name chạy render trước component hiện tại\r\n     * @param currentId     token id hoặc state name của component hiện tại, cái mà được đăng ký với hệ thống.\r\n     */\r\n    public renderBefore(beforeIds:string[], currentId:string){\r\n        // const selectedActionType:string = actionType || this._pendingAction ? (this._pendingAction as Action).type : null;\r\n        const selectedActionType:string = this._pendingAction ? (this._pendingAction as Action).type : null;\r\n        if(!selectedActionType){\r\n            DEBUG && (GAMIFY_LOGS || GAMIFY_RENDER_LOGS) && error('Không đăng ký render thứ tự đươc -action: ' + selectedActionType + ' - first id: ' + beforeIds + ' - currentId: ' + currentId);\r\n        }\r\n        const renderTask:RenderTask = this.getRenderTask(selectedActionType);\r\n        this._applyRenderBefore(beforeIds.concat(currentId), renderTask.map);\r\n    }\r\n\r\n    \r\n    /**\r\n     * Whether the component is rendering or not. (Component có đang chạy render hay không.)\r\n     * @returns \r\n     */\r\n    public isRendering():boolean{\r\n        return this._isRendering;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param actionType \r\n     */\r\n    protected getRenderTask(actionType:string):RenderTask {\r\n        let renderTask:RenderTask = this._renderMap.get(actionType);\r\n        if(!renderTask){\r\n            renderTask = {\r\n                pending:new Set(),\r\n                map: Object.create(null),\r\n                tasks: Object.create(null),\r\n                callbacks: []\r\n            }\r\n            this._renderMap.set(actionType, renderTask);\r\n        }\r\n        return renderTask;\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     * @returns \r\n     */\r\n    protected _startRendering(relativeMap:RelativeMap, funtionRenderTasks:FunctionTask, capturedAction?:Action, pendingTasks?:Set<string>){\r\n        // log('Start Rendering !!!')\r\n        if(funtionRenderTasks && !js.isEmptyObject(funtionRenderTasks) && !this.isRendering()){\r\n            // DEBUG && (GAMIFY_LOGS || GAMIFY_RENDER_LOGS) && log('\\n > EXCUTE RENDER for Action: \"' + capturedAction.type + '\" --- Map:: ' + JSON.stringify(relativeMap));\r\n            // Sort tasks to show correct order. (Sắp xếp các task để render đúng thứ tự.)\r\n            let orderRenderTasks:string[] = Object.keys(funtionRenderTasks);\r\n            if(orderRenderTasks.length){\r\n                // Arrange render order according to relativeMap. (Sắp xếp thứ tự render theo relativeMap.)               \r\n                orderRenderTasks = this.sortRelativeMap(orderRenderTasks, relativeMap);\r\n                // \r\n                // this._pendingRenderIds = orderRenderTasks.concat(this._pendingRenderIds);\r\n                //  \r\n                // this._isRendering = this._pendingRenderIds.length ? true : false;\r\n                this._isRendering = pendingTasks.size != 0 ? true : false;\r\n                //  \r\n                // Use to view rendering progress details. (Sử dụng để xem chi tiết tiến trình render.)  \r\n                let relativeMapToString:string;\r\n                if(DEBUG && (GAMIFY_LOGS || GAMIFY_RENDER_LOGS)){\r\n                    relativeMapToString = JSON.stringify(relativeMap);                    \r\n                    log('\\n>>> RENDER INFO :: ACTION: ' + capturedAction.type)                    \r\n                    \r\n                    log('|__ Render Tasks : ' + Object.keys(funtionRenderTasks));\r\n                    log('|__ Relative Map : ' + relativeMapToString);\r\n                    // log('>>>> Pending Render Tasks  : ' + this._pendingRenderIds);                    \r\n                    if(orderRenderTasks && orderRenderTasks.length) {\r\n                        log('|__ Sort Render Tasks : ' + orderRenderTasks);\r\n                        const lastOrderRenderTaskId:string = orderRenderTasks[orderRenderTasks.length-1];\r\n                        log('|__Last Render State: -tokenId: '+ lastOrderRenderTaskId + ' -state name: ' + this.findMapName(lastOrderRenderTaskId));\r\n                    }\r\n                    log('----------------- END INFO \\n \\n')\r\n                }\r\n                //\r\n                const tasks:Promise<any>[] = [];\r\n                const logTasks:string[] = [];\r\n                while(orderRenderTasks.length) {\r\n                    const orderRenderId:string = orderRenderTasks.shift();                    \r\n                    if(Object.prototype.hasOwnProperty.call(relativeMap, orderRenderId)){\r\n                        if(GAMIFY_RENDER_LOGS){\r\n                            logTasks.push(\"\\n\");\r\n                        }\r\n                        // Gom các progress có liên kết thành một promise qua __excuteTask method.\r\n                        // !GAMIFY_RENDER_LOGS ? \r\n                        tasks.push(this.__excuteTask(orderRenderId, relativeMap, funtionRenderTasks, Promise.resolve(), logTasks)) \r\n                        // tasks.push( this.__excuteTask(orderRenderId, relativeMap, funtionRenderTasks, Promise.resolve(), logTasks).then(()=>{                         \r\n                        //     if(DEBUG && (GAMIFY_LOGS || GAMIFY_RENDER_LOGS) && logTasks && logTasks.length ){\r\n                        //         log('\\n ------------ COMPLETED TASK: ' + logTasks + ' -action: ' + capturedAction.type + '  \\n');\r\n                        //     }\r\n                        //     return Promise.resolve();\r\n                        // }) );\r\n                    }                    \r\n                }\r\n                // Remaining tasks run on the parallel progress.\r\n                Promise.all(tasks).then((sharedData:any)=>{\r\n                    DEBUG && (GAMIFY_LOGS || GAMIFY_RENDER_LOGS) && log('COMPLETE ALL RENDER TASKS FOR ACTION: ' + capturedAction.type);\r\n                    DEBUG && (GAMIFY_LOGS || GAMIFY_RENDER_LOGS) && log('           |___ relativeMap: ' + relativeMapToString);\r\n                    DEBUG && (GAMIFY_LOGS || GAMIFY_RENDER_LOGS) && log('           |___ logTasks: ' + logTasks);\r\n                    // DEBUG && log('COMPLETE ALL RENDER !!!' + (capturedAction as Action).type);\r\n                    if(orderRenderTasks.length) warn('?????????????????? Van con task dang chay !')\r\n                    if(Array.isArray(sharedData) && sharedData.length == 1){                        \r\n                        sharedData = sharedData[0];\r\n                    }\r\n                    // this._stopRendering(sharedData, capturedAction);\r\n                })\r\n            }\r\n            //            \r\n        }\r\n        //\r\n    }\r\n\r\n    \r\n    /**\r\n     * \r\n     * @param id \r\n     * @param relativeMap \r\n     * @param renderTasks \r\n     * @param lastPromise \r\n     */\r\n    private __excuteTask(id:string, relativeMap:RelativeMap, renderTasks:FunctionTask, lastPromise:Promise<any>, logTasks:string[] = []):Promise<any>{\r\n        if(relativeMap && renderTasks){ \r\n            let ids:string[] = relativeMap[id];\r\n            if(ids){\r\n                DEBUG && (GAMIFY_LOGS || GAMIFY_RENDER_LOGS) && logTasks && logTasks.push(this.findMapName(id));\r\n                // Delete to avoid re-calling again. (Xóa để tránh gọi lại lần nữa.)\r\n                delete relativeMap[id];           \r\n                // Where the render is registered multiple times. Append the corresponding renderTasks in order. (Trường hợp render được đăng ký nhiều lần. Nối các renderTask tương ứng chạy theo thứ tự.)\r\n                const renderPromiseTasks: PromiseTask[] = renderTasks[id];\r\n                if(renderPromiseTasks && renderPromiseTasks.length){     \r\n                    while(renderPromiseTasks.length){\r\n                        const renderTask:PromiseTask = renderPromiseTasks.shift();\r\n                        if(renderTask){\r\n                            lastPromise = lastPromise ? lastPromise.then(renderTask) : renderTask();\r\n                        }\r\n                    }                    \r\n                }else{\r\n                    DEV && GAMIFY_WARNNING && warn('No task in renderPromiseTasks !!!!')\r\n                }\r\n                //\r\n                while(ids.length){                    \r\n                    this.__excuteTask(ids.shift(), relativeMap, renderTasks, lastPromise, logTasks);                    \r\n                }\r\n                // \r\n            }            \r\n        }\r\n        return lastPromise //|| Promise.resolve();\r\n    }\r\n\r\n    //------------ SORTING --------------\r\n\r\n    /**\r\n     * \r\n     * @param relativeMap \r\n     * @param pendingIds \r\n     * @param sorttings \r\n     * @returns \r\n     */\r\n    protected sortRelativeMap(orderRenderTasks:string[], relativeMap:object, pendingIds?:object, sorttings?:string[]){\r\n        const pendingObj = pendingIds || Object.create(null);\r\n        let sorts:string[] = sorttings || [];\r\n        for (let id in relativeMap) {\r\n            if (pendingObj[id]) {\r\n                continue;\r\n            }\r\n            this.invokeSortRenderTasks(id, relativeMap, pendingObj, sorts);\r\n        }\r\n        let reverseList:string[] = sorts.reverse();\r\n        reverseList = reverseList.filter((taskId:string)=>{\r\n            return (orderRenderTasks.indexOf(taskId) != -1);\r\n        })\r\n        return reverseList;\r\n    }\r\n\r\n    /**\r\n     * waitRenderTask kết hợp với invokeSortRenderTasks tìm ra thứ tự relativeMap được sắp xếp cover toàn bộ các case render song song lẫn nối tiếp.\r\n     * @param ids \r\n     * @param relativeMap \r\n     * @param pendingIds \r\n     * @param sorttings \r\n     */\r\n    protected waitRenderTask(ids:string[], relativeMap:object, pendingIds?:object, sorttings?:string[]){\r\n        for (let ii:number = 0; ii < ids.length; ii++) {\r\n            let id = ids[ii];\r\n            if(pendingIds && pendingIds[id]){\r\n                continue;\r\n            }\r\n            this.invokeSortRenderTasks(id, relativeMap, pendingIds, sorttings)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * invokeSortRenderTasks kết hợp với waitRenderTask tìm ra thứ tự relativeMap được sắp xếp cover toàn bộ các case render song song lẫn nối tiếp.\r\n     * @param id \r\n     * @param relativeMap \r\n     * @param pendingIds \r\n     * @param sorttings \r\n     */\r\n    protected invokeSortRenderTasks(id:string, relativeMap:object, pendingIds?:object, sorttings?:string[]){\r\n        pendingIds[id] = true;\r\n        const rightIds:string[] = relativeMap[id];        \r\n        if(rightIds && rightIds.length){\r\n            this.waitRenderTask(rightIds, relativeMap, pendingIds, sorttings);\r\n        }\r\n        sorttings.push(id);\r\n    }\r\n\r\n    // ---------------\r\n    /**\r\n     * \r\n     */\r\n    protected _stopRendering(sharedData?:any, capturedAction?:Action){\r\n        // DEBUG && (GAMIFY_LOGS || GAMIFY_RENDER_LOGS) && \r\n        DEBUG && (GAMIFY_LOGS || GAMIFY_RENDER_LOGS) && log('> STOP ALL RENDER ------------------ ' + capturedAction.type);\r\n        // Chi co duy nhat completedAllRender cua GamifyComponent render dau tien duoc goi.\r\n        const actionType:string = capturedAction.type;\r\n        const renderTask:RenderTask = this.getRenderTask(actionType);\r\n        const compltedHandlers:Function[] = renderTask.callbacks;\r\n        // const completedFunc:Function = compltedHandlers.shift();\r\n        // if(completedFunc) {completedFunc(sharedData, capturedAction);}\r\n        while(compltedHandlers.length){\r\n            const completedFunc:Function = compltedHandlers.shift();\r\n            if(completedFunc) {completedFunc(sharedData, capturedAction);}\r\n        }\r\n        // this._renderMap.delete(actionType)\r\n        // \r\n        // while(this._completedRenderTasks.length){\r\n        //     let completedFunc:Function = this._completedRenderTasks.shift();\r\n        //     if(completedFunc) {completedFunc();}\r\n        // }\r\n        this._isRendering = false;\r\n    }\r\n\r\n   \r\n    //----------------- Override ----------------\r\n\r\n        \r\n    /**\r\n     * \r\n     * @param action \r\n     */\r\n    protected _startDispatching(action:Action) {        \r\n        // this._relativeMap = Object.create(null);\r\n        this._orderTasks = new Array<string>();\r\n        // this._renderTasks = Object.create(null);\r\n        super._startDispatching(action);\r\n    }\r\n\r\n\r\n    /**\r\n     * Added: allow calling callbacks when loop errors are encountered.\r\n     * (Bổ sung: cho phép gọi lại các callback khi gặp lỗi vòng lặp.)\r\n     * @internal\r\n     */\r\n    protected _invokeCallback(id:string) {        \r\n        // this._selectedId = id;                   \r\n        super._invokeCallback(id);        \r\n        DEBUG && (GAMIFY_DATA_LOGS || GAMIFY_LOGS) && log('>>>>> REDUCE STORE: Invoke callback from ' + this.findMapName(id) + '---------');\r\n        if(this._isPending[id]) {\r\n            this._orderTasks.push(id);\r\n        }\r\n    }\r\n\r\n    \r\n    /**\r\n     * Hàm tự động được gọi khi luồng dữ liệu kết thúc.\r\n     */\r\n    protected _stopDispatching() {\r\n        const capturedAction:Action = this._pendingAction as Action;\r\n        const actionType:string = capturedAction.type;\r\n        const renderTask:RenderTask = this.getRenderTask(actionType);        \r\n        super._stopDispatching();\r\n        this._startRendering(renderTask.map, renderTask.tasks, capturedAction as Action, renderTask.pending);\r\n        // this._renderTasks = null;\r\n        // this._relativeMap = null;\r\n        this._orderTasks = null;\r\n    }\r\n\r\n    \r\n    /**\r\n     * Thay đổi thông báo từ error sang warnning khi xử lý lỗi khi gặp vòng lặp dữ liệu.\r\n     * @param id \r\n     */\r\n    protected __detectCircleLoop(id:string){\r\n        if(!this._isHandled[id]){\r\n            this._isPending[id] = false;\r\n            if(DEBUG && GAMIFY_WARNNING) { \r\n                let selectedName:string = this.findMapName(this._penddingId);\r\n                let secondName:string = this.findMapName(id);\r\n                warn( this.__ccClassName + '.waitFor(...): Detect circular loop error (A waits for B, B waits for A) when ' + selectedName + ' calls ' + secondName );\r\n                warn( '(' + this.__ccClassName + '.waitFor(...): Phát hiện lỗi lặp vòng tròn (A đợi B, B đợi A) khi ' + selectedName + ' gọi vào ' + secondName + ')');\r\n                warn( selectedName + ' used old state of ' + secondName);                \r\n                warn( '('+selectedName + ' đã sử dụng state cũ của ' + secondName + ')');\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     */\r\n    destroy(){\r\n        // this._completedRenderTasks = null;\r\n        this._renderMap = null;\r\n        // this._renderTasks = null;\r\n        this._orderTasks = null;       \r\n        // this._relativeMap = null;\r\n        super.destroy();\r\n    }\r\n\r\n}\r\n\r\n","\r\nimport { _decorator, Component, Node, log } from 'cc';\r\nimport { DEBUG } from 'cc/env';\r\nimport { Action } from '../core/Action';\r\nimport { IRenderQueueDispatcher } from '../interfaces/IDispatcher';\r\nimport { FunctionTask, RelativeMap, RenderTask } from '../types/GamifyType';\r\nimport { Helper } from '../utils/Helper';\r\nimport { GAMIFY_LOGS, GAMIFY_RENDER_LOGS } from '../utils/Setting';\r\nimport { RenderOrderDispatcher } from './RenderOrderDispatcher';\r\nconst { ccclass } = _decorator;\r\n\r\n/**\r\n * \r\n */\r\n@ccclass('RenderQueueDispatcher')\r\nexport class RenderQueueDispatcher extends RenderOrderDispatcher implements IRenderQueueDispatcher {\r\n\r\n    protected _nullObject:object = Object.create(null);\r\n\r\n    private _renderQueueTasks:Function[] = [];\r\n\r\n    protected _pauseRendering:boolean = false;\r\n\r\n    /**\r\n    *\r\n    */\r\n    constructor(id:string) {\r\n        super(id);       \r\n    }\r\n    \r\n    /**\r\n     * \r\n     * @param relativeMap \r\n     * @param renderTasks \r\n     */\r\n    protected _startRendering(relativeMap:RelativeMap, renderTasks:FunctionTask, capturedAction?:Action, pendingTasks?:Set<string>){\r\n        \r\n        if(renderTasks && relativeMap \r\n            && !Helper.areEqual(renderTasks,this._nullObject)\r\n            && !Helper.areEqual(relativeMap,this._nullObject)){\r\n            // \r\n            if(this.isRendering() || this._pauseRendering){\r\n                // \r\n                if(!this._renderQueueTasks){\r\n                    this._renderQueueTasks = [];\r\n                }\r\n                // \r\n                this._renderQueueTasks.push(super._startRendering.bind(this, relativeMap, renderTasks, capturedAction, pendingTasks));\r\n                DEBUG && (GAMIFY_RENDER_LOGS || GAMIFY_LOGS) && log('> QUEUED RENDER :: ' + capturedAction.type);\r\n                // \r\n            }else{                \r\n                DEBUG && (GAMIFY_RENDER_LOGS || GAMIFY_LOGS) && log('> RENDERING :: ' + capturedAction.type);\r\n                super._startRendering(relativeMap, renderTasks, capturedAction, pendingTasks)\r\n            }\r\n        }else{\r\n            // this.renderQueuTasks();\r\n            // log('There is no render for action \\\"' + capturedAction?.type + '\\\" sender: ' + capturedAction.sender + ' reciever: ' + capturedAction.receiver)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param sharedData \r\n     * @param capturedAction \r\n     */\r\n    protected _stopRendering(sharedData?:any, capturedAction?:Action){\r\n        super._stopRendering(sharedData, capturedAction);\r\n        this.renderQueuTasks();\r\n    }\r\n\r\n    // protected _dispatchQueueActions(){\r\n    //     if(!this._isRendering){\r\n    //         super._dispatchQueueActions();\r\n    //     }\r\n    // }\r\n\r\n    /**\r\n     * Trì hoãn việc rendering. mọi task được đưa vào queue.\r\n     * @param status \r\n     */\r\n    public pauseRendering(status:boolean = true){\r\n        this._pauseRendering = status;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    public renderQueuTasks(){\r\n        if(this._renderQueueTasks && this._renderQueueTasks.length){\r\n            DEBUG && (GAMIFY_LOGS || GAMIFY_RENDER_LOGS) && log('>> GET QUEUED RENDER ');\r\n            // let task:Function = this._renderQueueTasks.shift();\r\n            let task:Function = this._renderQueueTasks.pop();\r\n            task();\r\n        }else{\r\n            // Render xong tiep tuc dispatch cac action khac.\r\n            // this._dispatchQueueActions();\r\n            DEBUG && (GAMIFY_LOGS || GAMIFY_RENDER_LOGS) && log('Không có render queue.');\r\n            // this._renderMap.forEach((renderTask:RenderTask, actionType:string, map:Map<string,RenderTask>)=>{\r\n            //     if(renderTask.pending.size == 0){\r\n            //         map.delete(actionType);\r\n            //     }\r\n            // })\r\n        }\r\n    }\r\n\r\n    // public addQueueTasks(relativeMap:RenderMap, renderTasks:FunctionTask){\r\n    //     if(!this._renderQueueTasks){\r\n    //         this._renderQueueTasks = [];\r\n    //     }\r\n        \r\n    //     this._renderQueueTasks.push(()=>{\r\n    //         let savedRelativeMap:RenderMap = relativeMap;\r\n    //         let savedRenderTasks:FunctionTask = renderTasks;\r\n    //         super._startRendering(savedRelativeMap, savedRenderTasks);\r\n    //     });\r\n    //     DEBUG && GAMIFY_LOGS && log('> QUEUED RENDER');\r\n    // }\r\n\r\n}\r\n\r\n","export { _AsyncGenerator as AsyncGenerator, _OverloadYield as OverloadYield, _applyDecs as applyDecs, _applyDecs2203 as applyDecs2203, _applyDecs2203R as applyDecs2203R, _applyDecs2301 as applyDecs2301, _applyDecs2305 as applyDecs2305, _asyncGeneratorDelegate as asyncGeneratorDelegate, _asyncIterator as asyncIterator, _awaitAsyncGenerator as awaitAsyncGenerator, _checkInRHS as checkInRHS, _defineAccessor as defineAccessor, _dispose as dispose, _iterableToArrayLimit as iterableToArrayLimit, _iterableToArrayLimitLoose as iterableToArrayLimitLoose, _jsx as jsx, _objectSpread2 as objectSpread2, _regeneratorRuntime as regeneratorRuntime, _typeof as typeof, _using as using, _wrapRegExp as wrapRegExp, _AwaitValue as AwaitValue, _wrapAsyncGenerator as wrapAsyncGenerator, _asyncToGenerator as asyncToGenerator, _classCallCheck as classCallCheck, _createClass as createClass, _defineEnumerableProperties as defineEnumerableProperties, _defaults as defaults, _defineProperty as defineProperty, _extends as extends, _objectSpread as objectSpread, _inherits as inherits, _inheritsLoose as inheritsLoose, _getPrototypeOf as getPrototypeOf, _setPrototypeOf as setPrototypeOf, _isNativeReflectConstruct as isNativeReflectConstruct, _construct as construct, _isNativeFunction as isNativeFunction, _wrapNativeSuper as wrapNativeSuper, _instanceof as instanceof, _interopRequireDefault as interopRequireDefault, _interopRequireWildcard as interopRequireWildcard, _newArrowCheck as newArrowCheck, _objectDestructuringEmpty as objectDestructuringEmpty, _objectWithoutPropertiesLoose as objectWithoutPropertiesLoose, _objectWithoutProperties as objectWithoutProperties, _assertThisInitialized as assertThisInitialized, _possibleConstructorReturn as possibleConstructorReturn, _createSuper as createSuper, _superPropBase as superPropBase, _get as get, _set as set, _taggedTemplateLiteral as taggedTemplateLiteral, _taggedTemplateLiteralLoose as taggedTemplateLiteralLoose, _readOnlyError as readOnlyError, _writeOnlyError as writeOnlyError, _classNameTDZError as classNameTDZError, _temporalUndefined as temporalUndefined, _tdz as tdz, _temporalRef as temporalRef, _slicedToArray as slicedToArray, _slicedToArrayLoose as slicedToArrayLoose, _toArray as toArray, _toConsumableArray as toConsumableArray, _arrayWithoutHoles as arrayWithoutHoles, _arrayWithHoles as arrayWithHoles, _maybeArrayLike as maybeArrayLike, _iterableToArray as iterableToArray, _unsupportedIterableToArray as unsupportedIterableToArray, _arrayLikeToArray as arrayLikeToArray, _nonIterableSpread as nonIterableSpread, _nonIterableRest as nonIterableRest, _createForOfIteratorHelper as createForOfIteratorHelper, _createForOfIteratorHelperLoose as createForOfIteratorHelperLoose, _skipFirstGeneratorNext as skipFirstGeneratorNext, _toPrimitive as toPrimitive, _toPropertyKey as toPropertyKey, _initializerWarningHelper as initializerWarningHelper, _initializerDefineProperty as initializerDefineProperty, _applyDecoratedDescriptor as applyDecoratedDescriptor, _classPrivateFieldLooseKey as classPrivateFieldLooseKey, _classPrivateFieldLooseBase as classPrivateFieldLooseBase, _classPrivateFieldGet as classPrivateFieldGet, _classPrivateFieldSet as classPrivateFieldSet, _classPrivateFieldDestructureSet as classPrivateFieldDestructureSet, _classExtractFieldDescriptor as classExtractFieldDescriptor, _classStaticPrivateFieldSpecGet as classStaticPrivateFieldSpecGet, _classStaticPrivateFieldSpecSet as classStaticPrivateFieldSpecSet, _classStaticPrivateMethodGet as classStaticPrivateMethodGet, _classStaticPrivateMethodSet as classStaticPrivateMethodSet, _classApplyDescriptorGet as classApplyDescriptorGet, _classApplyDescriptorSet as classApplyDescriptorSet, _classApplyDescriptorDestructureSet as classApplyDescriptorDestructureSet, _classStaticPrivateFieldDestructureSet as classStaticPrivateFieldDestructureSet, _classCheckPrivateStaticAccess as classCheckPrivateStaticAccess, _classCheckPrivateStaticFieldDescriptor as classCheckPrivateStaticFieldDescriptor, _decorate as decorate, _classPrivateMethodGet as classPrivateMethodGet, _checkPrivateRedeclaration as checkPrivateRedeclaration, _classPrivateFieldInitSpec as classPrivateFieldInitSpec, _classPrivateMethodInitSpec as classPrivateMethodInitSpec, _classPrivateMethodSet as classPrivateMethodSet, _identity as identity };\nfunction _AsyncGenerator(gen) {\n  var front, back;\n  function resume(key, arg) {\n    try {\n      var result = gen[key](arg),\n        value = result.value,\n        overloaded = value instanceof _OverloadYield;\n      Promise.resolve(overloaded ? value.v : value).then(function (arg) {\n        if (overloaded) {\n          var nextKey = \"return\" === key ? \"return\" : \"next\";\n          if (!value.k || arg.done) return resume(nextKey, arg);\n          arg = gen[nextKey](arg).value;\n        }\n        settle(result.done ? \"return\" : \"normal\", arg);\n      }, function (err) {\n        resume(\"throw\", err);\n      });\n    } catch (err) {\n      settle(\"throw\", err);\n    }\n  }\n  function settle(type, value) {\n    switch (type) {\n      case \"return\":\n        front.resolve({\n          value: value,\n          done: !0\n        });\n        break;\n      case \"throw\":\n        front.reject(value);\n        break;\n      default:\n        front.resolve({\n          value: value,\n          done: !1\n        });\n    }\n    (front = front.next) ? resume(front.key, front.arg) : back = null;\n  }\n  this._invoke = function (key, arg) {\n    return new Promise(function (resolve, reject) {\n      var request = {\n        key: key,\n        arg: arg,\n        resolve: resolve,\n        reject: reject,\n        next: null\n      };\n      back ? back = back.next = request : (front = back = request, resume(key, arg));\n    });\n  }, \"function\" != typeof gen.return && (this.return = void 0);\n}\n_AsyncGenerator.prototype[\"function\" == typeof Symbol && Symbol.asyncIterator || \"@@asyncIterator\"] = function () {\n  return this;\n}, _AsyncGenerator.prototype.next = function (arg) {\n  return this._invoke(\"next\", arg);\n}, _AsyncGenerator.prototype.throw = function (arg) {\n  return this._invoke(\"throw\", arg);\n}, _AsyncGenerator.prototype.return = function (arg) {\n  return this._invoke(\"return\", arg);\n};\nfunction _OverloadYield(value, kind) {\n  this.v = value, this.k = kind;\n}\nfunction old_createMetadataMethodsForProperty(metadataMap, kind, property, decoratorFinishedRef) {\n  return {\n    getMetadata: function (key) {\n      old_assertNotFinished(decoratorFinishedRef, \"getMetadata\"), old_assertMetadataKey(key);\n      var metadataForKey = metadataMap[key];\n      if (void 0 !== metadataForKey) if (1 === kind) {\n        var pub = metadataForKey.public;\n        if (void 0 !== pub) return pub[property];\n      } else if (2 === kind) {\n        var priv = metadataForKey.private;\n        if (void 0 !== priv) return priv.get(property);\n      } else if (Object.hasOwnProperty.call(metadataForKey, \"constructor\")) return metadataForKey.constructor;\n    },\n    setMetadata: function (key, value) {\n      old_assertNotFinished(decoratorFinishedRef, \"setMetadata\"), old_assertMetadataKey(key);\n      var metadataForKey = metadataMap[key];\n      if (void 0 === metadataForKey && (metadataForKey = metadataMap[key] = {}), 1 === kind) {\n        var pub = metadataForKey.public;\n        void 0 === pub && (pub = metadataForKey.public = {}), pub[property] = value;\n      } else if (2 === kind) {\n        var priv = metadataForKey.priv;\n        void 0 === priv && (priv = metadataForKey.private = new Map()), priv.set(property, value);\n      } else metadataForKey.constructor = value;\n    }\n  };\n}\nfunction old_convertMetadataMapToFinal(obj, metadataMap) {\n  var parentMetadataMap = obj[Symbol.metadata || Symbol.for(\"Symbol.metadata\")],\n    metadataKeys = Object.getOwnPropertySymbols(metadataMap);\n  if (0 !== metadataKeys.length) {\n    for (var i = 0; i < metadataKeys.length; i++) {\n      var key = metadataKeys[i],\n        metaForKey = metadataMap[key],\n        parentMetaForKey = parentMetadataMap ? parentMetadataMap[key] : null,\n        pub = metaForKey.public,\n        parentPub = parentMetaForKey ? parentMetaForKey.public : null;\n      pub && parentPub && Object.setPrototypeOf(pub, parentPub);\n      var priv = metaForKey.private;\n      if (priv) {\n        var privArr = Array.from(priv.values()),\n          parentPriv = parentMetaForKey ? parentMetaForKey.private : null;\n        parentPriv && (privArr = privArr.concat(parentPriv)), metaForKey.private = privArr;\n      }\n      parentMetaForKey && Object.setPrototypeOf(metaForKey, parentMetaForKey);\n    }\n    parentMetadataMap && Object.setPrototypeOf(metadataMap, parentMetadataMap), obj[Symbol.metadata || Symbol.for(\"Symbol.metadata\")] = metadataMap;\n  }\n}\nfunction old_createAddInitializerMethod(initializers, decoratorFinishedRef) {\n  return function (initializer) {\n    old_assertNotFinished(decoratorFinishedRef, \"addInitializer\"), old_assertCallable(initializer, \"An initializer\"), initializers.push(initializer);\n  };\n}\nfunction old_memberDec(dec, name, desc, metadataMap, initializers, kind, isStatic, isPrivate, value) {\n  var kindStr;\n  switch (kind) {\n    case 1:\n      kindStr = \"accessor\";\n      break;\n    case 2:\n      kindStr = \"method\";\n      break;\n    case 3:\n      kindStr = \"getter\";\n      break;\n    case 4:\n      kindStr = \"setter\";\n      break;\n    default:\n      kindStr = \"field\";\n  }\n  var metadataKind,\n    metadataName,\n    ctx = {\n      kind: kindStr,\n      name: isPrivate ? \"#\" + name : name,\n      isStatic: isStatic,\n      isPrivate: isPrivate\n    },\n    decoratorFinishedRef = {\n      v: !1\n    };\n  if (0 !== kind && (ctx.addInitializer = old_createAddInitializerMethod(initializers, decoratorFinishedRef)), isPrivate) {\n    metadataKind = 2, metadataName = Symbol(name);\n    var access = {};\n    0 === kind ? (access.get = desc.get, access.set = desc.set) : 2 === kind ? access.get = function () {\n      return desc.value;\n    } : (1 !== kind && 3 !== kind || (access.get = function () {\n      return desc.get.call(this);\n    }), 1 !== kind && 4 !== kind || (access.set = function (v) {\n      desc.set.call(this, v);\n    })), ctx.access = access;\n  } else metadataKind = 1, metadataName = name;\n  try {\n    return dec(value, Object.assign(ctx, old_createMetadataMethodsForProperty(metadataMap, metadataKind, metadataName, decoratorFinishedRef)));\n  } finally {\n    decoratorFinishedRef.v = !0;\n  }\n}\nfunction old_assertNotFinished(decoratorFinishedRef, fnName) {\n  if (decoratorFinishedRef.v) throw new Error(\"attempted to call \" + fnName + \" after decoration was finished\");\n}\nfunction old_assertMetadataKey(key) {\n  if (\"symbol\" != typeof key) throw new TypeError(\"Metadata keys must be symbols, received: \" + key);\n}\nfunction old_assertCallable(fn, hint) {\n  if (\"function\" != typeof fn) throw new TypeError(hint + \" must be a function\");\n}\nfunction old_assertValidReturnValue(kind, value) {\n  var type = typeof value;\n  if (1 === kind) {\n    if (\"object\" !== type || null === value) throw new TypeError(\"accessor decorators must return an object with get, set, or init properties or void 0\");\n    void 0 !== value.get && old_assertCallable(value.get, \"accessor.get\"), void 0 !== value.set && old_assertCallable(value.set, \"accessor.set\"), void 0 !== value.init && old_assertCallable(value.init, \"accessor.init\"), void 0 !== value.initializer && old_assertCallable(value.initializer, \"accessor.initializer\");\n  } else if (\"function\" !== type) {\n    var hint;\n    throw hint = 0 === kind ? \"field\" : 10 === kind ? \"class\" : \"method\", new TypeError(hint + \" decorators must return a function or void 0\");\n  }\n}\nfunction old_getInit(desc) {\n  var initializer;\n  return null == (initializer = desc.init) && (initializer = desc.initializer) && \"undefined\" != typeof console && console.warn(\".initializer has been renamed to .init as of March 2022\"), initializer;\n}\nfunction old_applyMemberDec(ret, base, decInfo, name, kind, isStatic, isPrivate, metadataMap, initializers) {\n  var desc,\n    initializer,\n    value,\n    newValue,\n    get,\n    set,\n    decs = decInfo[0];\n  if (isPrivate ? desc = 0 === kind || 1 === kind ? {\n    get: decInfo[3],\n    set: decInfo[4]\n  } : 3 === kind ? {\n    get: decInfo[3]\n  } : 4 === kind ? {\n    set: decInfo[3]\n  } : {\n    value: decInfo[3]\n  } : 0 !== kind && (desc = Object.getOwnPropertyDescriptor(base, name)), 1 === kind ? value = {\n    get: desc.get,\n    set: desc.set\n  } : 2 === kind ? value = desc.value : 3 === kind ? value = desc.get : 4 === kind && (value = desc.set), \"function\" == typeof decs) void 0 !== (newValue = old_memberDec(decs, name, desc, metadataMap, initializers, kind, isStatic, isPrivate, value)) && (old_assertValidReturnValue(kind, newValue), 0 === kind ? initializer = newValue : 1 === kind ? (initializer = old_getInit(newValue), get = newValue.get || value.get, set = newValue.set || value.set, value = {\n    get: get,\n    set: set\n  }) : value = newValue);else for (var i = decs.length - 1; i >= 0; i--) {\n    var newInit;\n    if (void 0 !== (newValue = old_memberDec(decs[i], name, desc, metadataMap, initializers, kind, isStatic, isPrivate, value))) old_assertValidReturnValue(kind, newValue), 0 === kind ? newInit = newValue : 1 === kind ? (newInit = old_getInit(newValue), get = newValue.get || value.get, set = newValue.set || value.set, value = {\n      get: get,\n      set: set\n    }) : value = newValue, void 0 !== newInit && (void 0 === initializer ? initializer = newInit : \"function\" == typeof initializer ? initializer = [initializer, newInit] : initializer.push(newInit));\n  }\n  if (0 === kind || 1 === kind) {\n    if (void 0 === initializer) initializer = function (instance, init) {\n      return init;\n    };else if (\"function\" != typeof initializer) {\n      var ownInitializers = initializer;\n      initializer = function (instance, init) {\n        for (var value = init, i = 0; i < ownInitializers.length; i++) value = ownInitializers[i].call(instance, value);\n        return value;\n      };\n    } else {\n      var originalInitializer = initializer;\n      initializer = function (instance, init) {\n        return originalInitializer.call(instance, init);\n      };\n    }\n    ret.push(initializer);\n  }\n  0 !== kind && (1 === kind ? (desc.get = value.get, desc.set = value.set) : 2 === kind ? desc.value = value : 3 === kind ? desc.get = value : 4 === kind && (desc.set = value), isPrivate ? 1 === kind ? (ret.push(function (instance, args) {\n    return value.get.call(instance, args);\n  }), ret.push(function (instance, args) {\n    return value.set.call(instance, args);\n  })) : 2 === kind ? ret.push(value) : ret.push(function (instance, args) {\n    return value.call(instance, args);\n  }) : Object.defineProperty(base, name, desc));\n}\nfunction old_applyMemberDecs(ret, Class, protoMetadataMap, staticMetadataMap, decInfos) {\n  for (var protoInitializers, staticInitializers, existingProtoNonFields = new Map(), existingStaticNonFields = new Map(), i = 0; i < decInfos.length; i++) {\n    var decInfo = decInfos[i];\n    if (Array.isArray(decInfo)) {\n      var base,\n        metadataMap,\n        initializers,\n        kind = decInfo[1],\n        name = decInfo[2],\n        isPrivate = decInfo.length > 3,\n        isStatic = kind >= 5;\n      if (isStatic ? (base = Class, metadataMap = staticMetadataMap, 0 !== (kind -= 5) && (initializers = staticInitializers = staticInitializers || [])) : (base = Class.prototype, metadataMap = protoMetadataMap, 0 !== kind && (initializers = protoInitializers = protoInitializers || [])), 0 !== kind && !isPrivate) {\n        var existingNonFields = isStatic ? existingStaticNonFields : existingProtoNonFields,\n          existingKind = existingNonFields.get(name) || 0;\n        if (!0 === existingKind || 3 === existingKind && 4 !== kind || 4 === existingKind && 3 !== kind) throw new Error(\"Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not currently supported by the decorators plugin. Property name was: \" + name);\n        !existingKind && kind > 2 ? existingNonFields.set(name, kind) : existingNonFields.set(name, !0);\n      }\n      old_applyMemberDec(ret, base, decInfo, name, kind, isStatic, isPrivate, metadataMap, initializers);\n    }\n  }\n  old_pushInitializers(ret, protoInitializers), old_pushInitializers(ret, staticInitializers);\n}\nfunction old_pushInitializers(ret, initializers) {\n  initializers && ret.push(function (instance) {\n    for (var i = 0; i < initializers.length; i++) initializers[i].call(instance);\n    return instance;\n  });\n}\nfunction old_applyClassDecs(ret, targetClass, metadataMap, classDecs) {\n  if (classDecs.length > 0) {\n    for (var initializers = [], newClass = targetClass, name = targetClass.name, i = classDecs.length - 1; i >= 0; i--) {\n      var decoratorFinishedRef = {\n        v: !1\n      };\n      try {\n        var ctx = Object.assign({\n            kind: \"class\",\n            name: name,\n            addInitializer: old_createAddInitializerMethod(initializers, decoratorFinishedRef)\n          }, old_createMetadataMethodsForProperty(metadataMap, 0, name, decoratorFinishedRef)),\n          nextNewClass = classDecs[i](newClass, ctx);\n      } finally {\n        decoratorFinishedRef.v = !0;\n      }\n      void 0 !== nextNewClass && (old_assertValidReturnValue(10, nextNewClass), newClass = nextNewClass);\n    }\n    ret.push(newClass, function () {\n      for (var i = 0; i < initializers.length; i++) initializers[i].call(newClass);\n    });\n  }\n}\nfunction _applyDecs(targetClass, memberDecs, classDecs) {\n  var ret = [],\n    staticMetadataMap = {},\n    protoMetadataMap = {};\n  return old_applyMemberDecs(ret, targetClass, protoMetadataMap, staticMetadataMap, memberDecs), old_convertMetadataMapToFinal(targetClass.prototype, protoMetadataMap), old_applyClassDecs(ret, targetClass, staticMetadataMap, classDecs), old_convertMetadataMapToFinal(targetClass, staticMetadataMap), ret;\n}\nfunction applyDecs2203Factory() {\n  function createAddInitializerMethod(initializers, decoratorFinishedRef) {\n    return function (initializer) {\n      !function (decoratorFinishedRef, fnName) {\n        if (decoratorFinishedRef.v) throw new Error(\"attempted to call \" + fnName + \" after decoration was finished\");\n      }(decoratorFinishedRef, \"addInitializer\"), assertCallable(initializer, \"An initializer\"), initializers.push(initializer);\n    };\n  }\n  function memberDec(dec, name, desc, initializers, kind, isStatic, isPrivate, value) {\n    var kindStr;\n    switch (kind) {\n      case 1:\n        kindStr = \"accessor\";\n        break;\n      case 2:\n        kindStr = \"method\";\n        break;\n      case 3:\n        kindStr = \"getter\";\n        break;\n      case 4:\n        kindStr = \"setter\";\n        break;\n      default:\n        kindStr = \"field\";\n    }\n    var get,\n      set,\n      ctx = {\n        kind: kindStr,\n        name: isPrivate ? \"#\" + name : name,\n        static: isStatic,\n        private: isPrivate\n      },\n      decoratorFinishedRef = {\n        v: !1\n      };\n    0 !== kind && (ctx.addInitializer = createAddInitializerMethod(initializers, decoratorFinishedRef)), 0 === kind ? isPrivate ? (get = desc.get, set = desc.set) : (get = function () {\n      return this[name];\n    }, set = function (v) {\n      this[name] = v;\n    }) : 2 === kind ? get = function () {\n      return desc.value;\n    } : (1 !== kind && 3 !== kind || (get = function () {\n      return desc.get.call(this);\n    }), 1 !== kind && 4 !== kind || (set = function (v) {\n      desc.set.call(this, v);\n    })), ctx.access = get && set ? {\n      get: get,\n      set: set\n    } : get ? {\n      get: get\n    } : {\n      set: set\n    };\n    try {\n      return dec(value, ctx);\n    } finally {\n      decoratorFinishedRef.v = !0;\n    }\n  }\n  function assertCallable(fn, hint) {\n    if (\"function\" != typeof fn) throw new TypeError(hint + \" must be a function\");\n  }\n  function assertValidReturnValue(kind, value) {\n    var type = typeof value;\n    if (1 === kind) {\n      if (\"object\" !== type || null === value) throw new TypeError(\"accessor decorators must return an object with get, set, or init properties or void 0\");\n      void 0 !== value.get && assertCallable(value.get, \"accessor.get\"), void 0 !== value.set && assertCallable(value.set, \"accessor.set\"), void 0 !== value.init && assertCallable(value.init, \"accessor.init\");\n    } else if (\"function\" !== type) {\n      var hint;\n      throw hint = 0 === kind ? \"field\" : 10 === kind ? \"class\" : \"method\", new TypeError(hint + \" decorators must return a function or void 0\");\n    }\n  }\n  function applyMemberDec(ret, base, decInfo, name, kind, isStatic, isPrivate, initializers) {\n    var desc,\n      init,\n      value,\n      newValue,\n      get,\n      set,\n      decs = decInfo[0];\n    if (isPrivate ? desc = 0 === kind || 1 === kind ? {\n      get: decInfo[3],\n      set: decInfo[4]\n    } : 3 === kind ? {\n      get: decInfo[3]\n    } : 4 === kind ? {\n      set: decInfo[3]\n    } : {\n      value: decInfo[3]\n    } : 0 !== kind && (desc = Object.getOwnPropertyDescriptor(base, name)), 1 === kind ? value = {\n      get: desc.get,\n      set: desc.set\n    } : 2 === kind ? value = desc.value : 3 === kind ? value = desc.get : 4 === kind && (value = desc.set), \"function\" == typeof decs) void 0 !== (newValue = memberDec(decs, name, desc, initializers, kind, isStatic, isPrivate, value)) && (assertValidReturnValue(kind, newValue), 0 === kind ? init = newValue : 1 === kind ? (init = newValue.init, get = newValue.get || value.get, set = newValue.set || value.set, value = {\n      get: get,\n      set: set\n    }) : value = newValue);else for (var i = decs.length - 1; i >= 0; i--) {\n      var newInit;\n      if (void 0 !== (newValue = memberDec(decs[i], name, desc, initializers, kind, isStatic, isPrivate, value))) assertValidReturnValue(kind, newValue), 0 === kind ? newInit = newValue : 1 === kind ? (newInit = newValue.init, get = newValue.get || value.get, set = newValue.set || value.set, value = {\n        get: get,\n        set: set\n      }) : value = newValue, void 0 !== newInit && (void 0 === init ? init = newInit : \"function\" == typeof init ? init = [init, newInit] : init.push(newInit));\n    }\n    if (0 === kind || 1 === kind) {\n      if (void 0 === init) init = function (instance, init) {\n        return init;\n      };else if (\"function\" != typeof init) {\n        var ownInitializers = init;\n        init = function (instance, init) {\n          for (var value = init, i = 0; i < ownInitializers.length; i++) value = ownInitializers[i].call(instance, value);\n          return value;\n        };\n      } else {\n        var originalInitializer = init;\n        init = function (instance, init) {\n          return originalInitializer.call(instance, init);\n        };\n      }\n      ret.push(init);\n    }\n    0 !== kind && (1 === kind ? (desc.get = value.get, desc.set = value.set) : 2 === kind ? desc.value = value : 3 === kind ? desc.get = value : 4 === kind && (desc.set = value), isPrivate ? 1 === kind ? (ret.push(function (instance, args) {\n      return value.get.call(instance, args);\n    }), ret.push(function (instance, args) {\n      return value.set.call(instance, args);\n    })) : 2 === kind ? ret.push(value) : ret.push(function (instance, args) {\n      return value.call(instance, args);\n    }) : Object.defineProperty(base, name, desc));\n  }\n  function pushInitializers(ret, initializers) {\n    initializers && ret.push(function (instance) {\n      for (var i = 0; i < initializers.length; i++) initializers[i].call(instance);\n      return instance;\n    });\n  }\n  return function (targetClass, memberDecs, classDecs) {\n    var ret = [];\n    return function (ret, Class, decInfos) {\n      for (var protoInitializers, staticInitializers, existingProtoNonFields = new Map(), existingStaticNonFields = new Map(), i = 0; i < decInfos.length; i++) {\n        var decInfo = decInfos[i];\n        if (Array.isArray(decInfo)) {\n          var base,\n            initializers,\n            kind = decInfo[1],\n            name = decInfo[2],\n            isPrivate = decInfo.length > 3,\n            isStatic = kind >= 5;\n          if (isStatic ? (base = Class, 0 != (kind -= 5) && (initializers = staticInitializers = staticInitializers || [])) : (base = Class.prototype, 0 !== kind && (initializers = protoInitializers = protoInitializers || [])), 0 !== kind && !isPrivate) {\n            var existingNonFields = isStatic ? existingStaticNonFields : existingProtoNonFields,\n              existingKind = existingNonFields.get(name) || 0;\n            if (!0 === existingKind || 3 === existingKind && 4 !== kind || 4 === existingKind && 3 !== kind) throw new Error(\"Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not currently supported by the decorators plugin. Property name was: \" + name);\n            !existingKind && kind > 2 ? existingNonFields.set(name, kind) : existingNonFields.set(name, !0);\n          }\n          applyMemberDec(ret, base, decInfo, name, kind, isStatic, isPrivate, initializers);\n        }\n      }\n      pushInitializers(ret, protoInitializers), pushInitializers(ret, staticInitializers);\n    }(ret, targetClass, memberDecs), function (ret, targetClass, classDecs) {\n      if (classDecs.length > 0) {\n        for (var initializers = [], newClass = targetClass, name = targetClass.name, i = classDecs.length - 1; i >= 0; i--) {\n          var decoratorFinishedRef = {\n            v: !1\n          };\n          try {\n            var nextNewClass = classDecs[i](newClass, {\n              kind: \"class\",\n              name: name,\n              addInitializer: createAddInitializerMethod(initializers, decoratorFinishedRef)\n            });\n          } finally {\n            decoratorFinishedRef.v = !0;\n          }\n          void 0 !== nextNewClass && (assertValidReturnValue(10, nextNewClass), newClass = nextNewClass);\n        }\n        ret.push(newClass, function () {\n          for (var i = 0; i < initializers.length; i++) initializers[i].call(newClass);\n        });\n      }\n    }(ret, targetClass, classDecs), ret;\n  };\n}\nvar applyDecs2203Impl;\nfunction _applyDecs2203(targetClass, memberDecs, classDecs) {\n  return (applyDecs2203Impl = applyDecs2203Impl || applyDecs2203Factory())(targetClass, memberDecs, classDecs);\n}\nfunction applyDecs2203RFactory() {\n  function createAddInitializerMethod(initializers, decoratorFinishedRef) {\n    return function (initializer) {\n      !function (decoratorFinishedRef, fnName) {\n        if (decoratorFinishedRef.v) throw new Error(\"attempted to call \" + fnName + \" after decoration was finished\");\n      }(decoratorFinishedRef, \"addInitializer\"), assertCallable(initializer, \"An initializer\"), initializers.push(initializer);\n    };\n  }\n  function memberDec(dec, name, desc, initializers, kind, isStatic, isPrivate, value) {\n    var kindStr;\n    switch (kind) {\n      case 1:\n        kindStr = \"accessor\";\n        break;\n      case 2:\n        kindStr = \"method\";\n        break;\n      case 3:\n        kindStr = \"getter\";\n        break;\n      case 4:\n        kindStr = \"setter\";\n        break;\n      default:\n        kindStr = \"field\";\n    }\n    var get,\n      set,\n      ctx = {\n        kind: kindStr,\n        name: isPrivate ? \"#\" + name : name,\n        static: isStatic,\n        private: isPrivate\n      },\n      decoratorFinishedRef = {\n        v: !1\n      };\n    0 !== kind && (ctx.addInitializer = createAddInitializerMethod(initializers, decoratorFinishedRef)), 0 === kind ? isPrivate ? (get = desc.get, set = desc.set) : (get = function () {\n      return this[name];\n    }, set = function (v) {\n      this[name] = v;\n    }) : 2 === kind ? get = function () {\n      return desc.value;\n    } : (1 !== kind && 3 !== kind || (get = function () {\n      return desc.get.call(this);\n    }), 1 !== kind && 4 !== kind || (set = function (v) {\n      desc.set.call(this, v);\n    })), ctx.access = get && set ? {\n      get: get,\n      set: set\n    } : get ? {\n      get: get\n    } : {\n      set: set\n    };\n    try {\n      return dec(value, ctx);\n    } finally {\n      decoratorFinishedRef.v = !0;\n    }\n  }\n  function assertCallable(fn, hint) {\n    if (\"function\" != typeof fn) throw new TypeError(hint + \" must be a function\");\n  }\n  function assertValidReturnValue(kind, value) {\n    var type = typeof value;\n    if (1 === kind) {\n      if (\"object\" !== type || null === value) throw new TypeError(\"accessor decorators must return an object with get, set, or init properties or void 0\");\n      void 0 !== value.get && assertCallable(value.get, \"accessor.get\"), void 0 !== value.set && assertCallable(value.set, \"accessor.set\"), void 0 !== value.init && assertCallable(value.init, \"accessor.init\");\n    } else if (\"function\" !== type) {\n      var hint;\n      throw hint = 0 === kind ? \"field\" : 10 === kind ? \"class\" : \"method\", new TypeError(hint + \" decorators must return a function or void 0\");\n    }\n  }\n  function applyMemberDec(ret, base, decInfo, name, kind, isStatic, isPrivate, initializers) {\n    var desc,\n      init,\n      value,\n      newValue,\n      get,\n      set,\n      decs = decInfo[0];\n    if (isPrivate ? desc = 0 === kind || 1 === kind ? {\n      get: decInfo[3],\n      set: decInfo[4]\n    } : 3 === kind ? {\n      get: decInfo[3]\n    } : 4 === kind ? {\n      set: decInfo[3]\n    } : {\n      value: decInfo[3]\n    } : 0 !== kind && (desc = Object.getOwnPropertyDescriptor(base, name)), 1 === kind ? value = {\n      get: desc.get,\n      set: desc.set\n    } : 2 === kind ? value = desc.value : 3 === kind ? value = desc.get : 4 === kind && (value = desc.set), \"function\" == typeof decs) void 0 !== (newValue = memberDec(decs, name, desc, initializers, kind, isStatic, isPrivate, value)) && (assertValidReturnValue(kind, newValue), 0 === kind ? init = newValue : 1 === kind ? (init = newValue.init, get = newValue.get || value.get, set = newValue.set || value.set, value = {\n      get: get,\n      set: set\n    }) : value = newValue);else for (var i = decs.length - 1; i >= 0; i--) {\n      var newInit;\n      if (void 0 !== (newValue = memberDec(decs[i], name, desc, initializers, kind, isStatic, isPrivate, value))) assertValidReturnValue(kind, newValue), 0 === kind ? newInit = newValue : 1 === kind ? (newInit = newValue.init, get = newValue.get || value.get, set = newValue.set || value.set, value = {\n        get: get,\n        set: set\n      }) : value = newValue, void 0 !== newInit && (void 0 === init ? init = newInit : \"function\" == typeof init ? init = [init, newInit] : init.push(newInit));\n    }\n    if (0 === kind || 1 === kind) {\n      if (void 0 === init) init = function (instance, init) {\n        return init;\n      };else if (\"function\" != typeof init) {\n        var ownInitializers = init;\n        init = function (instance, init) {\n          for (var value = init, i = 0; i < ownInitializers.length; i++) value = ownInitializers[i].call(instance, value);\n          return value;\n        };\n      } else {\n        var originalInitializer = init;\n        init = function (instance, init) {\n          return originalInitializer.call(instance, init);\n        };\n      }\n      ret.push(init);\n    }\n    0 !== kind && (1 === kind ? (desc.get = value.get, desc.set = value.set) : 2 === kind ? desc.value = value : 3 === kind ? desc.get = value : 4 === kind && (desc.set = value), isPrivate ? 1 === kind ? (ret.push(function (instance, args) {\n      return value.get.call(instance, args);\n    }), ret.push(function (instance, args) {\n      return value.set.call(instance, args);\n    })) : 2 === kind ? ret.push(value) : ret.push(function (instance, args) {\n      return value.call(instance, args);\n    }) : Object.defineProperty(base, name, desc));\n  }\n  function applyMemberDecs(Class, decInfos) {\n    for (var protoInitializers, staticInitializers, ret = [], existingProtoNonFields = new Map(), existingStaticNonFields = new Map(), i = 0; i < decInfos.length; i++) {\n      var decInfo = decInfos[i];\n      if (Array.isArray(decInfo)) {\n        var base,\n          initializers,\n          kind = decInfo[1],\n          name = decInfo[2],\n          isPrivate = decInfo.length > 3,\n          isStatic = kind >= 5;\n        if (isStatic ? (base = Class, 0 !== (kind -= 5) && (initializers = staticInitializers = staticInitializers || [])) : (base = Class.prototype, 0 !== kind && (initializers = protoInitializers = protoInitializers || [])), 0 !== kind && !isPrivate) {\n          var existingNonFields = isStatic ? existingStaticNonFields : existingProtoNonFields,\n            existingKind = existingNonFields.get(name) || 0;\n          if (!0 === existingKind || 3 === existingKind && 4 !== kind || 4 === existingKind && 3 !== kind) throw new Error(\"Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not currently supported by the decorators plugin. Property name was: \" + name);\n          !existingKind && kind > 2 ? existingNonFields.set(name, kind) : existingNonFields.set(name, !0);\n        }\n        applyMemberDec(ret, base, decInfo, name, kind, isStatic, isPrivate, initializers);\n      }\n    }\n    return pushInitializers(ret, protoInitializers), pushInitializers(ret, staticInitializers), ret;\n  }\n  function pushInitializers(ret, initializers) {\n    initializers && ret.push(function (instance) {\n      for (var i = 0; i < initializers.length; i++) initializers[i].call(instance);\n      return instance;\n    });\n  }\n  return function (targetClass, memberDecs, classDecs) {\n    return {\n      e: applyMemberDecs(targetClass, memberDecs),\n      get c() {\n        return function (targetClass, classDecs) {\n          if (classDecs.length > 0) {\n            for (var initializers = [], newClass = targetClass, name = targetClass.name, i = classDecs.length - 1; i >= 0; i--) {\n              var decoratorFinishedRef = {\n                v: !1\n              };\n              try {\n                var nextNewClass = classDecs[i](newClass, {\n                  kind: \"class\",\n                  name: name,\n                  addInitializer: createAddInitializerMethod(initializers, decoratorFinishedRef)\n                });\n              } finally {\n                decoratorFinishedRef.v = !0;\n              }\n              void 0 !== nextNewClass && (assertValidReturnValue(10, nextNewClass), newClass = nextNewClass);\n            }\n            return [newClass, function () {\n              for (var i = 0; i < initializers.length; i++) initializers[i].call(newClass);\n            }];\n          }\n        }(targetClass, classDecs);\n      }\n    };\n  };\n}\nfunction _applyDecs2203R(targetClass, memberDecs, classDecs) {\n  return (_applyDecs2203R = applyDecs2203RFactory())(targetClass, memberDecs, classDecs);\n}\nfunction applyDecs2301Factory() {\n  function createAddInitializerMethod(initializers, decoratorFinishedRef) {\n    return function (initializer) {\n      !function (decoratorFinishedRef, fnName) {\n        if (decoratorFinishedRef.v) throw new Error(\"attempted to call \" + fnName + \" after decoration was finished\");\n      }(decoratorFinishedRef, \"addInitializer\"), assertCallable(initializer, \"An initializer\"), initializers.push(initializer);\n    };\n  }\n  function assertInstanceIfPrivate(has, target) {\n    if (!has(target)) throw new TypeError(\"Attempted to access private element on non-instance\");\n  }\n  function memberDec(dec, name, desc, initializers, kind, isStatic, isPrivate, value, hasPrivateBrand) {\n    var kindStr;\n    switch (kind) {\n      case 1:\n        kindStr = \"accessor\";\n        break;\n      case 2:\n        kindStr = \"method\";\n        break;\n      case 3:\n        kindStr = \"getter\";\n        break;\n      case 4:\n        kindStr = \"setter\";\n        break;\n      default:\n        kindStr = \"field\";\n    }\n    var get,\n      set,\n      ctx = {\n        kind: kindStr,\n        name: isPrivate ? \"#\" + name : name,\n        static: isStatic,\n        private: isPrivate\n      },\n      decoratorFinishedRef = {\n        v: !1\n      };\n    if (0 !== kind && (ctx.addInitializer = createAddInitializerMethod(initializers, decoratorFinishedRef)), isPrivate || 0 !== kind && 2 !== kind) {\n      if (2 === kind) get = function (target) {\n        return assertInstanceIfPrivate(hasPrivateBrand, target), desc.value;\n      };else {\n        var t = 0 === kind || 1 === kind;\n        (t || 3 === kind) && (get = isPrivate ? function (target) {\n          return assertInstanceIfPrivate(hasPrivateBrand, target), desc.get.call(target);\n        } : function (target) {\n          return desc.get.call(target);\n        }), (t || 4 === kind) && (set = isPrivate ? function (target, value) {\n          assertInstanceIfPrivate(hasPrivateBrand, target), desc.set.call(target, value);\n        } : function (target, value) {\n          desc.set.call(target, value);\n        });\n      }\n    } else get = function (target) {\n      return target[name];\n    }, 0 === kind && (set = function (target, v) {\n      target[name] = v;\n    });\n    var has = isPrivate ? hasPrivateBrand.bind() : function (target) {\n      return name in target;\n    };\n    ctx.access = get && set ? {\n      get: get,\n      set: set,\n      has: has\n    } : get ? {\n      get: get,\n      has: has\n    } : {\n      set: set,\n      has: has\n    };\n    try {\n      return dec(value, ctx);\n    } finally {\n      decoratorFinishedRef.v = !0;\n    }\n  }\n  function assertCallable(fn, hint) {\n    if (\"function\" != typeof fn) throw new TypeError(hint + \" must be a function\");\n  }\n  function assertValidReturnValue(kind, value) {\n    var type = typeof value;\n    if (1 === kind) {\n      if (\"object\" !== type || null === value) throw new TypeError(\"accessor decorators must return an object with get, set, or init properties or void 0\");\n      void 0 !== value.get && assertCallable(value.get, \"accessor.get\"), void 0 !== value.set && assertCallable(value.set, \"accessor.set\"), void 0 !== value.init && assertCallable(value.init, \"accessor.init\");\n    } else if (\"function\" !== type) {\n      var hint;\n      throw hint = 0 === kind ? \"field\" : 10 === kind ? \"class\" : \"method\", new TypeError(hint + \" decorators must return a function or void 0\");\n    }\n  }\n  function curryThis2(fn) {\n    return function (value) {\n      fn(this, value);\n    };\n  }\n  function applyMemberDec(ret, base, decInfo, name, kind, isStatic, isPrivate, initializers, hasPrivateBrand) {\n    var desc,\n      init,\n      value,\n      fn,\n      newValue,\n      get,\n      set,\n      decs = decInfo[0];\n    if (isPrivate ? desc = 0 === kind || 1 === kind ? {\n      get: (fn = decInfo[3], function () {\n        return fn(this);\n      }),\n      set: curryThis2(decInfo[4])\n    } : 3 === kind ? {\n      get: decInfo[3]\n    } : 4 === kind ? {\n      set: decInfo[3]\n    } : {\n      value: decInfo[3]\n    } : 0 !== kind && (desc = Object.getOwnPropertyDescriptor(base, name)), 1 === kind ? value = {\n      get: desc.get,\n      set: desc.set\n    } : 2 === kind ? value = desc.value : 3 === kind ? value = desc.get : 4 === kind && (value = desc.set), \"function\" == typeof decs) void 0 !== (newValue = memberDec(decs, name, desc, initializers, kind, isStatic, isPrivate, value, hasPrivateBrand)) && (assertValidReturnValue(kind, newValue), 0 === kind ? init = newValue : 1 === kind ? (init = newValue.init, get = newValue.get || value.get, set = newValue.set || value.set, value = {\n      get: get,\n      set: set\n    }) : value = newValue);else for (var i = decs.length - 1; i >= 0; i--) {\n      var newInit;\n      if (void 0 !== (newValue = memberDec(decs[i], name, desc, initializers, kind, isStatic, isPrivate, value, hasPrivateBrand))) assertValidReturnValue(kind, newValue), 0 === kind ? newInit = newValue : 1 === kind ? (newInit = newValue.init, get = newValue.get || value.get, set = newValue.set || value.set, value = {\n        get: get,\n        set: set\n      }) : value = newValue, void 0 !== newInit && (void 0 === init ? init = newInit : \"function\" == typeof init ? init = [init, newInit] : init.push(newInit));\n    }\n    if (0 === kind || 1 === kind) {\n      if (void 0 === init) init = function (instance, init) {\n        return init;\n      };else if (\"function\" != typeof init) {\n        var ownInitializers = init;\n        init = function (instance, init) {\n          for (var value = init, i = 0; i < ownInitializers.length; i++) value = ownInitializers[i].call(instance, value);\n          return value;\n        };\n      } else {\n        var originalInitializer = init;\n        init = function (instance, init) {\n          return originalInitializer.call(instance, init);\n        };\n      }\n      ret.push(init);\n    }\n    0 !== kind && (1 === kind ? (desc.get = value.get, desc.set = value.set) : 2 === kind ? desc.value = value : 3 === kind ? desc.get = value : 4 === kind && (desc.set = value), isPrivate ? 1 === kind ? (ret.push(function (instance, args) {\n      return value.get.call(instance, args);\n    }), ret.push(function (instance, args) {\n      return value.set.call(instance, args);\n    })) : 2 === kind ? ret.push(value) : ret.push(function (instance, args) {\n      return value.call(instance, args);\n    }) : Object.defineProperty(base, name, desc));\n  }\n  function applyMemberDecs(Class, decInfos, instanceBrand) {\n    for (var protoInitializers, staticInitializers, staticBrand, ret = [], existingProtoNonFields = new Map(), existingStaticNonFields = new Map(), i = 0; i < decInfos.length; i++) {\n      var decInfo = decInfos[i];\n      if (Array.isArray(decInfo)) {\n        var base,\n          initializers,\n          kind = decInfo[1],\n          name = decInfo[2],\n          isPrivate = decInfo.length > 3,\n          isStatic = kind >= 5,\n          hasPrivateBrand = instanceBrand;\n        if (isStatic ? (base = Class, 0 !== (kind -= 5) && (initializers = staticInitializers = staticInitializers || []), isPrivate && !staticBrand && (staticBrand = function (_) {\n          return _checkInRHS(_) === Class;\n        }), hasPrivateBrand = staticBrand) : (base = Class.prototype, 0 !== kind && (initializers = protoInitializers = protoInitializers || [])), 0 !== kind && !isPrivate) {\n          var existingNonFields = isStatic ? existingStaticNonFields : existingProtoNonFields,\n            existingKind = existingNonFields.get(name) || 0;\n          if (!0 === existingKind || 3 === existingKind && 4 !== kind || 4 === existingKind && 3 !== kind) throw new Error(\"Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not currently supported by the decorators plugin. Property name was: \" + name);\n          !existingKind && kind > 2 ? existingNonFields.set(name, kind) : existingNonFields.set(name, !0);\n        }\n        applyMemberDec(ret, base, decInfo, name, kind, isStatic, isPrivate, initializers, hasPrivateBrand);\n      }\n    }\n    return pushInitializers(ret, protoInitializers), pushInitializers(ret, staticInitializers), ret;\n  }\n  function pushInitializers(ret, initializers) {\n    initializers && ret.push(function (instance) {\n      for (var i = 0; i < initializers.length; i++) initializers[i].call(instance);\n      return instance;\n    });\n  }\n  return function (targetClass, memberDecs, classDecs, instanceBrand) {\n    return {\n      e: applyMemberDecs(targetClass, memberDecs, instanceBrand),\n      get c() {\n        return function (targetClass, classDecs) {\n          if (classDecs.length > 0) {\n            for (var initializers = [], newClass = targetClass, name = targetClass.name, i = classDecs.length - 1; i >= 0; i--) {\n              var decoratorFinishedRef = {\n                v: !1\n              };\n              try {\n                var nextNewClass = classDecs[i](newClass, {\n                  kind: \"class\",\n                  name: name,\n                  addInitializer: createAddInitializerMethod(initializers, decoratorFinishedRef)\n                });\n              } finally {\n                decoratorFinishedRef.v = !0;\n              }\n              void 0 !== nextNewClass && (assertValidReturnValue(10, nextNewClass), newClass = nextNewClass);\n            }\n            return [newClass, function () {\n              for (var i = 0; i < initializers.length; i++) initializers[i].call(newClass);\n            }];\n          }\n        }(targetClass, classDecs);\n      }\n    };\n  };\n}\nfunction _applyDecs2301(targetClass, memberDecs, classDecs, instanceBrand) {\n  return (_applyDecs2301 = applyDecs2301Factory())(targetClass, memberDecs, classDecs, instanceBrand);\n}\nfunction createAddInitializerMethod(initializers, decoratorFinishedRef) {\n  return function (initializer) {\n    assertNotFinished(decoratorFinishedRef, \"addInitializer\"), assertCallable(initializer, \"An initializer\"), initializers.push(initializer);\n  };\n}\nfunction assertInstanceIfPrivate(has, target) {\n  if (!has(target)) throw new TypeError(\"Attempted to access private element on non-instance\");\n}\nfunction memberDec(dec, thisArg, name, desc, initializers, kind, isStatic, isPrivate, value, hasPrivateBrand) {\n  var kindStr;\n  switch (kind) {\n    case 1:\n      kindStr = \"accessor\";\n      break;\n    case 2:\n      kindStr = \"method\";\n      break;\n    case 3:\n      kindStr = \"getter\";\n      break;\n    case 4:\n      kindStr = \"setter\";\n      break;\n    default:\n      kindStr = \"field\";\n  }\n  var get,\n    set,\n    ctx = {\n      kind: kindStr,\n      name: isPrivate ? \"#\" + name : name,\n      static: isStatic,\n      private: isPrivate\n    },\n    decoratorFinishedRef = {\n      v: !1\n    };\n  if (0 !== kind && (ctx.addInitializer = createAddInitializerMethod(initializers, decoratorFinishedRef)), isPrivate || 0 !== kind && 2 !== kind) {\n    if (2 === kind) get = function (target) {\n      return assertInstanceIfPrivate(hasPrivateBrand, target), desc.value;\n    };else {\n      var t = 0 === kind || 1 === kind;\n      (t || 3 === kind) && (get = isPrivate ? function (target) {\n        return assertInstanceIfPrivate(hasPrivateBrand, target), desc.get.call(target);\n      } : function (target) {\n        return desc.get.call(target);\n      }), (t || 4 === kind) && (set = isPrivate ? function (target, value) {\n        assertInstanceIfPrivate(hasPrivateBrand, target), desc.set.call(target, value);\n      } : function (target, value) {\n        desc.set.call(target, value);\n      });\n    }\n  } else get = function (target) {\n    return target[name];\n  }, 0 === kind && (set = function (target, v) {\n    target[name] = v;\n  });\n  var has = isPrivate ? hasPrivateBrand.bind() : function (target) {\n    return name in target;\n  };\n  ctx.access = get && set ? {\n    get: get,\n    set: set,\n    has: has\n  } : get ? {\n    get: get,\n    has: has\n  } : {\n    set: set,\n    has: has\n  };\n  try {\n    return dec.call(thisArg, value, ctx);\n  } finally {\n    decoratorFinishedRef.v = !0;\n  }\n}\nfunction assertNotFinished(decoratorFinishedRef, fnName) {\n  if (decoratorFinishedRef.v) throw new Error(\"attempted to call \" + fnName + \" after decoration was finished\");\n}\nfunction assertCallable(fn, hint) {\n  if (\"function\" != typeof fn) throw new TypeError(hint + \" must be a function\");\n}\nfunction assertValidReturnValue(kind, value) {\n  var type = typeof value;\n  if (1 === kind) {\n    if (\"object\" !== type || null === value) throw new TypeError(\"accessor decorators must return an object with get, set, or init properties or void 0\");\n    void 0 !== value.get && assertCallable(value.get, \"accessor.get\"), void 0 !== value.set && assertCallable(value.set, \"accessor.set\"), void 0 !== value.init && assertCallable(value.init, \"accessor.init\");\n  } else if (\"function\" !== type) {\n    var hint;\n    throw hint = 0 === kind ? \"field\" : 5 === kind ? \"class\" : \"method\", new TypeError(hint + \" decorators must return a function or void 0\");\n  }\n}\nfunction curryThis1(fn) {\n  return function () {\n    return fn(this);\n  };\n}\nfunction curryThis2(fn) {\n  return function (value) {\n    fn(this, value);\n  };\n}\nfunction applyMemberDec(ret, base, decInfo, decoratorsHaveThis, name, kind, isStatic, isPrivate, initializers, hasPrivateBrand) {\n  var desc,\n    init,\n    value,\n    newValue,\n    get,\n    set,\n    decs = decInfo[0];\n  decoratorsHaveThis || Array.isArray(decs) || (decs = [decs]), isPrivate ? desc = 0 === kind || 1 === kind ? {\n    get: curryThis1(decInfo[3]),\n    set: curryThis2(decInfo[4])\n  } : 3 === kind ? {\n    get: decInfo[3]\n  } : 4 === kind ? {\n    set: decInfo[3]\n  } : {\n    value: decInfo[3]\n  } : 0 !== kind && (desc = Object.getOwnPropertyDescriptor(base, name)), 1 === kind ? value = {\n    get: desc.get,\n    set: desc.set\n  } : 2 === kind ? value = desc.value : 3 === kind ? value = desc.get : 4 === kind && (value = desc.set);\n  for (var inc = decoratorsHaveThis ? 2 : 1, i = decs.length - 1; i >= 0; i -= inc) {\n    var newInit;\n    if (void 0 !== (newValue = memberDec(decs[i], decoratorsHaveThis ? decs[i - 1] : void 0, name, desc, initializers, kind, isStatic, isPrivate, value, hasPrivateBrand))) assertValidReturnValue(kind, newValue), 0 === kind ? newInit = newValue : 1 === kind ? (newInit = newValue.init, get = newValue.get || value.get, set = newValue.set || value.set, value = {\n      get: get,\n      set: set\n    }) : value = newValue, void 0 !== newInit && (void 0 === init ? init = newInit : \"function\" == typeof init ? init = [init, newInit] : init.push(newInit));\n  }\n  if (0 === kind || 1 === kind) {\n    if (void 0 === init) init = function (instance, init) {\n      return init;\n    };else if (\"function\" != typeof init) {\n      var ownInitializers = init;\n      init = function (instance, init) {\n        for (var value = init, i = ownInitializers.length - 1; i >= 0; i--) value = ownInitializers[i].call(instance, value);\n        return value;\n      };\n    } else {\n      var originalInitializer = init;\n      init = function (instance, init) {\n        return originalInitializer.call(instance, init);\n      };\n    }\n    ret.push(init);\n  }\n  0 !== kind && (1 === kind ? (desc.get = value.get, desc.set = value.set) : 2 === kind ? desc.value = value : 3 === kind ? desc.get = value : 4 === kind && (desc.set = value), isPrivate ? 1 === kind ? (ret.push(function (instance, args) {\n    return value.get.call(instance, args);\n  }), ret.push(function (instance, args) {\n    return value.set.call(instance, args);\n  })) : 2 === kind ? ret.push(value) : ret.push(function (instance, args) {\n    return value.call(instance, args);\n  }) : Object.defineProperty(base, name, desc));\n}\nfunction applyMemberDecs(Class, decInfos, instanceBrand) {\n  for (var protoInitializers, staticInitializers, staticBrand, ret = [], existingProtoNonFields = new Map(), existingStaticNonFields = new Map(), i = 0; i < decInfos.length; i++) {\n    var decInfo = decInfos[i];\n    if (Array.isArray(decInfo)) {\n      var base,\n        initializers,\n        kind = decInfo[1],\n        name = decInfo[2],\n        isPrivate = decInfo.length > 3,\n        decoratorsHaveThis = 16 & kind,\n        isStatic = !!(8 & kind),\n        hasPrivateBrand = instanceBrand;\n      if (kind &= 7, isStatic ? (base = Class, 0 !== kind && (initializers = staticInitializers = staticInitializers || []), isPrivate && !staticBrand && (staticBrand = function (_) {\n        return _checkInRHS(_) === Class;\n      }), hasPrivateBrand = staticBrand) : (base = Class.prototype, 0 !== kind && (initializers = protoInitializers = protoInitializers || [])), 0 !== kind && !isPrivate) {\n        var existingNonFields = isStatic ? existingStaticNonFields : existingProtoNonFields,\n          existingKind = existingNonFields.get(name) || 0;\n        if (!0 === existingKind || 3 === existingKind && 4 !== kind || 4 === existingKind && 3 !== kind) throw new Error(\"Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not currently supported by the decorators plugin. Property name was: \" + name);\n        existingNonFields.set(name, !(!existingKind && kind > 2) || kind);\n      }\n      applyMemberDec(ret, base, decInfo, decoratorsHaveThis, name, kind, isStatic, isPrivate, initializers, hasPrivateBrand);\n    }\n  }\n  return pushInitializers(ret, protoInitializers), pushInitializers(ret, staticInitializers), ret;\n}\nfunction pushInitializers(ret, initializers) {\n  initializers && ret.push(function (instance) {\n    for (var i = 0; i < initializers.length; i++) initializers[i].call(instance);\n    return instance;\n  });\n}\nfunction applyClassDecs(targetClass, classDecs, decoratorsHaveThis) {\n  if (classDecs.length) {\n    for (var initializers = [], newClass = targetClass, name = targetClass.name, inc = decoratorsHaveThis ? 2 : 1, i = classDecs.length - 1; i >= 0; i -= inc) {\n      var decoratorFinishedRef = {\n        v: !1\n      };\n      try {\n        var nextNewClass = classDecs[i].call(decoratorsHaveThis ? classDecs[i - 1] : void 0, newClass, {\n          kind: \"class\",\n          name: name,\n          addInitializer: createAddInitializerMethod(initializers, decoratorFinishedRef)\n        });\n      } finally {\n        decoratorFinishedRef.v = !0;\n      }\n      void 0 !== nextNewClass && (assertValidReturnValue(5, nextNewClass), newClass = nextNewClass);\n    }\n    return [newClass, function () {\n      for (var i = 0; i < initializers.length; i++) initializers[i].call(newClass);\n    }];\n  }\n}\nfunction _applyDecs2305(targetClass, memberDecs, classDecs, classDecsHaveThis, instanceBrand) {\n  return {\n    e: applyMemberDecs(targetClass, memberDecs, instanceBrand),\n    get c() {\n      return applyClassDecs(targetClass, classDecs, classDecsHaveThis);\n    }\n  };\n}\nfunction _asyncGeneratorDelegate(inner) {\n  var iter = {},\n    waiting = !1;\n  function pump(key, value) {\n    return waiting = !0, value = new Promise(function (resolve) {\n      resolve(inner[key](value));\n    }), {\n      done: !1,\n      value: new _OverloadYield(value, 1)\n    };\n  }\n  return iter[\"undefined\" != typeof Symbol && Symbol.iterator || \"@@iterator\"] = function () {\n    return this;\n  }, iter.next = function (value) {\n    return waiting ? (waiting = !1, value) : pump(\"next\", value);\n  }, \"function\" == typeof inner.throw && (iter.throw = function (value) {\n    if (waiting) throw waiting = !1, value;\n    return pump(\"throw\", value);\n  }), \"function\" == typeof inner.return && (iter.return = function (value) {\n    return waiting ? (waiting = !1, value) : pump(\"return\", value);\n  }), iter;\n}\nfunction _asyncIterator(iterable) {\n  var method,\n    async,\n    sync,\n    retry = 2;\n  for (\"undefined\" != typeof Symbol && (async = Symbol.asyncIterator, sync = Symbol.iterator); retry--;) {\n    if (async && null != (method = iterable[async])) return method.call(iterable);\n    if (sync && null != (method = iterable[sync])) return new AsyncFromSyncIterator(method.call(iterable));\n    async = \"@@asyncIterator\", sync = \"@@iterator\";\n  }\n  throw new TypeError(\"Object is not async iterable\");\n}\nfunction AsyncFromSyncIterator(s) {\n  function AsyncFromSyncIteratorContinuation(r) {\n    if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\"));\n    var done = r.done;\n    return Promise.resolve(r.value).then(function (value) {\n      return {\n        value: value,\n        done: done\n      };\n    });\n  }\n  return AsyncFromSyncIterator = function (s) {\n    this.s = s, this.n = s.next;\n  }, AsyncFromSyncIterator.prototype = {\n    s: null,\n    n: null,\n    next: function () {\n      return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments));\n    },\n    return: function (value) {\n      var ret = this.s.return;\n      return void 0 === ret ? Promise.resolve({\n        value: value,\n        done: !0\n      }) : AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments));\n    },\n    throw: function (value) {\n      var thr = this.s.return;\n      return void 0 === thr ? Promise.reject(value) : AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments));\n    }\n  }, new AsyncFromSyncIterator(s);\n}\nfunction _awaitAsyncGenerator(value) {\n  return new _OverloadYield(value, 0);\n}\nfunction _checkInRHS(value) {\n  if (Object(value) !== value) throw TypeError(\"right-hand side of 'in' should be an object, got \" + (null !== value ? typeof value : \"null\"));\n  return value;\n}\nfunction _defineAccessor(type, obj, key, fn) {\n  var desc = {\n    configurable: !0,\n    enumerable: !0\n  };\n  return desc[type] = fn, Object.defineProperty(obj, key, desc);\n}\nfunction dispose_SuppressedError(suppressed, error) {\n  return \"undefined\" != typeof SuppressedError ? dispose_SuppressedError = SuppressedError : (dispose_SuppressedError = function (suppressed, error) {\n    this.suppressed = suppressed, this.error = error, this.stack = new Error().stack;\n  }, dispose_SuppressedError.prototype = Object.create(Error.prototype, {\n    constructor: {\n      value: dispose_SuppressedError,\n      writable: !0,\n      configurable: !0\n    }\n  })), new dispose_SuppressedError(suppressed, error);\n}\nfunction _dispose(stack, error, hasError) {\n  function next() {\n    for (; stack.length > 0;) try {\n      var r = stack.pop(),\n        p = r.d.call(r.v);\n      if (r.a) return Promise.resolve(p).then(next, err);\n    } catch (e) {\n      return err(e);\n    }\n    if (hasError) throw error;\n  }\n  function err(e) {\n    return error = hasError ? new dispose_SuppressedError(e, error) : e, hasError = !0, next();\n  }\n  return next();\n}\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}\nfunction _iterableToArrayLimitLoose(arr, i) {\n  var _i = arr && (\"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]);\n  if (null != _i) {\n    var _s,\n      _arr = [];\n    for (_i = _i.call(arr); arr.length < i && !(_s = _i.next()).done;) _arr.push(_s.value);\n    return _arr;\n  }\n}\nvar REACT_ELEMENT_TYPE;\nfunction _jsx(type, props, key, children) {\n  REACT_ELEMENT_TYPE || (REACT_ELEMENT_TYPE = \"function\" == typeof Symbol && Symbol.for && Symbol.for(\"react.element\") || 60103);\n  var defaultProps = type && type.defaultProps,\n    childrenLength = arguments.length - 3;\n  if (props || 0 === childrenLength || (props = {\n    children: void 0\n  }), 1 === childrenLength) props.children = children;else if (childrenLength > 1) {\n    for (var childArray = new Array(childrenLength), i = 0; i < childrenLength; i++) childArray[i] = arguments[i + 3];\n    props.children = childArray;\n  }\n  if (props && defaultProps) for (var propName in defaultProps) void 0 === props[propName] && (props[propName] = defaultProps[propName]);else props || (props = defaultProps || {});\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: void 0 === key ? null : \"\" + key,\n    ref: null,\n    props: props,\n    _owner: null\n  };\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function () {\n    return exports;\n  };\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function (obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function (method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return {\n          value: void 0,\n          done: !0\n        };\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable || \"\" === iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    throw new TypeError(typeof iterable + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function (skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function () {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function (exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function (type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function (record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function (finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    catch: function (tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function (iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _using(stack, value, isAwait) {\n  if (null == value) return value;\n  if (\"object\" != typeof value) throw new TypeError(\"using declarations can only be used with objects, null, or undefined.\");\n  if (isAwait) var dispose = value[Symbol.asyncDispose || Symbol.for(\"Symbol.asyncDispose\")];\n  if (null == dispose && (dispose = value[Symbol.dispose || Symbol.for(\"Symbol.dispose\")]), \"function\" != typeof dispose) throw new TypeError(\"Property [Symbol.dispose] is not a function.\");\n  return stack.push({\n    v: value,\n    d: dispose,\n    a: isAwait\n  }), value;\n}\nfunction _wrapRegExp() {\n  _wrapRegExp = function (re, groups) {\n    return new BabelRegExp(re, void 0, groups);\n  };\n  var _super = RegExp.prototype,\n    _groups = new WeakMap();\n  function BabelRegExp(re, flags, groups) {\n    var _this = new RegExp(re, flags);\n    return _groups.set(_this, groups || _groups.get(re)), _setPrototypeOf(_this, BabelRegExp.prototype);\n  }\n  function buildGroups(result, re) {\n    var g = _groups.get(re);\n    return Object.keys(g).reduce(function (groups, name) {\n      var i = g[name];\n      if (\"number\" == typeof i) groups[name] = result[i];else {\n        for (var k = 0; void 0 === result[i[k]] && k + 1 < i.length;) k++;\n        groups[name] = result[i[k]];\n      }\n      return groups;\n    }, Object.create(null));\n  }\n  return _inherits(BabelRegExp, RegExp), BabelRegExp.prototype.exec = function (str) {\n    var result = _super.exec.call(this, str);\n    if (result) {\n      result.groups = buildGroups(result, this);\n      var indices = result.indices;\n      indices && (indices.groups = buildGroups(indices, this));\n    }\n    return result;\n  }, BabelRegExp.prototype[Symbol.replace] = function (str, substitution) {\n    if (\"string\" == typeof substitution) {\n      var groups = _groups.get(this);\n      return _super[Symbol.replace].call(this, str, substitution.replace(/\\$<([^>]+)>/g, function (_, name) {\n        var group = groups[name];\n        return \"$\" + (Array.isArray(group) ? group.join(\"$\") : group);\n      }));\n    }\n    if (\"function\" == typeof substitution) {\n      var _this = this;\n      return _super[Symbol.replace].call(this, str, function () {\n        var args = arguments;\n        return \"object\" != typeof args[args.length - 1] && (args = [].slice.call(args)).push(buildGroups(args, _this)), substitution.apply(this, args);\n      });\n    }\n    return _super[Symbol.replace].call(this, str, substitution);\n  }, _wrapRegExp.apply(this, arguments);\n}\nfunction _AwaitValue(value) {\n  this.wrapped = value;\n}\nfunction _wrapAsyncGenerator(fn) {\n  return function () {\n    return new _AsyncGenerator(fn.apply(this, arguments));\n  };\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _defineEnumerableProperties(obj, descs) {\n  for (var key in descs) {\n    var desc = descs[key];\n    desc.configurable = desc.enumerable = true;\n    if (\"value\" in desc) desc.writable = true;\n    Object.defineProperty(obj, key, desc);\n  }\n  if (Object.getOwnPropertySymbols) {\n    var objectSymbols = Object.getOwnPropertySymbols(descs);\n    for (var i = 0; i < objectSymbols.length; i++) {\n      var sym = objectSymbols[i];\n      var desc = descs[sym];\n      desc.configurable = desc.enumerable = true;\n      if (\"value\" in desc) desc.writable = true;\n      Object.defineProperty(obj, sym, desc);\n    }\n  }\n  return obj;\n}\nfunction _defaults(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n  return obj;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? Object(arguments[i]) : {};\n    var ownKeys = Object.keys(source);\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys.push.apply(ownKeys, Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n  return target;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  _setPrototypeOf(subClass, superClass);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}\nfunction _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !_isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return _setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}\nfunction _instanceof(left, right) {\n  if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) {\n    return !!right[Symbol.hasInstance](left);\n  } else {\n    return left instanceof right;\n  }\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _newArrowCheck(innerThis, boundThis) {\n  if (innerThis !== boundThis) {\n    throw new TypeError(\"Cannot instantiate an arrow function\");\n  }\n}\nfunction _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}\nfunction set(target, property, value, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.set) {\n    set = Reflect.set;\n  } else {\n    set = function set(target, property, value, receiver) {\n      var base = _superPropBase(target, property);\n      var desc;\n      if (base) {\n        desc = Object.getOwnPropertyDescriptor(base, property);\n        if (desc.set) {\n          desc.set.call(receiver, value);\n          return true;\n        } else if (!desc.writable) {\n          return false;\n        }\n      }\n      desc = Object.getOwnPropertyDescriptor(receiver, property);\n      if (desc) {\n        if (!desc.writable) {\n          return false;\n        }\n        desc.value = value;\n        Object.defineProperty(receiver, property, desc);\n      } else {\n        _defineProperty(receiver, property, value);\n      }\n      return true;\n    };\n  }\n  return set(target, property, value, receiver);\n}\nfunction _set(target, property, value, receiver, isStrict) {\n  var s = set(target, property, value, receiver || target);\n  if (!s && isStrict) {\n    throw new TypeError('failed to set property');\n  }\n  return value;\n}\nfunction _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\nfunction _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  strings.raw = raw;\n  return strings;\n}\nfunction _readOnlyError(name) {\n  throw new TypeError(\"\\\"\" + name + \"\\\" is read-only\");\n}\nfunction _writeOnlyError(name) {\n  throw new TypeError(\"\\\"\" + name + \"\\\" is write-only\");\n}\nfunction _classNameTDZError(name) {\n  throw new ReferenceError(\"Class \\\"\" + name + \"\\\" cannot be referenced in computed property keys.\");\n}\nfunction _temporalUndefined() {}\nfunction _tdz(name) {\n  throw new ReferenceError(name + \" is not defined - temporal dead zone\");\n}\nfunction _temporalRef(val, name) {\n  return val === _temporalUndefined ? _tdz(name) : val;\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _slicedToArrayLoose(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimitLoose(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _toArray(arr) {\n  return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest();\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _maybeArrayLike(next, arr, i) {\n  if (arr && !Array.isArray(arr) && typeof arr.length === \"number\") {\n    var len = arr.length;\n    return _arrayLikeToArray(arr, i !== void 0 && i < len ? i : len);\n  }\n  return next(arr, i);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function () {};\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function (e) {\n          throw e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function () {\n      it = it.call(o);\n    },\n    n: function () {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function (e) {\n      didErr = true;\n      err = e;\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (it) return (it = it.call(o)).next.bind(it);\n  if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n    if (it) o = it;\n    var i = 0;\n    return function () {\n      if (i >= o.length) return {\n        done: true\n      };\n      return {\n        done: false,\n        value: o[i++]\n      };\n    };\n  }\n  throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _skipFirstGeneratorNext(fn) {\n  return function () {\n    var it = fn.apply(this, arguments);\n    it.next();\n    return it;\n  };\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _initializerWarningHelper(descriptor, context) {\n  throw new Error('Decorating class property failed. Please ensure that ' + 'transform-class-properties is enabled and runs after the decorators transform.');\n}\nfunction _initializerDefineProperty(target, property, descriptor, context) {\n  if (!descriptor) return;\n  Object.defineProperty(target, property, {\n    enumerable: descriptor.enumerable,\n    configurable: descriptor.configurable,\n    writable: descriptor.writable,\n    value: descriptor.initializer ? descriptor.initializer.call(context) : void 0\n  });\n}\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object.keys(descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n  if (desc.initializer === void 0) {\n    Object.defineProperty(target, property, desc);\n    desc = null;\n  }\n  return desc;\n}\nvar id = 0;\nfunction _classPrivateFieldLooseKey(name) {\n  return \"__private_\" + id++ + \"_\" + name;\n}\nfunction _classPrivateFieldLooseBase(receiver, privateKey) {\n  if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {\n    throw new TypeError(\"attempted to use private field on non-instance\");\n  }\n  return receiver;\n}\nfunction _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return _classApplyDescriptorGet(receiver, descriptor);\n}\nfunction _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  _classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}\nfunction _classPrivateFieldDestructureSet(receiver, privateMap) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  return _classApplyDescriptorDestructureSet(receiver, descriptor);\n}\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n  return privateMap.get(receiver);\n}\nfunction _classStaticPrivateFieldSpecGet(receiver, classConstructor, descriptor) {\n  _classCheckPrivateStaticAccess(receiver, classConstructor);\n  _classCheckPrivateStaticFieldDescriptor(descriptor, \"get\");\n  return _classApplyDescriptorGet(receiver, descriptor);\n}\nfunction _classStaticPrivateFieldSpecSet(receiver, classConstructor, descriptor, value) {\n  _classCheckPrivateStaticAccess(receiver, classConstructor);\n  _classCheckPrivateStaticFieldDescriptor(descriptor, \"set\");\n  _classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}\nfunction _classStaticPrivateMethodGet(receiver, classConstructor, method) {\n  _classCheckPrivateStaticAccess(receiver, classConstructor);\n  return method;\n}\nfunction _classStaticPrivateMethodSet() {\n  throw new TypeError(\"attempted to set read only static private field\");\n}\nfunction _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n  return descriptor.value;\n}\nfunction _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n    descriptor.value = value;\n  }\n}\nfunction _classApplyDescriptorDestructureSet(receiver, descriptor) {\n  if (descriptor.set) {\n    if (!(\"__destrObj\" in descriptor)) {\n      descriptor.__destrObj = {\n        set value(v) {\n          descriptor.set.call(receiver, v);\n        }\n      };\n    }\n    return descriptor.__destrObj;\n  } else {\n    if (!descriptor.writable) {\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n    return descriptor;\n  }\n}\nfunction _classStaticPrivateFieldDestructureSet(receiver, classConstructor, descriptor) {\n  _classCheckPrivateStaticAccess(receiver, classConstructor);\n  _classCheckPrivateStaticFieldDescriptor(descriptor, \"set\");\n  return _classApplyDescriptorDestructureSet(receiver, descriptor);\n}\nfunction _classCheckPrivateStaticAccess(receiver, classConstructor) {\n  if (receiver !== classConstructor) {\n    throw new TypeError(\"Private static access of wrong provenance\");\n  }\n}\nfunction _classCheckPrivateStaticFieldDescriptor(descriptor, action) {\n  if (descriptor === undefined) {\n    throw new TypeError(\"attempted to \" + action + \" private static field before its declaration\");\n  }\n}\nfunction _decorate(decorators, factory, superClass, mixins) {\n  var api = _getDecoratorsApi();\n  if (mixins) {\n    for (var i = 0; i < mixins.length; i++) {\n      api = mixins[i](api);\n    }\n  }\n  var r = factory(function initialize(O) {\n    api.initializeInstanceElements(O, decorated.elements);\n  }, superClass);\n  var decorated = api.decorateClass(_coalesceClassElements(r.d.map(_createElementDescriptor)), decorators);\n  api.initializeClassElements(r.F, decorated.elements);\n  return api.runClassFinishers(r.F, decorated.finishers);\n}\nfunction _getDecoratorsApi() {\n  _getDecoratorsApi = function () {\n    return api;\n  };\n  var api = {\n    elementsDefinitionOrder: [[\"method\"], [\"field\"]],\n    initializeInstanceElements: function (O, elements) {\n      [\"method\", \"field\"].forEach(function (kind) {\n        elements.forEach(function (element) {\n          if (element.kind === kind && element.placement === \"own\") {\n            this.defineClassElement(O, element);\n          }\n        }, this);\n      }, this);\n    },\n    initializeClassElements: function (F, elements) {\n      var proto = F.prototype;\n      [\"method\", \"field\"].forEach(function (kind) {\n        elements.forEach(function (element) {\n          var placement = element.placement;\n          if (element.kind === kind && (placement === \"static\" || placement === \"prototype\")) {\n            var receiver = placement === \"static\" ? F : proto;\n            this.defineClassElement(receiver, element);\n          }\n        }, this);\n      }, this);\n    },\n    defineClassElement: function (receiver, element) {\n      var descriptor = element.descriptor;\n      if (element.kind === \"field\") {\n        var initializer = element.initializer;\n        descriptor = {\n          enumerable: descriptor.enumerable,\n          writable: descriptor.writable,\n          configurable: descriptor.configurable,\n          value: initializer === void 0 ? void 0 : initializer.call(receiver)\n        };\n      }\n      Object.defineProperty(receiver, element.key, descriptor);\n    },\n    decorateClass: function (elements, decorators) {\n      var newElements = [];\n      var finishers = [];\n      var placements = {\n        static: [],\n        prototype: [],\n        own: []\n      };\n      elements.forEach(function (element) {\n        this.addElementPlacement(element, placements);\n      }, this);\n      elements.forEach(function (element) {\n        if (!_hasDecorators(element)) return newElements.push(element);\n        var elementFinishersExtras = this.decorateElement(element, placements);\n        newElements.push(elementFinishersExtras.element);\n        newElements.push.apply(newElements, elementFinishersExtras.extras);\n        finishers.push.apply(finishers, elementFinishersExtras.finishers);\n      }, this);\n      if (!decorators) {\n        return {\n          elements: newElements,\n          finishers: finishers\n        };\n      }\n      var result = this.decorateConstructor(newElements, decorators);\n      finishers.push.apply(finishers, result.finishers);\n      result.finishers = finishers;\n      return result;\n    },\n    addElementPlacement: function (element, placements, silent) {\n      var keys = placements[element.placement];\n      if (!silent && keys.indexOf(element.key) !== -1) {\n        throw new TypeError(\"Duplicated element (\" + element.key + \")\");\n      }\n      keys.push(element.key);\n    },\n    decorateElement: function (element, placements) {\n      var extras = [];\n      var finishers = [];\n      for (var decorators = element.decorators, i = decorators.length - 1; i >= 0; i--) {\n        var keys = placements[element.placement];\n        keys.splice(keys.indexOf(element.key), 1);\n        var elementObject = this.fromElementDescriptor(element);\n        var elementFinisherExtras = this.toElementFinisherExtras((0, decorators[i])(elementObject) || elementObject);\n        element = elementFinisherExtras.element;\n        this.addElementPlacement(element, placements);\n        if (elementFinisherExtras.finisher) {\n          finishers.push(elementFinisherExtras.finisher);\n        }\n        var newExtras = elementFinisherExtras.extras;\n        if (newExtras) {\n          for (var j = 0; j < newExtras.length; j++) {\n            this.addElementPlacement(newExtras[j], placements);\n          }\n          extras.push.apply(extras, newExtras);\n        }\n      }\n      return {\n        element: element,\n        finishers: finishers,\n        extras: extras\n      };\n    },\n    decorateConstructor: function (elements, decorators) {\n      var finishers = [];\n      for (var i = decorators.length - 1; i >= 0; i--) {\n        var obj = this.fromClassDescriptor(elements);\n        var elementsAndFinisher = this.toClassDescriptor((0, decorators[i])(obj) || obj);\n        if (elementsAndFinisher.finisher !== undefined) {\n          finishers.push(elementsAndFinisher.finisher);\n        }\n        if (elementsAndFinisher.elements !== undefined) {\n          elements = elementsAndFinisher.elements;\n          for (var j = 0; j < elements.length - 1; j++) {\n            for (var k = j + 1; k < elements.length; k++) {\n              if (elements[j].key === elements[k].key && elements[j].placement === elements[k].placement) {\n                throw new TypeError(\"Duplicated element (\" + elements[j].key + \")\");\n              }\n            }\n          }\n        }\n      }\n      return {\n        elements: elements,\n        finishers: finishers\n      };\n    },\n    fromElementDescriptor: function (element) {\n      var obj = {\n        kind: element.kind,\n        key: element.key,\n        placement: element.placement,\n        descriptor: element.descriptor\n      };\n      var desc = {\n        value: \"Descriptor\",\n        configurable: true\n      };\n      Object.defineProperty(obj, Symbol.toStringTag, desc);\n      if (element.kind === \"field\") obj.initializer = element.initializer;\n      return obj;\n    },\n    toElementDescriptors: function (elementObjects) {\n      if (elementObjects === undefined) return;\n      return _toArray(elementObjects).map(function (elementObject) {\n        var element = this.toElementDescriptor(elementObject);\n        this.disallowProperty(elementObject, \"finisher\", \"An element descriptor\");\n        this.disallowProperty(elementObject, \"extras\", \"An element descriptor\");\n        return element;\n      }, this);\n    },\n    toElementDescriptor: function (elementObject) {\n      var kind = String(elementObject.kind);\n      if (kind !== \"method\" && kind !== \"field\") {\n        throw new TypeError('An element descriptor\\'s .kind property must be either \"method\" or' + ' \"field\", but a decorator created an element descriptor with' + ' .kind \"' + kind + '\"');\n      }\n      var key = _toPropertyKey(elementObject.key);\n      var placement = String(elementObject.placement);\n      if (placement !== \"static\" && placement !== \"prototype\" && placement !== \"own\") {\n        throw new TypeError('An element descriptor\\'s .placement property must be one of \"static\",' + ' \"prototype\" or \"own\", but a decorator created an element descriptor' + ' with .placement \"' + placement + '\"');\n      }\n      var descriptor = elementObject.descriptor;\n      this.disallowProperty(elementObject, \"elements\", \"An element descriptor\");\n      var element = {\n        kind: kind,\n        key: key,\n        placement: placement,\n        descriptor: Object.assign({}, descriptor)\n      };\n      if (kind !== \"field\") {\n        this.disallowProperty(elementObject, \"initializer\", \"A method descriptor\");\n      } else {\n        this.disallowProperty(descriptor, \"get\", \"The property descriptor of a field descriptor\");\n        this.disallowProperty(descriptor, \"set\", \"The property descriptor of a field descriptor\");\n        this.disallowProperty(descriptor, \"value\", \"The property descriptor of a field descriptor\");\n        element.initializer = elementObject.initializer;\n      }\n      return element;\n    },\n    toElementFinisherExtras: function (elementObject) {\n      var element = this.toElementDescriptor(elementObject);\n      var finisher = _optionalCallableProperty(elementObject, \"finisher\");\n      var extras = this.toElementDescriptors(elementObject.extras);\n      return {\n        element: element,\n        finisher: finisher,\n        extras: extras\n      };\n    },\n    fromClassDescriptor: function (elements) {\n      var obj = {\n        kind: \"class\",\n        elements: elements.map(this.fromElementDescriptor, this)\n      };\n      var desc = {\n        value: \"Descriptor\",\n        configurable: true\n      };\n      Object.defineProperty(obj, Symbol.toStringTag, desc);\n      return obj;\n    },\n    toClassDescriptor: function (obj) {\n      var kind = String(obj.kind);\n      if (kind !== \"class\") {\n        throw new TypeError('A class descriptor\\'s .kind property must be \"class\", but a decorator' + ' created a class descriptor with .kind \"' + kind + '\"');\n      }\n      this.disallowProperty(obj, \"key\", \"A class descriptor\");\n      this.disallowProperty(obj, \"placement\", \"A class descriptor\");\n      this.disallowProperty(obj, \"descriptor\", \"A class descriptor\");\n      this.disallowProperty(obj, \"initializer\", \"A class descriptor\");\n      this.disallowProperty(obj, \"extras\", \"A class descriptor\");\n      var finisher = _optionalCallableProperty(obj, \"finisher\");\n      var elements = this.toElementDescriptors(obj.elements);\n      return {\n        elements: elements,\n        finisher: finisher\n      };\n    },\n    runClassFinishers: function (constructor, finishers) {\n      for (var i = 0; i < finishers.length; i++) {\n        var newConstructor = (0, finishers[i])(constructor);\n        if (newConstructor !== undefined) {\n          if (typeof newConstructor !== \"function\") {\n            throw new TypeError(\"Finishers must return a constructor.\");\n          }\n          constructor = newConstructor;\n        }\n      }\n      return constructor;\n    },\n    disallowProperty: function (obj, name, objectType) {\n      if (obj[name] !== undefined) {\n        throw new TypeError(objectType + \" can't have a .\" + name + \" property.\");\n      }\n    }\n  };\n  return api;\n}\nfunction _createElementDescriptor(def) {\n  var key = _toPropertyKey(def.key);\n  var descriptor;\n  if (def.kind === \"method\") {\n    descriptor = {\n      value: def.value,\n      writable: true,\n      configurable: true,\n      enumerable: false\n    };\n  } else if (def.kind === \"get\") {\n    descriptor = {\n      get: def.value,\n      configurable: true,\n      enumerable: false\n    };\n  } else if (def.kind === \"set\") {\n    descriptor = {\n      set: def.value,\n      configurable: true,\n      enumerable: false\n    };\n  } else if (def.kind === \"field\") {\n    descriptor = {\n      configurable: true,\n      writable: true,\n      enumerable: true\n    };\n  }\n  var element = {\n    kind: def.kind === \"field\" ? \"field\" : \"method\",\n    key: key,\n    placement: def.static ? \"static\" : def.kind === \"field\" ? \"own\" : \"prototype\",\n    descriptor: descriptor\n  };\n  if (def.decorators) element.decorators = def.decorators;\n  if (def.kind === \"field\") element.initializer = def.value;\n  return element;\n}\nfunction _coalesceGetterSetter(element, other) {\n  if (element.descriptor.get !== undefined) {\n    other.descriptor.get = element.descriptor.get;\n  } else {\n    other.descriptor.set = element.descriptor.set;\n  }\n}\nfunction _coalesceClassElements(elements) {\n  var newElements = [];\n  var isSameElement = function (other) {\n    return other.kind === \"method\" && other.key === element.key && other.placement === element.placement;\n  };\n  for (var i = 0; i < elements.length; i++) {\n    var element = elements[i];\n    var other;\n    if (element.kind === \"method\" && (other = newElements.find(isSameElement))) {\n      if (_isDataDescriptor(element.descriptor) || _isDataDescriptor(other.descriptor)) {\n        if (_hasDecorators(element) || _hasDecorators(other)) {\n          throw new ReferenceError(\"Duplicated methods (\" + element.key + \") can't be decorated.\");\n        }\n        other.descriptor = element.descriptor;\n      } else {\n        if (_hasDecorators(element)) {\n          if (_hasDecorators(other)) {\n            throw new ReferenceError(\"Decorators can't be placed on different accessors with for \" + \"the same property (\" + element.key + \").\");\n          }\n          other.decorators = element.decorators;\n        }\n        _coalesceGetterSetter(element, other);\n      }\n    } else {\n      newElements.push(element);\n    }\n  }\n  return newElements;\n}\nfunction _hasDecorators(element) {\n  return element.decorators && element.decorators.length;\n}\nfunction _isDataDescriptor(desc) {\n  return desc !== undefined && !(desc.value === undefined && desc.writable === undefined);\n}\nfunction _optionalCallableProperty(obj, name) {\n  var value = obj[name];\n  if (value !== undefined && typeof value !== \"function\") {\n    throw new TypeError(\"Expected '\" + name + \"' to be a function\");\n  }\n  return value;\n}\nfunction _classPrivateMethodGet(receiver, privateSet, fn) {\n  if (!privateSet.has(receiver)) {\n    throw new TypeError(\"attempted to get private field on non-instance\");\n  }\n  return fn;\n}\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) {\n  _checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}\nfunction _classPrivateMethodInitSpec(obj, privateSet) {\n  _checkPrivateRedeclaration(obj, privateSet);\n  privateSet.add(obj);\n}\nfunction _classPrivateMethodSet() {\n  throw new TypeError(\"attempted to reassign private method\");\n}\nfunction _identity(x) {\n  return x;\n}","import { error } from 'cc';\r\nimport { js } from 'cc';\r\nimport { _decorator, Component, Node } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n\r\n\r\n// u00C0-u00FF is latin characters\r\n// u0621-u064a is arabic letters\r\n// u0660-u0669 is arabic numerals\r\n// TODO: figure out way to do this for more languages\r\nconst _nonWordRe = /[^a-zA-Z0-9\\u00C0-\\u00FF\\u0621-\\u064A\\u0660-\\u0669, ]+/g;\r\n\r\nconst GramSizeLower:number = 2;\r\nconst GramSizeUpper :number = 2;\r\nconst UseLevenshtein:number|boolean = 1;\r\nconst DefaultArray:string[] = []\r\n\r\n@ccclass('SearchingMath')\r\nclass SearchingMath {\r\n    \r\n    private levenshtein (str1:string, str2:string):number {\r\n        const current = [];\r\n        let prev:number;\r\n        let value:number;\r\n        for (let i:number = 0; i <= str2.length; i++){\r\n            for (let j:number = 0; j <= str1.length; j++) {\r\n                if (i && j){\r\n                    if (str1.charAt(j - 1) === str2.charAt(i - 1)){\r\n                        value = prev;\r\n                    }else{\r\n                        value = Math.min(current[j], current[j - 1], prev) + 1;\r\n                    }\r\n                } else {\r\n                    value = i + j;\r\n                }\r\n                prev = current[j];\r\n                current[j] = value;\r\n            }\r\n        }\r\n        return current.pop();\r\n    };\r\n\r\n    protected distance (str1:string, str2:string) {\r\n        if (str1 === null && str2 === null) throw 'Trying to compare two null values';\r\n        if (str1 === null || str2 === null) return 0;\r\n        str1 = String(str1); str2 = String(str2);\r\n\r\n        var distance:number = this.levenshtein(str1, str2);\r\n        if (str1.length > str2.length) {\r\n            return 1 - distance / str1.length;\r\n        } else {\r\n            return 1 - distance / str2.length;\r\n        }\r\n    };\r\n\r\n    protected iterateGrams (value:string, gramSize:number):string[] {\r\n        gramSize = gramSize || 2;\r\n        let simplified:string = '-' + value.toLowerCase().replace(_nonWordRe, '') + '-';\r\n        const lenDiff = gramSize - simplified.length;\r\n        const results = [];\r\n        if (lenDiff > 0) {\r\n            for (let i:number = 0; i < lenDiff; ++i) {\r\n                simplified += '-';\r\n            }\r\n        }\r\n        for (let i:number = 0; i < simplified.length - gramSize + 1; ++i) {\r\n            results.push(simplified.slice(i, i + gramSize));\r\n        }\r\n        return results;\r\n    };\r\n\r\n    protected gramCounter (value:string, gramSize:number):object {\r\n        // return an object where key=gram, value=number of occurrences\r\n        gramSize = gramSize || 2;\r\n        const result = {};\r\n        const grams:string[] = this.iterateGrams(value, gramSize);\r\n        let i:number = 0;\r\n        for (i; i < grams.length; ++i) {\r\n            if (grams[i] in result) {\r\n                result[grams[i]] += 1;\r\n            } else {\r\n                result[grams[i]] = 1;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n}\r\n\r\n\r\n@ccclass('SearchingSet')\r\nexport class SearchingSet extends SearchingMath{\r\n\r\n    private gramSizeLower:number = GramSizeLower || 2;\r\n\r\n    private gramSizeUpper:number = GramSizeUpper || 3;\r\n\r\n    private useLevenshtein = (typeof UseLevenshtein !== 'boolean') ? true : UseLevenshtein;\r\n\r\n    private exactSet = Object.create(null);\r\n\r\n    private matchDict = Object.create(null);\r\n\r\n    private items  = Object.create(null);\r\n\r\n    private arr = DefaultArray || [];\r\n\r\n    private _defaultMinScore:number = 0.33;\r\n\r\n    constructor(){\r\n        super();\r\n        let i:number = this.gramSizeLower;\r\n        for (i; i < this.gramSizeUpper + 1; ++i) {\r\n            this.items[i] = [];\r\n        }\r\n        // add all the items to the set\r\n        for (i = 0; i < this.arr.length; ++i) {\r\n            this.add(this.arr[i]);\r\n        }\r\n    }\r\n\r\n    public get(value:string, defaultValue?:string, minMatchScore?:number):any[]{\r\n        // check for value in set, returning defaultValue or null if none found\r\n        if (minMatchScore === undefined) {\r\n            minMatchScore = this._defaultMinScore;\r\n        }\r\n        var result = this._get(value, minMatchScore);\r\n        if (!result && typeof defaultValue !== 'undefined') {\r\n            return [defaultValue];\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public add(value:string) {\r\n        let normalizedValue:string = this._normalizeStr(value);\r\n        if (normalizedValue in this.exactSet) {\r\n            return false;\r\n        }\r\n        let i:number = this.gramSizeLower;\r\n        for (i; i < this.gramSizeUpper + 1; ++i) {\r\n            this._add(value, i);\r\n        }\r\n    }\r\n\r\n    public setMinScore(minScore:number){\r\n        this._defaultMinScore = minScore;\r\n    }\r\n\r\n    // public delete(value:string){\r\n    //     let normalizedValue:string = this._normalizeStr(value);\r\n    //     if (normalizedValue in this.exactSet) {\r\n    //         delete this.exactSet[normalizedValue];\r\n    //     }\r\n    // }\r\n\r\n    public length() {\r\n        let count = 0;\r\n        let prop:string;\r\n        for (prop in this.exactSet) {\r\n            if (Object.prototype.hasOwnProperty.call(this.exactSet, prop)) {\r\n                count += 1;\r\n            }\r\n        }\r\n        return count;\r\n    };\r\n\r\n    public isEmpty() {\r\n        for (var prop in this.exactSet) {            \r\n            if (Object.prototype.hasOwnProperty.call(this.exactSet, prop)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public values():string[] {\r\n        const values = [];\r\n        let prop:string;\r\n        for (prop in this.exactSet) {\r\n            if (Object.prototype.hasOwnProperty.call(this.exactSet, prop)) {\r\n                values.push(this.exactSet[prop]);\r\n            }\r\n        }\r\n        return values;\r\n    }\r\n\r\n    \r\n    protected _get(value:string, minMatchScore:number):any[] {\r\n        let results:any[] = [];\r\n        // start with high gram size and if there are no results, go to lower gram sizes\r\n        for (let gramSize:number = this.gramSizeUpper; gramSize >= this.gramSizeLower; --gramSize) {\r\n            results = this.__get(value, gramSize, minMatchScore);\r\n            if (results && results.length > 0) {\r\n                return results;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    protected __get(value:string, gramSize:number, minMatchScore:number):any[] {\r\n        const normalizedValue:string = this._normalizeStr(value);\r\n        const matches:object = Object.create(null);\r\n        const gramCounts:object = this.gramCounter(normalizedValue, gramSize);\r\n        const items:any[] = this.items[gramSize];\r\n        // \r\n        let sumOfSquareGramCounts:number = 0;\r\n        let gram:string;\r\n        let gramCount:number;\r\n        let i:number;\r\n        let index:number;\r\n        let otherGramCount:number;\r\n        // \r\n        for (gram in gramCounts) {\r\n            gramCount = gramCounts[gram];\r\n            sumOfSquareGramCounts += Math.pow(gramCount, 2);\r\n            if (gram in this.matchDict) {\r\n                for (i = 0; i < this.matchDict[gram].length; ++i) {\r\n                    index = this.matchDict[gram][i][0];\r\n                    otherGramCount = this.matchDict[gram][i][1];\r\n                    if (index in matches) {\r\n                        matches[index] += gramCount * otherGramCount;\r\n                    } else {\r\n                        matches[index] = gramCount * otherGramCount;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (js.isEmptyObject(matches)) {\r\n            return null;\r\n        }\r\n\r\n        const vectorNormal:number = Math.sqrt(sumOfSquareGramCounts);\r\n        let results = [];\r\n        let matchScore:number;\r\n        // build a results list of [score, str]\r\n        for (let matchIndex in matches) {\r\n            matchScore = matches[matchIndex];\r\n            results.push([matchScore / (vectorNormal * items[matchIndex][0]), items[matchIndex][1]]);\r\n        }\r\n        // \r\n        const sortDescending = function(a:any[], b:any[]) {\r\n            if (a[0] < b[0]) {\r\n                return 1;\r\n            } else if (a[0] > b[0]) {\r\n                return -1;\r\n            } else {\r\n                return 0;\r\n            }\r\n        };\r\n        results.sort(sortDescending);\r\n        if (this.useLevenshtein) {\r\n            var newResults = [],\r\n                endIndex = Math.min(50, results.length);\r\n            // truncate somewhat arbitrarily to 50\r\n            for (let i = 0; i < endIndex; ++i) {\r\n                newResults.push([this.distance(results[i][1], normalizedValue), results[i][1]]);\r\n            }\r\n            results = newResults;\r\n            results.sort(sortDescending);\r\n        }\r\n        newResults = [];\r\n        results.forEach(function(scoreWordPair:any[]) {\r\n            if (scoreWordPair[0] >= minMatchScore) {\r\n                newResults.push([scoreWordPair[0], this.exactSet[scoreWordPair[1]]]);\r\n            }\r\n        }.bind(this));\r\n        return newResults;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param value \r\n     * @param gramSize \r\n     */\r\n    protected _add (value:string, gramSize:number) {\r\n        const normalizedValue:string = this._normalizeStr(value);\r\n        const items:any[] = this.items[gramSize] || [];\r\n        const index:number = items.length;\r\n        items.push(0);\r\n\r\n        const gramCounts:object = this.gramCounter(normalizedValue, gramSize);\r\n        let sumOfSquareGramCounts:number = 0;\r\n        let gram:string;\r\n        let gramCount:number;\r\n        for (gram in gramCounts) {\r\n            gramCount = gramCounts[gram];\r\n            sumOfSquareGramCounts += Math.pow(gramCount, 2);\r\n            if (gram in this.matchDict) {\r\n                this.matchDict[gram].push([index, gramCount]);\r\n            } else {\r\n                this.matchDict[gram] = [[index, gramCount]];\r\n            }\r\n        }\r\n        const vectorNormal:number = Math.sqrt(sumOfSquareGramCounts);\r\n        items[index] = [vectorNormal, normalizedValue];\r\n        this.items[gramSize] = items;\r\n        this.exactSet[normalizedValue] = value;\r\n    }\r\n\r\n    protected _normalizeStr (str:string):string {\r\n        if (Object.prototype.toString.call(str) !== '[object String]') {\r\n            error('error str :: ' + str);\r\n            throw 'Must use a string as argument to FuzzySet functions';\r\n        }\r\n        return str.toLowerCase();\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { _decorator, Component, Node } from 'cc';\r\nimport { Enum } from 'cc';\r\nimport { CCString } from 'cc';\r\nimport { js } from 'cc';\r\nimport { IAPIServices, IAPIServicesAdaptor, IServiceConfig } from './interfaces/IAPIServices';\r\nimport { RequestSchema } from '../network/HttpRequestComponent';\r\nimport { error } from 'cc';\r\nimport { DEV } from 'cc/env';\r\nimport { remoteCCClass } from '../../gamify/utils/RemoteScriptImporter';\r\nimport { CCObject } from 'cc';\r\nimport { EventHandler } from 'cc';\r\nimport { resolve } from 'path';\r\nimport { warn } from 'cc';\r\nimport { log } from 'cc';\r\n\r\n// import { excuteAsRemoteClass } from '../../gamify/utils/RemoteScriptImporter';\r\nconst { ccclass, property, executeInEditMode } = _decorator;\r\n\r\nenum RequestMethod {\r\n    GET,\r\n    POST,\r\n    PUT, \r\n    OPTIONS,    \r\n    DELETE\r\n}\r\n\r\nEnum(RequestMethod);\r\n\r\n\r\nenum RequestParamsType {\r\n    KEY_VALUE,\r\n    FUNCTIONAL\r\n}\r\n\r\n\r\n\r\n\r\n@remoteCCClass('RequestParams')\r\n// @executeInEditMode(true)\r\nclass RequestParams extends CCObject {\r\n    @property({\r\n        type:Enum(RequestParamsType)        \r\n    })\r\n    type:RequestParamsType = RequestParamsType.KEY_VALUE;\r\n\r\n    @property\r\n    key:string = '';\r\n\r\n    @property({\r\n        visible(){\r\n            return this.type == RequestParamsType.KEY_VALUE\r\n        }\r\n    })\r\n    value:string = '';\r\n\r\n    @property({\r\n        type:EventHandler,\r\n        visible(){\r\n            return this.type == RequestParamsType.FUNCTIONAL\r\n        },\r\n        displayName:'Value'\r\n    })\r\n    funcionalValue:EventHandler = new EventHandler()\r\n    \r\n}\r\n\r\n// js.unregisterClass(RequestParams);\r\n\r\n@remoteCCClass('ServiceRequestConfig')\r\n// @executeInEditMode(true)\r\nexport class ServiceRequestConfig extends Component implements IServiceConfig {\r\n            \r\n    @property({type:CCString})\r\n    public get serviceName(): string {\r\n        return this._serviceName;\r\n    }\r\n    public set serviceName(value: string) {\r\n        this._serviceName = value;\r\n    }\r\n\r\n    @property({serializable:true})\r\n    private _serviceName: string = null;\r\n\r\n\r\n    @property({\r\n        type:CCString\r\n    })\r\n    public get url(): string|Function {\r\n        return this._url;\r\n    }\r\n    public set url(value: string|Function) {\r\n        this._url = value;\r\n    }\r\n    \r\n    @property({serializable:true, visible:false})\r\n    private _url:string|Function = '/client/lobby-url';\r\n\r\n    @property({\r\n        type:RequestMethod,\r\n        displayName:'Method'\r\n    })\r\n    methodId:RequestMethod = RequestMethod.GET;\r\n\r\n    @property({\r\n        type:[CCString]\r\n    })\r\n    get headers():string[] { return [\"\\'Content-type\\':\\'application\\/json\\'\"]}   // Do not need more other headers.\r\n\r\n    @property({\r\n        type:[RequestParams],\r\n        tooltip:'Copy data from the path (or Value Type) inside \\'Value\\' field to \\n fill the params[Key] field which use to request to url.\\n Using the {path.to..} block to identify the path.'\r\n    })\r\n    params:RequestParams[] = [];\r\n    \r\n    @property({\r\n        type:[RequestParams],\r\n        visible(){\r\n            return this.methodId == RequestMethod.POST\r\n        },\r\n        tooltip:'Copy data from the path (or Value Type) inside \\'Value\\' field to \\n fill the params[Key] field which use to request to url.\\n Using the {path.to..} block to identify the path.'\r\n    })\r\n    payloads:RequestParams[] = [];\r\n\r\n    @property({\r\n        type:[RequestParams],\r\n        tooltip:'Copy data from the path (or Value Type, or Function(state)=>value ) \\n inside \\'Value\\' field to fill the path inside \\'Key\\' field.\\n Using the {path.to..} block to identify the path.'\r\n    })\r\n    responseScripts:RequestParams[] = [];\r\n\r\n    protected _adaptor:IAPIServices|IAPIServicesAdaptor;\r\n    get adaptor():IAPIServices|IAPIServicesAdaptor{\r\n        return this._adaptor;\r\n    }\r\n\r\n    private _waitForReadyCalback:Function[] = [];\r\n\r\n    setAdaptor(adaptor:IAPIServices|IAPIServicesAdaptor){\r\n        this._adaptor = adaptor;\r\n        if(this._waitForReadyCalback && this._waitForReadyCalback.length && adaptor.isReady()){            \r\n            while(this._waitForReadyCalback.length){\r\n                const resolveFunc:Function = this._waitForReadyCalback.shift();\r\n                resolveFunc();\r\n            }\r\n            this._waitForReadyCalback = null;\r\n        }\r\n    }\r\n\r\n    \r\n    /**\r\n     * \r\n     */\r\n    onLoad() {\r\n        if(!this._adaptor){\r\n            //  Run as the independance component.\r\n            if(!this.serviceName) this.serviceName = js.getClassName(this);\r\n            const apiServiceClass:any = js.getClassByName('APIServices');\r\n            let networkOrAdaptor:IAPIServices|IAPIServicesAdaptor = this.node?.getComponent(apiServiceClass) as unknown as IAPIServices|IAPIServicesAdaptor\r\n            if(networkOrAdaptor){\r\n                const serviceConfigs:ServiceRequestConfig[] = this.node.getComponents(ServiceRequestConfig)?.filter((serviceConfig:ServiceRequestConfig)=> serviceConfig.serviceName == this.serviceName);\r\n                if(serviceConfigs){\r\n                    const lastIndex:number = serviceConfigs.length - 1;\r\n                    if(serviceConfigs[lastIndex] && serviceConfigs[serviceConfigs.length - 1] == this){                \r\n                        serviceConfigs.forEach((serviceConfig:ServiceRequestConfig)=>this._adaptor.registerServiceRequest(serviceConfig.serviceName, serviceConfig.getRequestConfig()));\r\n                    }\r\n                }\r\n            }else{\r\n                // error('Error when find APIService')\r\n                const APIServiceAdaptor:any = js.getClassByName('APIServiceAdaptor');\r\n                networkOrAdaptor = (this.node.getComponent(APIServiceAdaptor) || this.node.addComponent(APIServiceAdaptor)) as unknown as IAPIServices|IAPIServicesAdaptor;\r\n            }            \r\n            if(!!networkOrAdaptor) {\r\n                this.setAdaptor(networkOrAdaptor);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    // -----------------------------------\r\n    /**\r\n     * Ultil to \r\n     */\r\n    protected async waitForReady(){\r\n        if(!this._adaptor || (this._adaptor && !this._adaptor.isReady())){\r\n            await new Promise((resolve:Function)=>{\r\n                this._waitForReadyCalback.push(resolve);\r\n            })\r\n        }else{\r\n            warn('SERVICE SETUP DONE !!!!!!!!!!!!!!')\r\n        }\r\n    }\r\n\r\n    // -----------------------------------\r\n\r\n    /**\r\n     * \r\n     * @param triggerParams RequestSchema[] | RequestSchema     Tham số sửa đổi điều kiện request.\r\n     * - Nếu là mảng RequestSchema object, thứ tự các RequestSchema trong mảng tương ứng với thứ tự của từng request trong một service.\r\n     * - Nếu chỉ là RequestSchema object, RequestSchema object sẽ được ap dụng cho toàn bộ request trong service đó.\r\n     * @returns \r\n     */\r\n    async request(triggerParams?:any[]):Promise<any>{\r\n        //         \r\n        await this.waitForReady();\r\n        // \r\n        if(Object.prototype.hasOwnProperty.call(this._adaptor.constructor.prototype,'request')){\r\n            const networkData:any = await (this._adaptor as IAPIServicesAdaptor).request(this.serviceName, triggerParams);\r\n            log('Completed request !!!')\r\n            return networkData;\r\n        }else{\r\n            // Case: the connected adaptor is a network component.\r\n            log('Dispath truc tiep vao networkservice !')\r\n            this._adaptor.dispatch({type:this._adaptor.getRequestAction(this.serviceName), payload:triggerParams});\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    get ResponseAction():string{\r\n        if(this._adaptor){\r\n            return this._adaptor.getResponseAction(this.serviceName);\r\n        }\r\n        return this.serviceName \r\n    }\r\n    \r\n\r\n    /**\r\n     * \r\n     * @returns \r\n     */\r\n    getRequestConfig():RequestSchema{\r\n        const request:RequestSchema = Object.create(null)\r\n        // combinde string params\r\n        const combinedParams:any = js.createMap();\r\n        // combine params\r\n        this.params.forEach((param:RequestParams)=>{      \r\n            if(param.type == RequestParamsType.KEY_VALUE){\r\n                combinedParams[param.key] = param.value;\r\n            }else if(param.type == RequestParamsType.FUNCTIONAL){\r\n                const eventHandler:EventHandler = param.funcionalValue as EventHandler;\r\n                if(eventHandler){\r\n                    const compName:string = eventHandler.component || eventHandler._componentName;\r\n                    const targetCaller:Component = eventHandler.target?.getComponent(compName);\r\n                    if(targetCaller && targetCaller[eventHandler.handler]){                    \r\n                        combinedParams[param.key] = (targetCaller[eventHandler.handler] as Function).bind(targetCaller);\r\n                    }          \r\n                }      \r\n            }\r\n        })\r\n        // combine payload\r\n        const combinedPayloads:any = js.createMap();\r\n        if(this.methodId == RequestMethod.POST){            \r\n            this.payloads.forEach((payload:RequestParams)=>{      \r\n                if(payload.type == RequestParamsType.KEY_VALUE){\r\n                    combinedPayloads[payload.key] = payload.value;\r\n                }else if(payload.type == RequestParamsType.FUNCTIONAL){\r\n                    const eventHandler:EventHandler = payload.funcionalValue as EventHandler;\r\n                    if(eventHandler){\r\n                        const compName:string = eventHandler.component || eventHandler._componentName;\r\n                        const targetCaller:Component = eventHandler.target?.getComponent(compName);\r\n                        if(targetCaller && targetCaller[eventHandler.handler]){                    \r\n                            combinedPayloads[payload.key] = (targetCaller[eventHandler.handler] as Function).bind(targetCaller);\r\n                        }          \r\n                    }      \r\n                }\r\n            })\r\n        }\r\n\r\n        // combine response script\r\n        const responseScriptParams:any = js.createMap();\r\n        this.responseScripts.forEach((param:RequestParams)=>{ \r\n            if(param.type == RequestParamsType.KEY_VALUE){\r\n                responseScriptParams[param.key] = param.value;\r\n            }else if(param.type == RequestParamsType.FUNCTIONAL){\r\n                const eventHandler:EventHandler = param.funcionalValue as EventHandler;\r\n                if(eventHandler){\r\n                    const targetCaller:Component = eventHandler.target?.getComponent(eventHandler.component);\r\n                    if(targetCaller && targetCaller[eventHandler.handler]){                    \r\n                        combinedParams[param.key] = (targetCaller[eventHandler.handler] as Function).bind(targetCaller);\r\n                    }          \r\n                } \r\n            }\r\n        })\r\n        //         \r\n        request.url = this.url;\r\n        request.method = RequestMethod[this.methodId] as 'GET'|'PUT'| 'OPTIONS' | 'POST' | 'DELETE';\r\n        if(this.params.length) {request.params = combinedParams;}\r\n        if(this.methodId == RequestMethod.POST){ request.payload =  combinedPayloads;}\r\n        request.response_script = responseScriptParams;\r\n        // \r\n        return request;\r\n    }\r\n\r\n    \r\n\r\n}\r\n\r\n\r\n","export const GAMIFY_LOCAL_STORAGE:boolean = true;  // Luu local storage state\r\nexport const GAMIFY_LOGS:boolean = false;\r\nexport const GAMIFY_WARNNING:boolean = false;\r\nexport const GAMIFY_RENDER_LOGS:boolean = false;\r\nexport const GAMIFY_DATA_LOGS:boolean = false;\r\nexport const MAX_TIME_RENDER:number = 30; // giây.\r\nexport const REJECT_WHEN_TIMEOUT:boolean = false;","import { _decorator, Component, Enum, error, js, log, Node, Skeleton, sp } from 'cc';\r\nimport { TimelineClip } from '../clip/TimelineClip';\r\nimport { GameUtils } from '../../utils/GameUtils';\r\nimport { Vec2 } from 'cc';\r\nimport { Vec3 } from 'cc';\r\n\r\nconst { ccclass, property, executeInEditMode, menu } = _decorator;\r\nconst COMMAND:string = '{ADJUST_ON_RUNTIME}'\r\n\r\nlet DefaultSkinsEnum = Enum({ '*': -1 });\r\nlet DefaultAnimsEnum = Enum({ '*': -1 });\r\n\r\n\r\n@ccclass('SkeletonClip')\r\n@menu('Gamify/Animation/SkeletonClip')\r\n@executeInEditMode(true)\r\nexport class SkeletonClip extends TimelineClip<sp.Skeleton> {\r\n\r\n    @property({\r\n        type: DefaultAnimsEnum,\r\n        displayName: \"Animation\",\r\n    })\r\n    public get animIndex(): number {\r\n        return this._animIndex;\r\n    }\r\n    public set animIndex(value: number) {\r\n        this._animIndex = value;\r\n        this.updateAnimation();\r\n    }\r\n\r\n    @property({\r\n        type: DefaultSkinsEnum,        \r\n        displayName: \"Skin\"\r\n    })\r\n    public get skinIndex(): number {\r\n        return this._skinIndex;\r\n    }\r\n    public set skinIndex(value: number) {\r\n        this._skinIndex = value;\r\n        this.updateSkin();\r\n    }  \r\n    \r\n    @property({\r\n        serializable:true\r\n    })\r\n    protected _animation:string = '';\r\n\r\n    get animation():string{\r\n        return this._animation\r\n    }\r\n\r\n    @property({\r\n        serializable:true\r\n    })\r\n    protected _skin:string = '';\r\n\r\n    get skin():string{\r\n        return this._skin;\r\n    }\r\n\r\n    @property({\r\n        serializable:true,\r\n        visible:false\r\n    })\r\n    private _skinIndex: number = 0;\r\n\r\n    @property({\r\n        serializable:true,\r\n        animatable:false\r\n    })\r\n    protected _animIndex: number = 0;\r\n    \r\n    /**\r\n     * \r\n     */\r\n    onLoad(){        \r\n        super.onLoad();\r\n        this.generateEnums();\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param config \r\n     * @returns \r\n     */\r\n    public adjust(config:number|string|Vec2|Vec3){\r\n        if(js.isNumber(config)){\r\n            this.combineNumber(config as number);\r\n        }else if(js.isString(config)){\r\n            this.combineString(config as string);\r\n        }else if(js.isChildClassOf(config, Vec2)){\r\n            this.combineVec2(config as Vec2);\r\n        }else if(js.isChildClassOf(config, Vec3)){\r\n            this.combineVec3(config as Vec3);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Check animation index first.\r\n     * @param id \r\n     */\r\n    private combineNumber(id:number){\r\n        if(this.isAdjustOnRuntime(this.animIndex)){\r\n            this.animIndex = id;\r\n        }else if(this.isAdjustOnRuntime(this.skinIndex)){\r\n            this.skinIndex = id;\r\n        }else {\r\n            // this.isLoop = Boolean(id) ? true : false;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Check animation index first.\r\n     * @param animationName \r\n     */\r\n    private combineString(animationName:string){\r\n        if(this.super){\r\n            const skeletonData:sp.SkeletonData = this.super.skeletonData;\r\n            const skinEnum:any = skeletonData['getSkinsEnum']();        \r\n            this.combineNumber(skinEnum[animationName]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * vec2.x : skin index\r\n     * vec2.y : animation index\r\n     * @param vec \r\n     */\r\n    private combineVec2(vec:Vec2){        \r\n        this.skinIndex = this.isAdjustOnRuntime(this.skinIndex) ? vec.x : this.skinIndex;\r\n        this.animIndex = this.isAdjustOnRuntime(this.animIndex) ? vec.y : this.animIndex;        \r\n    }\r\n\r\n    /**\r\n     * vec3.x : skin index\r\n     * vec3.y : animation index\r\n     * vec3.z : loop\r\n     * @param vec \r\n     */\r\n    private combineVec3(vec:Vec3){\r\n        this.skinIndex = this.isAdjustOnRuntime(this.skinIndex) ? vec.x : this.skinIndex;\r\n        this.animIndex = this.isAdjustOnRuntime(this.animIndex) ? vec.y : this.animIndex;\r\n        this.isLoop = !!vec.z ? true : false;\r\n    }\r\n    \r\n    // -------- OVERRIDE -------\r\n\r\n    /**\r\n     * \r\n     * @param isLoop \r\n     */\r\n    async excute(isLoop:boolean = this.isLoop){        \r\n        await new Promise((resolve:Function, reject:Function)=>{\r\n            this.super.setSkin(this.skin);\r\n            if(isLoop){\r\n                this.excute(false).then(()=>{\r\n                    this.super.loop = true;\r\n                    // this.super.setToSetupPose();       \r\n                    this.super.setAnimation(0, this.animation, true);\r\n                    resolve();\r\n                })                 \r\n            }else{                \r\n                // this.super.loop = false;\r\n                // Fixed quicker\r\n                // this.done && this.done();\r\n                this.done = ()=>{ \r\n                    this.done = null;\r\n                    this.super.setCompleteListener(null);\r\n                    resolve();\r\n                };\r\n                this.super.setCompleteListener((trackEntry:sp.spine.TrackEntry) => {                 \r\n                    if(trackEntry.animation && trackEntry.animation.name == this.animation){\r\n                        // this.super.clearTrack(trackEntry.trackIndex);\r\n                        // this.super.clearAnimation();\r\n                        if(this.done) this.done();\r\n                    }\r\n                });\r\n                this.super.setAnimation(0, this.animation, false);\r\n            }\r\n        })\r\n        //         \r\n    }\r\n\r\n    // ---------------------------------------------------------------------\r\n    \r\n    /**\r\n     * \r\n     * @param id \r\n     * @returns \r\n     */\r\n    protected isAdjustOnRuntime(id:number):boolean{\r\n        const skeletonData:sp.SkeletonData = this.super.skeletonData;\r\n        const skinEnum:any = skeletonData['getSkinsEnum']();\r\n        return COMMAND == skinEnum[id];\r\n    }\r\n    \r\n    /**\r\n     * \r\n     */\r\n    protected generateEnums(){\r\n        if(this.super){\r\n            const skeletonData:sp.SkeletonData = this.super.skeletonData;   \r\n            if(skeletonData){\r\n                // const skeletonEnum:any ={ ...skeletonData['getSkinsEnum'](), OPTION:2000};\r\n                const skeletonSkinEnum:any =  skeletonData['getSkinsEnum']();\r\n                const animationSkinEnum:any =  skeletonData['getAnimsEnum']();\r\n                // log('>>>>>>>>>>>>> ' + Enum.getList(skeletonEnum).length)\r\n                // GameUtils.updateEnum(this, 'skinIndex', skeletonData['getSkinsEnum']());\r\n                // GameUtils.updateEnum(this, 'animIndex', skeletonData['getAnimsEnum']());\r\n                GameUtils.updateEnum(this, 'skinIndex', Object.assign({ [COMMAND]: Enum.getList(skeletonSkinEnum).length }, skeletonData['getSkinsEnum']())  );\r\n                GameUtils.updateEnum(this, 'animIndex', Object.assign({ [COMMAND]: Enum.getList(animationSkinEnum).length }, skeletonData['getAnimsEnum']()) );\r\n                this.updateAnimation();\r\n                this.updateSkin();                \r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    protected updateAnimation(){\r\n        if(this.super){\r\n            const skeletonData:sp.SkeletonData = this.super.skeletonData;\r\n            const animEnum:any = skeletonData['getAnimsEnum']();\r\n            this._animation = animEnum[this._animIndex];            \r\n            if(!this.clipName.length) this.clipName = this._animation;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * \r\n     */\r\n    protected updateSkin(){\r\n        if(this.super){\r\n            const skeletonData:sp.SkeletonData = this.super.skeletonData;\r\n            const skinEnum:any = skeletonData['getSkinsEnum']();\r\n            this._skin = skinEnum[this._skinIndex];\r\n            if(this.clipName == this._animation) this.clipName += '.' + this._skin;\r\n        }\r\n    }\r\n    \r\n    // ---------------\r\n\r\n    /**\r\n     * \r\n     */\r\n    protected onDestroy(): void {\r\n        super.onDestroy();  \r\n        this.done && this.done();\r\n        this.done = null;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { _decorator, Component, Node } from 'cc';\r\nimport { SkeletonClip } from '../../parasites/spine/SkeletonClip';\r\nimport { audio, AudioReference } from '../audio/AudioReference';\r\nimport { AudioSource } from 'cc';\r\nimport { AUDIO_LIST } from '../audio/AudioConfig';\r\nimport { Skeleton } from 'cc';\r\nconst { ccclass, property, executeInEditMode, requireComponent } = _decorator;\r\n\r\n// Enum.isEnum()\r\n\r\n@ccclass('SpineClip')\r\n// @requireComponent(Skeleton)\r\n@executeInEditMode(true)\r\nexport class SpineClip extends SkeletonClip {\r\n    @audio(AUDIO_LIST)\r\n    audioOfClip:AudioSource;\r\n\r\n    protected _playlistDuration:number = 0;    \r\n\r\n    /**\r\n     * \r\n     * @param playList \r\n     */\r\n    protected setPlaylist(playList:string[], isOnlyThis:boolean = false){\r\n        super.setPlaylist(playList, isOnlyThis) \r\n        if(this.controller){\r\n            if(!this._playList || (this._playList && !this._playList.length)){\r\n                (this.controller as SpineClip).setPlaylistDuration(0);\r\n            }else{\r\n                (this.controller as SpineClip).setPlaylistDuration((this.controller as SpineClip).playlistDuration + this.playlistDuration);\r\n            }\r\n        }\r\n        // log('----------playlist duration :: ' + this.playlistDuration)\r\n    }\r\n\r\n    get playlistDuration():number{\r\n        if(!this._playlistDuration && !!this.audioOfClip && this.audioOfClip?.duration){\r\n            this._playlistDuration = this.audioOfClip?.duration;         \r\n        }\r\n        return this._playlistDuration;\r\n    }\r\n    \r\n    setPlaylistDuration(time:number){\r\n        this._playlistDuration = time;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param isLoop \r\n     */\r\n    async excute(isLoop:boolean = this.isLoop){ \r\n        this.audioOfClip.play();\r\n        await super.excute(isLoop);\r\n        this.audioOfClip.stop();\r\n    }\r\n}\r\n\r\n\r\n","\r\nimport { _decorator } from 'cc';\r\n\r\n/**\r\n * Predefined variables\r\n * Name = StartActions\r\n * DateTime = Thu May 05 2022 11:04:40 GMT+0700 (Indochina Time)\r\n * Author = hallopatidu\r\n * FileBasename = StartActions.ts\r\n * FileBasenameNoExtension = StartActions\r\n * URL = db://assets/Scripts/ui/actions/StartActions.ts\r\n * ManualUrl = https://docs.cocos.com/creator/3.4/manual/en/\r\n *\r\n */\r\n\r\n// export const LaunchGame:string = 'launch_game';\r\n// export const StartGame = 'start_game';\r\n\r\nexport const ProgressAction = {\r\n    INIT: 'progress_initianizing',\r\n    PROGRESS:'progress_running',\r\n    ERROR:'progress_error',\r\n    COMPLETED:'progress_completed'\r\n}\r\n\r\nexport const MainGameAction = {\r\n    INIT: 'initianize_game',\r\n    START: 'start_game',\r\n    LAUNCH: 'launch_game',\r\n    SETTING: 'setting_game',\r\n    CONTINUE: 'continue_game',\r\n    BUY_FEATURE: 'buy_feature_action',\r\n    QUIT_GAME: 'quit_game',\r\n    CHEAT_GAME: 'cheat_game'\r\n}\r\n\r\nexport const ReelBoardAction = {\r\n    INIT: 'initianize_reelboard',\r\n    SPIN: 'spinning_reelboard',\r\n    STOP: 'stop_reelboard',\r\n    RESULT: 'resulting_reelboard',\r\n    WINNING: 'winning_reelboard',\r\n    TUMBLE: 'tumbling_reelboard',\r\n    END_ROUND: 'ending_round_reelboard',\r\n\r\n    REEL_RENDER_CHANGED: 'reel_render_changed',\r\n    REEL_MOTION_CHANGED: 'reel_motion_changed'\r\n}\r\n\r\nexport const UIAction = {\r\n    SHOW_WALLET_PANEL: 'ui_show_wallet_panel',\r\n    SHOW_GAMEINFO_PANEL: 'ui_show_gameinfo_panel',    \r\n    SHOW_BET_OPTIONS: 'ui_show_bet_options',\r\n    SHOW_AUTOSPIN_OPTIONS: 'ui_show_autospin_options',\r\n    SHOW_HISTORY_PANEL: 'ui_show_history_panel',\r\n    SHOW_HISTORY_DETAIL_PANEL: 'ui_show_history_detail_panel',\r\n    SHOW_HISTORY_DATE_RANGE_PANEL: 'ui_show_history_date_range_panel',\r\n    SHOW_CHEAT_POPUP:'ui_show_cheat_panel'\r\n}\r\n\r\n\r\nexport const API_ACTION = {\r\n    AUTH: 'auth_service',\r\n    CONFI_RESULT: 'config_result_api',\r\n    AUTH_RESULT: 'auth_service_$response',\r\n\r\n    SPIN: 'spin_service',    \r\n    SPIN_RESULT: 'spin_service_$response',\r\n\r\n    FEATURE_BUY: 'feature_buy_service',\r\n    FEATURE_BUY_RESULT: 'feature_buy_service_$response',\r\n    \r\n    TOTAL_HISTORY: 'total_bet_service',\r\n    TOTAL_HISTORY_RESULT: 'total_bet_service_$response',\r\n\r\n    BET_HISTORY: 'detail_bet_service',\r\n    BET_HISTORY_RESULT: 'detail_bet_service_$response',\r\n\r\n    // LOCK_SERVICE: 'locking_service_feature',\r\n    // UNLOCK_SERVICE: 'unlocking_service_feature',\r\n\r\n    SERVICE_ERROR: 'service_error'\r\n}\r\n\r\nexport type GameSettingType = {\r\n    reelBoadSetting?:string,\r\n    apiService?:string,\r\n    reels?:string[]\r\n}\r\n\r\n/**\r\n * Sử dụng để config trong editor.\r\n * Chưa dùng !\r\n */\r\nexport enum GameActionType {\r\n    GAME_INIT,\r\n    GAME_LOADING,\r\n    GAME_LOADING_ERROR,\r\n    GAME_LOADING_COMPLETED,    \r\n    GAME_LAUNCH,\r\n    GAME_STATRT,\r\n}\r\n\r\nexport enum DEFAULT_SYMBOL_TYPE {\r\n    WILD,   \r\n    SCATTER,\r\n    HP1,           // High Pay  \r\n    HP2,             \r\n    HP3,             \r\n    HP4,             \r\n    HP5,             \r\n    HP6,             \r\n    LP1,           // Low Pay \r\n    LP2,\r\n    LP3,\r\n    LP4,\r\n    LP5\r\n}\r\n\r\n\r\n","\r\nimport { _decorator, js, error, log, Component, __private, Constructor } from 'cc';\r\nimport { DEBUG } from 'cc/env';\r\nimport { IGamifyDispatcher } from '../interfaces/IDispatcher';\r\nimport { GAMIFY_LOGS, GAMIFY_WARNNING } from '../utils/Setting';\r\nimport { Action } from './Action';\r\nimport { Dispatcher } from './Dispatcher';\r\nimport { warn } from 'cc';\r\nimport { Eventify } from 'cc';\r\n\r\nconst { ccclass } = _decorator;\r\n\r\n/**\r\n * \r\n * \r\n * Author: Hallopatidu@gmail.com\r\n */\r\n@ccclass('Store')\r\nexport class Store extends Component{\r\n    protected _instanceIndex:number = 0;\r\n    protected __ccClassName:string = '';\r\n    protected _dispatchToken:string = null;\r\n    protected _dispatcher:Dispatcher = null;\r\n    \r\n    private _changed:boolean = false;\r\n    \r\n    \r\n    constructor() {\r\n        super();\r\n        this.__ccClassName = js.getClassName(this);\r\n        let this_class:any = js.getClassByName(this.__ccClassName);\r\n        this._instanceIndex = this_class.__totalInstances ? this_class.__totalInstances + 1 : ++this._instanceIndex;\r\n        this_class.__totalInstances = this._instanceIndex; \r\n        // DEBUG && GAMIFY_LOGS && log('>>>>>>>> Class ' + this.__ccClassName + '  đã tạo ' + _class.__totalInstances + ' instances') ;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    onDestroy(){\r\n        this.removeDispatcher();\r\n        this._dispatchToken = null;\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     * @param {*} newState \r\n     */\r\n    onChanged(){\r\n        // override \r\n        // DEBUG && GAMIFY_LOGS && log('Cập nhật store thành công :: '+ this.__ccClassName)\r\n    }\r\n\r\n    \r\n\r\n    //----------------------------\r\n    // Feature Function\r\n    //----------------------------\r\n\r\n    /**\r\n     * \r\n     */\r\n    public getDispatcher():Dispatcher{\r\n        if(!this._dispatcher ){\r\n            this._dispatcher = Dispatcher.instance;\r\n        }\r\n        return this._dispatcher;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param dispatcher \r\n     * @param isForce \r\n     */\r\n    public setDispatcher(dispatcher:Dispatcher, isForce:boolean = false){\r\n        // \r\n        if(dispatcher){\r\n            !(dispatcher instanceof Dispatcher) ? DEBUG ? error(this.__ccClassName + \".setDispatcher(dispatcher): Dispatcher truyền vào phải khác và là subclass của Dispatcher\") : error(false) : undefined;\r\n            if(!this._dispatchToken){                \r\n                this._dispatcher = dispatcher;                \r\n                this._dispatchToken = this._dispatcher.register(this.__generateCallBack.call(this));\r\n            }else{\r\n                if(isForce){\r\n                    // Gỡ dispatcher cũ.                    \r\n                    this.removeDispatcher();\r\n                    // Gán lại dispatcher\r\n                    this.setDispatcher(dispatcher);\r\n                }\r\n            } \r\n            // dispatcher.test();                   \r\n        }else{\r\n            (!dispatcher && this._dispatcher) ? (DEBUG && GAMIFY_LOGS) ? log(this.__ccClassName + \".setDispatcher(dispatcher): Sử dụng Dispatcher mặc định.\") : error(false) : undefined;\r\n        }        \r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    public removeDispatcher(){\r\n        if(this._dispatcher && this._dispatchToken){\r\n            this._dispatcher.unregister(this._dispatchToken);\r\n        }\r\n        this._dispatchToken = null;\r\n    }\r\n\r\n\r\n    /**\r\n     * This exposes a unique string to identify each store's registered callback.\r\n     * This is used with the dispatcher's waitFor method to declaratively depend\r\n     * on other stores updating themselves first.\r\n     */\r\n    public getDispatchToken(){\r\n        return this._dispatchToken;\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns whether the store has changed during the most recent dispatch.\r\n     */\r\n    public hasChanged(){\r\n        !this.getDispatcher().isDispatching() && GAMIFY_WARNNING ? DEBUG ? warn( this.__ccClassName + \".hasChanged(): This function is only called during dispatching.\") : error(false) : undefined;\r\n        return this._changed;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param token \r\n     */\r\n    public waitFor(token:string){\r\n        this.getDispatcher().waitFor([token])\r\n    }\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Internal Function\r\n    //  _  : Tiền tố dành cho các function gọi trực tiếp trong class.\r\n    //  __ : Tiền tố dành cho các function dạng gọi bất thường hoặc handler.\r\n    // ------------------------------------------------------------------------\r\n\r\n    /**\r\n     * \r\n     * @returns \r\n     */\r\n    protected __generateCallBack():Function{\r\n        return (action:Action)=>{\r\n            this.__invokeOnDispatch(action);\r\n        }\r\n    }\r\n        \r\n    /**\r\n     * \r\n     */\r\n    protected __emitChange() {        \r\n        !this.getDispatcher().isDispatching() && GAMIFY_WARNNING ? DEBUG ? warn( this.__ccClassName + \".__emitChange(): This function is only called during dispatching.\") : error(false) : undefined;\r\n        this._changed = true;\r\n        this.onChanged();\r\n    }\r\n        \r\n     /**\r\n     * This method encapsulates all logic for invoking __onDispatch. It should\r\n     * be used for things like catching changes and emitting them after the\r\n     * subclass has handled a action.\r\n     */\r\n    protected __invokeOnDispatch(action:Action) {\r\n        this._changed = false;\r\n        this.__onDispatch(action);\r\n    }\r\n\r\n\r\n    /**\r\n     * The callback that will be registered with the dispatcher during\r\n     * instantiation. Subclasses must override this method. This callback is the\r\n     * only way the store receives new data.\r\n     */\r\n    protected __onDispatch(action:Action) {        \r\n        !false ? DEBUG ? error( this.__ccClassName + ' có vẻ đã quên overridden hàm __onDispatch(), việc làm này là bắt buộc') : error(false) : undefined;\r\n        this.__emitChange();\r\n    }\r\n\r\n}\r\n\r\n","import { _decorator, Component, Node } from 'cc';\r\nimport { ChainClip } from './ChainClip';\r\nimport { Enum } from 'cc';\r\nimport { js } from 'cc';\r\nimport { override } from '../../gamify/master/ParasiteComponent';\r\nimport { error } from 'cc';\r\nimport { log } from 'cc';\r\nconst { ccclass, property, executeInEditMode } = _decorator;\r\n\r\nenum CLIP_MODE {\r\n    SEQUENCING,\r\n    IN_ORDER\r\n}\r\nEnum(CLIP_MODE)\r\n\r\n@ccclass('TimelineClip')\r\nexport class TimelineClip<SuperComponent> extends ChainClip<SuperComponent> {\r\n    @property({\r\n        type:CLIP_MODE,\r\n        visible(){\r\n            return this.controller == this;\r\n        }\r\n    })\r\n    get mode():CLIP_MODE{\r\n        return this._mode\r\n    }\r\n\r\n    set mode(value:CLIP_MODE){\r\n        this._mode = value;\r\n        this.setMode(value)\r\n    }\r\n\r\n    @property({\r\n        serializable:true,\r\n        visible:false\r\n    })\r\n    protected _mode:CLIP_MODE = CLIP_MODE.SEQUENCING;\r\n\r\n    @property({\r\n        displayName: 'Id'\r\n    })\r\n    get frameId():number{\r\n        return this._frameId\r\n    }\r\n\r\n\r\n\r\n    protected _frameId:number = 0;\r\n\r\n    protected _currentFrameId:number = 0\r\n    get currentFrame():number{\r\n        return this._currentFrameId\r\n    }\r\n\r\n    // protected _time:number = 0;\r\n    protected _currentClipName:string\r\n    get currentClipName():string{\r\n        return this.controller['_currentClipName'];\r\n    }\r\n\r\n    protected _isLoop:boolean = false;\r\n    protected get isLoop():boolean{\r\n        return this._isLoop;\r\n    }\r\n\r\n    protected set isLoop(value:boolean){\r\n        this._isLoop = value;\r\n        if(this.sub !== undefined && this.sub !== null) {\r\n            this.sub['isLoop'] = value;\r\n        }\r\n    }\r\n    \r\n    protected _isPause:boolean = false;\r\n    protected get isPause():boolean{\r\n        return this._isPause;\r\n    }\r\n\r\n    protected set isPause(value:boolean){\r\n        this._isPause = value;\r\n        if(this.sub !== undefined && this.sub !== null) {\r\n            this.sub['isPause'] = value;\r\n        }\r\n    }\r\n\r\n    protected _isPlaying:boolean = false;\r\n    get isPlaying():boolean{\r\n        return (this.controller as TimelineClip<SuperComponent>)._isPlaying;\r\n    }\r\n\r\n    protected set isPlaying(value:boolean){\r\n        this._isPlaying = value;\r\n        if(this.sub !== undefined && this.sub !== null) {\r\n            this.sub['isPlaying'] = value;\r\n        }\r\n    }\r\n    \r\n    protected _playList:string[] = null;\r\n    get playList():string[]{\r\n        return this._playList;\r\n    }\r\n\r\n    protected _currentToken:string;\r\n\r\n    protected done:Function = null;\r\n\r\n    // --------------------------------------------------------------------\r\n\r\n    @override\r\n    protected _updateRealtime(dt:number){\r\n        if(!this.isPause){\r\n            this.super['_updateRealtime'](dt);\r\n            // const skeleton = this.super['_skeleton'];\r\n            // if(skeleton){\r\n            //     // if(this._time > 2){\r\n            //     //     skeleton.time = 0\r\n            //     // }\r\n            //     this._time = skeleton.time;\r\n            //     // log('time: ' + this._time);\r\n            // }\r\n        }\r\n    }\r\n\r\n\r\n    // ---------------------------------------------------------------------\r\n\r\n    /**\r\n     * \r\n     * @param clip \r\n     */\r\n    registerClip(clip:TimelineClip<SuperComponent>){\r\n        if(clip == this){\r\n            const clipNames:string[] = this.controller['_clipNames'];\r\n            this._frameId = clipNames.length;\r\n        }\r\n        super.registerClip(clip);\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    async play(clipOrder?:string|number|Array<string|number>, loop:boolean = false){\r\n        const controller:TimelineClip<SuperComponent> = this.controller as TimelineClip<SuperComponent>;\r\n        if(controller.isPlaying){\r\n            if(controller.isPause){\r\n                controller.resume()\r\n                return;\r\n            }else{\r\n                controller.stop();\r\n            }\r\n        }\r\n        //          \r\n        if(!controller.isPlaying){\r\n            if(this.makePlaylist(clipOrder)){\r\n                // this.stop();\r\n                controller.isLoop = loop;\r\n                controller.isPlaying = true;\r\n                controller.isPause = false;\r\n                // log('\\n [Start] ' + this.playList);\r\n                await controller.progress();\r\n                controller.setPlaylist(null);\r\n            }else{\r\n                error('Can\\'t find out clips with order ' + clipOrder)\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    stop(){        \r\n        // (this.super as sp.Skeleton).setToSetupPose();\r\n        this._isPlaying = false;\r\n        if(this.done) this.done();\r\n        if(this.sub !== undefined && this.sub !== null && this.sub['stop']) {\r\n            this.sub['stop']();\r\n        }\r\n        \r\n    }\r\n\r\n    resume(){\r\n        this.isPause = false; \r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    pause(){\r\n        this.isPause = this.isPlaying && true;\r\n    }\r\n    \r\n    /**\r\n     * \r\n     * @param clipName \r\n     */\r\n    async playFrom(clipName:string|number){\r\n        if(this.mode == CLIP_MODE.SEQUENCING){\r\n            if(!clipName) error(\"Don't know where to start ! clipName is undefined\")\r\n            if(!this.isPlaying){\r\n                if(this.makePlaylist([clipName, undefined])){\r\n                    this.controller['isPlaying'] = true;      \r\n                    this.controller['isPause'] = false;      \r\n                    await this.progress();\r\n                }\r\n            }else{\r\n                this.resume()\r\n            }\r\n        }else{\r\n            error('This funtion is not active in ' + this.mode + ' mode');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param clipName \r\n     */\r\n    async playTo(clipName:string|number){        \r\n        if(this.mode == CLIP_MODE.SEQUENCING){\r\n            if(!clipName) error(\"Don't know where to stop ! clipName is undefined\")\r\n            if(!this.isPlaying){\r\n                if(this.makePlaylist([this.controller.clipName, clipName])){\r\n                    this.controller['isPlaying'] = true;\r\n                    this.controller['isPause'] = false;\r\n                    await this.progress();\r\n                }\r\n            }else{\r\n                this.resume();\r\n            }\r\n        }else{\r\n            error('This funtion is not active in ' + this.mode + ' mode');\r\n        }\r\n    }\r\n    \r\n    // ----------------------------- OVERRIDE ChainClip ----------------------------------------\r\n\r\n    /**\r\n     * \r\n     */\r\n    async progress(clip:ChainClip<SuperComponent> = this.controller){        \r\n        if(clip && (clip as TimelineClip<SuperComponent>).isPlaying){            \r\n            await super.progress(clip);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     */\r\n    async completed(){        \r\n        // this.super.setToSetupPose();        \r\n        this.controller['isPlaying'] = false;\r\n        this.controller['isLoop'] = false;//this.isLoop\r\n        // if(this.done) this.done();\r\n        // log('[END] _playList:: ' + this._playList + '\\n')      \r\n    }\r\n\r\n    /**\r\n     * \r\n     * @returns \r\n     */\r\n    protected isExecutable():boolean {        \r\n        const canPlay:boolean = this.isPlaying && this.isClipInPlayList()//(clip.playList.indexOf(clip.clipName) !== -1) && (clip.mode == CLIP_MODE.IN_ORDER ? clip.playList[0] == clip.clipName : true);\r\n        if(canPlay){\r\n            const controller:TimelineClip<SuperComponent> = this.controller as TimelineClip<SuperComponent>;\r\n            controller._currentClipName = this.clipName;\r\n            controller._currentFrameId = this.frameId;\r\n            const lastId:number = controller.playList.length - 1;\r\n            if(this.clipName == controller.playList[lastId]){\r\n                this._isLoop = controller.isLoop;\r\n            }else{\r\n                this._isLoop = false\r\n            }\r\n        }\r\n        return canPlay;\r\n    }\r\n    \r\n    \r\n    /**\r\n     * \r\n     * @Override\r\n     */\r\n    protected nextClip():TimelineClip<SuperComponent>{  \r\n        let nextClip:TimelineClip<SuperComponent> = null;\r\n        switch(this._mode)  {\r\n            case CLIP_MODE.IN_ORDER:\r\n                if(this.playList && this.playList.length > 1 && this.clipName == this.playList[0]){\r\n                    const nextClipName:string = this.playList[1];\r\n                    if(nextClipName){\r\n                        nextClip = this.getClipByName(nextClipName);\r\n                        this.reducePlaylistInOrderMode();\r\n                    }                    \r\n                }                \r\n                break;                \r\n        }\r\n        return nextClip || (this.sub as TimelineClip<SuperComponent>);        \r\n    }\r\n\r\n    // ---------------------------------------------------------------------\r\n\r\n    /**\r\n     * \r\n     * @returns \r\n     */\r\n    protected isClipInPlayList():boolean {\r\n        return this.playList && this.playList.length && (this.playList.indexOf(this.clipName) !== -1) && (this.mode == CLIP_MODE.IN_ORDER ? this._playList[0] == this.clipName : true)\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param mode \r\n     */\r\n    protected setMode(mode:CLIP_MODE){\r\n        this._mode = mode;\r\n        if(this.sub && this.sub['setMode']){\r\n            this.sub['setMode'](mode);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param playList \r\n     */\r\n    protected setPlaylist(playList:string[], isOnlyThis:boolean = false){\r\n        this._playList = playList;\r\n        if(!isOnlyThis && this.sub !== undefined && this.sub !== null && this.sub['setPlaylist']) {\r\n            this.sub['setPlaylist'](playList);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    protected reducePlaylistInOrderMode(){        \r\n        if(this.mode == CLIP_MODE.IN_ORDER && this.isClipInPlayList()){\r\n            this.playList.shift();\r\n            (this.controller as TimelineClip<SuperComponent>).setPlaylist(this.playList);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param clipName \r\n     * @returns \r\n     */\r\n    protected getClipByName(clipName:string):TimelineClip<SuperComponent>{\r\n        return this.node.components.find((comp:Component)=>{\r\n            return js.isChildClassOf(comp.constructor, TimelineClip) && ((comp as ChainClip).clipName == clipName);\r\n        }) as TimelineClip<SuperComponent>;        \r\n    }\r\n\r\n    /**\r\n     * Make a playlist for clips playing in a sequencing\r\n     * @param clipOrder \r\n     * clipOrder param can be a string, a number or a Array of string or Array of number\r\n     * When it's a number or a string:\r\n     *  clipOrder param is clipName or frame id of clip.\r\n     * When it's a Array :\r\n     *  if clipOrder param has length greater than 1, clip just play with these element of Array which is a frame id or a clip name.\r\n     *      In the case, clip mode is in the order mode, the playing sequencing is made from clipOrder array, Clip would be played with from first element to end element.\r\n     *  if length of clipOrder array equal to 1, clip will be played from first element to end of sequencing (setted on node).\r\n     * @returns \r\n     */\r\n    protected makePlaylist(clipOrder:string|number|Array<string|number>):boolean{\r\n        if(clipOrder || js.isNumber(clipOrder)){\r\n            if(Array.isArray(clipOrder) && clipOrder.length){\r\n                let clipOrderNames:string[] = this.verifyPlaylist(clipOrder);\r\n                if(!clipOrderNames) return false;\r\n                if(clipOrderNames.length > 1){                    \r\n                    if(!clipOrderNames.length) return false;\r\n                    // this._currentToken = this.getToken();\r\n                    if(this.mode == CLIP_MODE.SEQUENCING){\r\n                        let isExecutable:boolean = false;\r\n                        const allClipNames:string[] = this.controller['_clipNames'];\r\n                        clipOrderNames = allClipNames.filter((clipName:string)=>{\r\n                            let excutabled:boolean;\r\n                            if(clipName == clipOrderNames[0]){\r\n                                isExecutable = !isExecutable;\r\n                                excutabled = true;\r\n                                clipOrderNames.shift();\r\n                            }else{\r\n                                excutabled = isExecutable;\r\n                            }\r\n                            return excutabled;\r\n                        })\r\n                    }else{\r\n\r\n                    }\r\n                    this.controller['setPlaylist'](clipOrderNames);\r\n                    return true;\r\n\r\n                }else if(clipOrderNames.length == 1){                    \r\n                    // if(!clipOrderNames.length) return false;\r\n                    const clipOrderName:string = clipOrderNames[0];\r\n                    const allClipNames:string[] = this.controller['_clipNames'];\r\n                    let isExecutable:boolean = false\r\n                    clipOrderNames = allClipNames.filter((clipName:string)=>{\r\n                        if(clipName == clipOrderName){\r\n                            isExecutable = true;\r\n                        }\r\n                        return isExecutable;\r\n                    })\r\n                    // this._currentToken = this.getToken();\r\n                    this.controller['setPlaylist'](clipOrderNames);\r\n                    return true;\r\n\r\n                }else{\r\n                    return false;\r\n                }                \r\n            }else{\r\n                const clipOrderNames:string[] = this.verifyPlaylist([clipOrder as string|number])\r\n                if(!clipOrderNames.length) return false;\r\n                // this._currentToken = this.getToken();\r\n                this.controller['setPlaylist'](clipOrderNames);                \r\n                return true;\r\n            }\r\n        }else{\r\n            // Play through from start clip to end clip            \r\n            // this._currentToken = this.getToken();\r\n            this.controller['setPlaylist'](Array.from(this.controller['_clipNames']))\r\n            return true\r\n        }\r\n        \r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param clipOrders \r\n     * @returns \r\n     */\r\n    protected verifyPlaylist(clipOrders:Array<string|number>):string[]{\r\n        const allClipNames:string[] = this.controller['_clipNames'];\r\n        const playList:string[] = [];\r\n        clipOrders.forEach((value:string|number, indexOrder:number)=>{\r\n            if(value || js.isNumber(value)){\r\n                const clipName:string = allClipNames.find((clipName:string, index:number)=>(clipName == value || index == value))\r\n                if(clipName){\r\n                    playList[indexOrder] = clipName;\r\n                }\r\n            }\r\n        })\r\n        return playList;\r\n    }\r\n\r\n    getIdByName(clipName:string):number{\r\n        const allClipNames:string[] = this.controller['_clipNames'];\r\n        return allClipNames.findIndex((clipName:string, index:number)=>clipName == clipName)\r\n    }\r\n    // ---------------\r\n\r\n    /**\r\n     * \r\n     */\r\n    protected onDestroy(): void {\r\n        super.onDestroy();  \r\n        this.done && this.done();\r\n        this.done = null;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { _decorator, Component, Node } from 'cc';\r\nimport { GamifyScenario } from '../../gamify/GamifyScenario';\r\nimport { DEV } from 'cc/env';\r\nimport { warn } from 'cc';\r\nimport { log } from 'cc';\r\nimport { resolve } from 'path';\r\nimport { GameUtils } from '../../utils/GameUtils';\r\nconst { ccclass, property } = _decorator;\r\n\r\n\r\n\r\n@ccclass('WebSocketComponent')\r\nexport class WebSocketComponent extends GamifyScenario {\r\n\r\n    @property\r\n    private isAutoReconnect:boolean = true;\r\n\r\n    private _client:WebSocket;\r\n\r\n    protected _url:string;\r\n\r\n    private _forceToClose:boolean = false;\r\n\r\n    // onInit(readyStates?: string[]): void {\r\n    //     if(!this.runOnLoad){\r\n    //         this.connect(this.defaultURL)\r\n    //     }\r\n    // }\r\n\r\n    /**\r\n     * \r\n     * @param url \r\n     */\r\n    async connect(url?:string):Promise<WebSocket>{\r\n        if(this._client && this._client.readyState == WebSocket.OPEN){            \r\n            DEV && warn('Just support only one connection in the one Application !')\r\n            this._client.close();\r\n        }\r\n        // \r\n        await new Promise((resolve:Function)=>{  \r\n            // this.isAutoReconnect = true;   \r\n            this._url = url ? url : this._url;\r\n            this._client = new WebSocket(this._url);\r\n            this._client.onopen = (event) => {\r\n                log(\"Opened WebSocket !!!\" + url);\r\n                resolve();\r\n            };\r\n            this._client.onmessage = this.onMessage.bind(this, this._client);\r\n            this._client.onerror = this.onError.bind(this, this._client)\r\n            this._client.onclose = (event) => {\r\n                log(\"WebSocket closed !!!\");\r\n                // this.retryConnection();\r\n                if(this.isAutoReconnect && !this._forceToClose){\r\n                    this.connect(url);\r\n                }\r\n                this._forceToClose = false;\r\n            };\r\n        })\r\n        return this._client;\r\n    }\r\n\r\n    async close():Promise<WebSocket>{\r\n        this._forceToClose = true;\r\n        this._client.close();\r\n        return this._client\r\n    }\r\n\r\n    onMessage(client:WebSocket, event:MessageEvent){        \r\n        GameUtils.setLocalStorageItem('socket_save', JSON.stringify(event))\r\n    }\r\n\r\n    onError(client:WebSocket, event:Event){\r\n        log(\"WebSocket error !!!\");\r\n        \r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param data \r\n     */\r\n    send(data: string | ArrayBufferLike | Blob | ArrayBufferView){\r\n        if(this._client){\r\n            this._client.send(data)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}